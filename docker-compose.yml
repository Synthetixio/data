services:
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    restart: always
    networks:
      - data
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./parquet-data:/var/lib/clickhouse/user_files/parquet-data
    ports:
      - 8123:8123
      - 9000:9000
      - 9009:9009
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 8192M
  db:
    image: ghcr.io/synthetixio/data/postgres:${VERSION}
    restart: always
    networks:
      - data
    environment:
      POSTGRES_PASSWORD: $PG_PASSWORD
      PGDATA: /var/lib/postgresql/data
      POSTGRES_SHARED_BUFFERS: "4GB"
      POSTGRES_WORK_MEM: "100MB"
      POSTGRES_MAINTENANCE_WORK_MEM: "1GB"
      POSTGRES_EFFECTIVE_CACHE_SIZE: "8GB"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 8192M

  indexer:
    build:
      context: ./indexers
      dockerfile: Dockerfile
    networks:
      - data
    restart: always
    env_file:
      - .env
    environment:
      NETWORK_NAME: base_mainnet
      PROTOCOL_NAME: synthetix
    volumes:
      - ./parquet-data:/parquet-data

  indexer-listener:
    build:
      context: ./indexers
      dockerfile: Dockerfile.listener
    networks:
      - data
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    volumes:
      - ./parquet-data:/parquet-data

  transformer:
    image: ghcr.io/synthetixio/data/transformer:${VERSION}
    build:
      context: ./transformers
    env_file:
      - .env
    volumes:
      - ./parquet-data:/parquet-data
      - ./transformers/synthetix:/app/synthetix
    networks:
      - data

  extractors:
    image: ghcr.io/synthetixio/data/extractors:${VERSION}
    build:
      context: ./extractors
    env_file:
      - .env
    volumes:
      - ./extractors:/app
      - ./parquet-data:/parquet-data

  scheduler:
    build:
      context: .
      dockerfile: ./scheduler/Dockerfile
    restart: always
    networks:
      - data
    env_file:
      - .env
    depends_on:
      - db
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:$PG_PASSWORD@db:5432/postgres
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth
    volumes:
      - ./scheduler/dags:/opt/airflow/dags
      - ./scheduler/logs:/opt/airflow/logs
      - ./scheduler/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
      - ./parquet-data:/parquet-data
    ports:
      - "${AIRFLOW_PORT}:8080"

networks:
  data:
    driver: bridge

volumes:
  clickhouse_data:
    driver: local
