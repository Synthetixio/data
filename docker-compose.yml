services:
  indexer:
    build:
      context: ./indexers
      dockerfile: Dockerfile
    networks:
      - data
    restart: always
    env_file:
      - .env
    environment:
      NETWORK_NAME: base_mainnet
      CONFIG_NAME: synthetix-v3
    volumes:
      - ./parquet-data:/parquet-data

  transformer:
    image: ghcr.io/synthetixio/data/transformer:${VERSION}
    build:
      context: ./transformers
    depends_on:
      - db
    env_file:
      - .env
    environment:
      PG_PASSWORD: $PG_PASSWORD
    volumes:
      - ./parquet-data:/parquet-data
      - ./transformers/synthetix:/app/synthetix
    networks:
      - data

  extractors:
    image: ghcr.io/synthetixio/data/extractors:${VERSION}
    build:
      context: ./extractors
    env_file:
      - .env
    volumes:
      - ./extractors:/app
      - ./parquet-data:/parquet-data

  scheduler:
    build:
      context: .
      dockerfile: ./scheduler/Dockerfile
    restart: always
    networks:
      - data
    depends_on:
      - db
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:$PG_PASSWORD@db:5432/postgres
      AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth
    volumes:
      - ./scheduler/dags:/opt/airflow/dags
      - ./scheduler/logs:/opt/airflow/logs
      - ./scheduler/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
      - ./parquet-data:/parquet-data
    ports:
      - "${AIRFLOW_PORT}:8080"

networks:
  data:
    driver: bridge
