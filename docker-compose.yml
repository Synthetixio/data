version: "2.4"

services:
  db:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    networks:
      - data
    environment:
      POSTGRES_PASSWORD: $PG_PASSWORD
      PGDATA: /var/lib/postgresql/data
      POSTGRES_SHARED_BUFFERS: "4GB"
      POSTGRES_WORK_MEM: "100MB"
      POSTGRES_MAINTENANCE_WORK_MEM: "1GB"
      POSTGRES_EFFECTIVE_CACHE_SIZE: "8GB"
    volumes:
      - ./postgres/initdb:/docker-entrypoint-initdb.d
      - ./postgres-data:/var/lib/postgresql/data
      - ./parquet-data:/parquet-data
    ports:
      - "${DB_PORT}:5432"
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 8192M

  base-mainnet-processor:
    build:
      context: ./indexers/base-mainnet
    networks:
      - data
    depends_on:
      - db
    restart: always
    environment:
      DB_PASS: $PG_PASSWORD
    env_file:
      - ./indexers/base-mainnet/.env

  base-sepolia-processor:
    build:
      context: ./indexers/base-sepolia
    networks:
      - data
    depends_on:
      - db
    restart: always
    environment:
      DB_PASS: $PG_PASSWORD
    env_file:
      - ./indexers/base-sepolia/.env

  arbitrum-sepolia-processor:
    build:
      context: ./indexers/arbitrum-sepolia
    networks:
      - data
    depends_on:
      - db
    restart: always
    environment:
      DB_PASS: $PG_PASSWORD
    env_file:
      - ./indexers/arbitrum-sepolia/.env

  arbitrum-mainnet-processor:
    build:
      context: ./indexers/arbitrum-mainnet
    networks:
      - data
    depends_on:
      - db
    restart: always
    environment:
      DB_PASS: $PG_PASSWORD
    env_file:
      - ./indexers/arbitrum-mainnet/.env

  optimism-mainnet-processor:
    build:
      context: ./indexers/optimism-mainnet
    networks:
      - data
    depends_on:
      - db
    restart: always
    environment:
      DB_PASS: $PG_PASSWORD
    env_file:
      - ./indexers/optimism-mainnet/.env

  transformer:
    build:
      context: ./transformers
    depends_on:
      - db
    environment:
      PG_PASSWORD: $PG_PASSWORD
    volumes:
      - ./parquet-data:/parquet-data
      - ./transformers/synthetix:/app/synthetix
    networks:
      - data

  extractors:
    build:
      context: ./extractors
    env_file:
      - .env
    volumes:
      - ./extractors:/app
      - ./parquet-data:/parquet-data

  dashboard:
    build:
      context: ./dashboard
    restart: always
    networks:
      - data
    ports:
      - "${DASHBOARD_PORT}:8501"
    volumes:
      - ${LEGACY_DB_LOCATION}:/app/data/perps.db
      - .streamlit:/app/.streamlit # pass local secrets
      - ./dashboard:/app
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 12288M

  scheduler:
    build:
      context: ./scheduler
    restart: always
    networks:
      - data
    depends_on:
      - db
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:$PG_PASSWORD@db:5432/postgres
    volumes:
      - ./scheduler/dags:/opt/airflow/dags
      - ./scheduler/logs:/opt/airflow/logs
      - ./scheduler/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
      - ./parquet-data:/parquet-data
    ports:
      - "${AIRFLOW_PORT}:8080"

networks:
  data:
    driver: bridge
