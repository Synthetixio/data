{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.2", "generated_at": "2025-03-04T12:53:22.717848Z", "invocation_id": "1d4103c5-a1e8-47c8-94d3-ff9df84e0e9d", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.586009Z", "completed_at": "2025-03-04T12:52:43.608681Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.609335Z", "completed_at": "2025-03-04T12:52:43.609353Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028604984283447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.ambassador_vote_recorded_snax_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_snax_mainnet\".\"ambassador_governance_proxy_event_vote_recorded\"\n", "relation_name": "\"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.600121Z", "completed_at": "2025-03-04T12:52:43.610979Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.613301Z", "completed_at": "2025-03-04T12:52:43.613311Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030518770217895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.blocks_arbitrum_mainnet", "compiled": true, "compiled_code": "with indexer_blocks as (\n    select\n        timestamp as ts,\n        CAST(\n            number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_arbitrum_mainnet\".\"block\"\n),\n\nparquet_blocks as (\n    select\n        TO_TIMESTAMP(timestamp) as ts,\n        CAST(\n            block_number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_arbitrum_mainnet\".\"blocks_parquet\"\n),\n\ncombined_blocks as (\n    select *\n    from\n        indexer_blocks\n\n    union all\n    select *\n    from\n        parquet_blocks\n)\n\nselect\n    block_number,\n    MIN(ts) as ts\nfrom\n    combined_blocks\ngroup by\n    block_number", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"blocks_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.596523Z", "completed_at": "2025-03-04T12:52:43.611578Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.614338Z", "completed_at": "2025-03-04T12:52:43.614346Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.032347679138183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.ambassador_vote_withdrawn_snax_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_snax_mainnet\".\"ambassador_governance_proxy_event_vote_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.604043Z", "completed_at": "2025-03-04T12:52:43.615323Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.618277Z", "completed_at": "2025-03-04T12:52:43.618286Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.034220218658447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.blocks_arbitrum_sepolia", "compiled": true, "compiled_code": "with indexer_blocks as (\n    select\n        timestamp as ts,\n        CAST(\n            number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_arbitrum_sepolia\".\"block\"\n),\n\nparquet_blocks as (\n    select\n        TO_TIMESTAMP(timestamp) as ts,\n        CAST(\n            block_number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_arbitrum_sepolia\".\"blocks_parquet\"\n),\n\ncombined_blocks as (\n    select *\n    from\n        indexer_blocks\n\n    union all\n    select *\n    from\n        parquet_blocks\n)\n\nselect\n    block_number,\n    MIN(ts) as ts\nfrom\n    combined_blocks\ngroup by\n    block_number", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"blocks_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.619203Z", "completed_at": "2025-03-04T12:52:43.628732Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.637943Z", "completed_at": "2025-03-04T12:52:43.637953Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025867223739624023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.blocks_base_mainnet", "compiled": true, "compiled_code": "with indexer_blocks as (\n    select\n        timestamp as ts,\n        CAST(\n            number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_base_mainnet\".\"block\"\n),\n\nparquet_blocks as (\n    select\n        TO_TIMESTAMP(timestamp) as ts,\n        CAST(\n            block_number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_base_mainnet\".\"blocks_parquet\"\n),\n\ncombined_blocks as (\n    select *\n    from\n        indexer_blocks\n\n    union all\n\n    select *\n    from\n        parquet_blocks\n)\n\nselect\n    block_number,\n    MIN(ts) as ts\nfrom\n    combined_blocks\ngroup by\n    block_number", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"blocks_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.629327Z", "completed_at": "2025-03-04T12:52:43.642340Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.645099Z", "completed_at": "2025-03-04T12:52:43.645110Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020809173583984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.blocks_base_sepolia", "compiled": true, "compiled_code": "with indexer_blocks as (\n    select\n        timestamp as ts,\n        CAST(\n            number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_base_sepolia\".\"block\"\n),\n\nparquet_blocks as (\n    select\n        TO_TIMESTAMP(timestamp) as ts,\n        CAST(\n            block_number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_base_sepolia\".\"blocks_parquet\"\n),\n\ncombined_blocks as (\n    select *\n    from\n        indexer_blocks\n\n    union all\n\n    select *\n    from\n        parquet_blocks\n)\n\nselect\n    block_number,\n    MIN(ts) as ts\nfrom\n    combined_blocks\ngroup by\n    block_number", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"blocks_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.639191Z", "completed_at": "2025-03-04T12:52:43.646365Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.649344Z", "completed_at": "2025-03-04T12:52:43.649353Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021433115005493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.blocks_snax_mainnet", "compiled": true, "compiled_code": "select distinct\n    \"timestamp\" as ts,\n    CAST(\n        \"number\" as INTEGER\n    ) as block_number\nfrom\n    \"analytics\".\"raw_snax_mainnet\".\"block\"", "relation_name": "\"analytics\".\"prod_raw_snax_mainnet\".\"blocks_snax_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.633288Z", "completed_at": "2025-03-04T12:52:43.647989Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.651073Z", "completed_at": "2025-03-04T12:52:43.651080Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02607417106628418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.blocks_eth_mainnet", "compiled": true, "compiled_code": "with indexer_blocks as (\n    select\n        timestamp as ts,\n        CAST(\n            number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_eth_mainnet\".\"block\"\n),\n\nparquet_blocks as (\n    select\n        TO_TIMESTAMP(timestamp) as ts,\n        CAST(\n            block_number as INTEGER\n        ) as block_number\n    from\n        \"analytics\".\"raw_eth_mainnet\".\"blocks_parquet\"\n),\n\ncombined_blocks as (\n    select *\n    from\n        indexer_blocks\n\n    union all\n\n    select *\n    from\n        parquet_blocks\n)\n\nselect\n    block_number,\n    MIN(ts) as ts\nfrom\n    combined_blocks\ngroup by\n    block_number", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"blocks_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.653268Z", "completed_at": "2025-03-04T12:52:43.664098Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.666130Z", "completed_at": "2025-03-04T12:52:43.666141Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01918816566467285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.blocks_snax_testnet", "compiled": true, "compiled_code": "select distinct\n    \"timestamp\" as ts,\n    CAST(\n        \"number\" as INTEGER\n    ) as block_number\nfrom\n    \"analytics\".\"raw_snax_testnet\".\"block\"", "relation_name": "\"analytics\".\"prod_raw_snax_testnet\".\"blocks_snax_testnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.659943Z", "completed_at": "2025-03-04T12:52:43.677269Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.679169Z", "completed_at": "2025-03-04T12:52:43.679181Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027326583862304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.buyback_processed_base_mainnet", "compiled": true, "compiled_code": "with legacy_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"buyback_snx_legacy_event_buyback_processed\"\n\n),\n\ncurrent_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"buyback_snx_event_buyback_processed\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    event_name,\n    contract,\n    buyer,\n    snx,\n    usd\nfrom\n    legacy_events\nunion all\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    event_name,\n    contract,\n    buyer,\n    snx,\n    usd\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.667095Z", "completed_at": "2025-03-04T12:52:43.680914Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.684689Z", "completed_at": "2025-03-04T12:52:43.684698Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026303768157958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.buyback_processed_base_sepolia", "compiled": true, "compiled_code": "with current_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"buyback_snx_event_buyback_processed\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    event_name,\n    contract,\n    buyer,\n    snx,\n    usd\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.672119Z", "completed_at": "2025-03-04T12:52:43.682821Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.686658Z", "completed_at": "2025-03-04T12:52:43.686665Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027496814727783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_account_created_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.687617Z", "completed_at": "2025-03-04T12:52:43.698410Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.700535Z", "completed_at": "2025-03-04T12:52:43.700544Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02036738395690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_account_created_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.694909Z", "completed_at": "2025-03-04T12:52:43.702164Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.712152Z", "completed_at": "2025-03-04T12:52:43.712164Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026660919189453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_account_created_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.702799Z", "completed_at": "2025-03-04T12:52:43.714067Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.717018Z", "completed_at": "2025-03-04T12:52:43.717029Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0229794979095459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_account_created_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.706907Z", "completed_at": "2025-03-04T12:52:43.716363Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.722029Z", "completed_at": "2025-03-04T12:52:43.722038Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02311253547668457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_account_created_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.718552Z", "completed_at": "2025-03-04T12:52:43.725350Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.731501Z", "completed_at": "2025-03-04T12:52:43.731511Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01839613914489746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_account_migrated_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"legacy_market_proxy_event_account_migrated\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.727027Z", "completed_at": "2025-03-04T12:52:43.733747Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.742557Z", "completed_at": "2025-03-04T12:52:43.742568Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02479267120361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_delegation_updated_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_delegation_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.739111Z", "completed_at": "2025-03-04T12:52:43.745348Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.748410Z", "completed_at": "2025-03-04T12:52:43.748421Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017844438552856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_delegation_updated_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_delegation_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.735132Z", "completed_at": "2025-03-04T12:52:43.746762Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.752706Z", "completed_at": "2025-03-04T12:52:43.752719Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026735782623291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_delegation_updated_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_delegation_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.749314Z", "completed_at": "2025-03-04T12:52:43.761946Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.764015Z", "completed_at": "2025-03-04T12:52:43.764025Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020455598831176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_delegation_updated_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_delegation_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.756166Z", "completed_at": "2025-03-04T12:52:43.765564Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.771285Z", "completed_at": "2025-03-04T12:52:43.771295Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02405405044555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_delegation_updated_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_delegation_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.767369Z", "completed_at": "2025-03-04T12:52:43.777235Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.780492Z", "completed_at": "2025-03-04T12:52:43.780502Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01803112030029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_deposited_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_deposited\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.772334Z", "completed_at": "2025-03-04T12:52:43.779242Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.785263Z", "completed_at": "2025-03-04T12:52:43.785274Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022170305252075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_deposited_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_deposited\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.781380Z", "completed_at": "2025-03-04T12:52:43.792360Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.794977Z", "completed_at": "2025-03-04T12:52:43.794988Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019382715225219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_deposited_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_deposited\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.788836Z", "completed_at": "2025-03-04T12:52:43.795874Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.798403Z", "completed_at": "2025-03-04T12:52:43.798410Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018693208694458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_deposited_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_deposited\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.801130Z", "completed_at": "2025-03-04T12:52:43.810963Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.816103Z", "completed_at": "2025-03-04T12:52:43.816114Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023002147674560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_deposited_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_deposited\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.804651Z", "completed_at": "2025-03-04T12:52:43.812205Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.817633Z", "completed_at": "2025-03-04T12:52:43.817644Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023542404174804688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_liquidation_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.812828Z", "completed_at": "2025-03-04T12:52:43.823757Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.826311Z", "completed_at": "2025-03-04T12:52:43.826322Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018313884735107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_liquidation_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.819302Z", "completed_at": "2025-03-04T12:52:43.827161Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.830017Z", "completed_at": "2025-03-04T12:52:43.830025Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01851058006286621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_liquidation_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.830950Z", "completed_at": "2025-03-04T12:52:43.840832Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.843848Z", "completed_at": "2025-03-04T12:52:43.843858Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019179582595825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_liquidation_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.834336Z", "completed_at": "2025-03-04T12:52:43.841973Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.844742Z", "completed_at": "2025-03-04T12:52:43.844753Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01920795440673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_liquidation_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.845645Z", "completed_at": "2025-03-04T12:52:43.855976Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.858080Z", "completed_at": "2025-03-04T12:52:43.858092Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019065141677856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_registered_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_market_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.851993Z", "completed_at": "2025-03-04T12:52:43.858966Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.864243Z", "completed_at": "2025-03-04T12:52:43.864251Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021181344985961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_registered_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_market_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.860143Z", "completed_at": "2025-03-04T12:52:43.869070Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.871641Z", "completed_at": "2025-03-04T12:52:43.871649Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016404390335083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_registered_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_market_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.865597Z", "completed_at": "2025-03-04T12:52:43.872486Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.875111Z", "completed_at": "2025-03-04T12:52:43.875121Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01860809326171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_registered_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_market_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.876382Z", "completed_at": "2025-03-04T12:52:43.889957Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.897228Z", "completed_at": "2025-03-04T12:52:43.897242Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02757573127746582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_registered_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_market_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.884106Z", "completed_at": "2025-03-04T12:52:43.896619Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.898911Z", "completed_at": "2025-03-04T12:52:43.898919Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025293827056884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_updated_arbitrum_mainnet", "compiled": true, "compiled_code": "with events as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_market_collateral_deposited\"\n\n        ) as collateral_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_market_collateral_withdrawn\"\n\n        ) as collateral_withdrawn -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_market_usd_deposited\"\n\n        ) as usd_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_market_usd_withdrawn\"\n\n        ) as usd_withdrawn -- noqa: AL05\n)\n\nselect *\nfrom\n    events\norder by\n    block_timestamp", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.891415Z", "completed_at": "2025-03-04T12:52:43.899823Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.908682Z", "completed_at": "2025-03-04T12:52:43.908691Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026651859283447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_updated_arbitrum_sepolia", "compiled": true, "compiled_code": "with events as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_market_collateral_deposited\"\n\n        ) as collateral_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_market_collateral_withdrawn\"\n\n        ) as collateral_withdrawn -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_market_usd_deposited\"\n\n        ) as usd_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_market_usd_withdrawn\"\n\n        ) as usd_withdrawn -- noqa: AL05\n)\n\nselect *\nfrom\n    events\norder by\n    block_timestamp", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.901208Z", "completed_at": "2025-03-04T12:52:43.911449Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.914326Z", "completed_at": "2025-03-04T12:52:43.914334Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023822307586669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_updated_base_mainnet", "compiled": true, "compiled_code": "with events as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_legacy_event_market_usd_deposited\"\n\n        ) as usd_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_legacy_event_market_usd_withdrawn\"\n\n        ) as usd_withdrawn -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_market_collateral_deposited\"\n\n        ) as collateral_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_market_collateral_withdrawn\"\n\n        ) as collateral_withdrawn -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_market_usd_deposited\"\n\n        ) as usd_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_market_usd_withdrawn\"\n\n        ) as usd_withdrawn -- noqa: AL05\n)\n\nselect *\nfrom\n    events\norder by\n    block_timestamp", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.922185Z", "completed_at": "2025-03-04T12:52:43.931513Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.937279Z", "completed_at": "2025-03-04T12:52:43.937293Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02660083770751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_updated_eth_mainnet", "compiled": true, "compiled_code": "with events as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_market_collateral_deposited\"\n\n        ) as collateral_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_market_collateral_withdrawn\"\n\n        ) as collateral_withdrawn -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_market_usd_deposited\"\n\n        ) as usd_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_market_usd_withdrawn\"\n\n        ) as usd_withdrawn -- noqa: AL05\n)\n\nselect *\nfrom\n    events\norder by\n    block_timestamp", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.915854Z", "completed_at": "2025-03-04T12:52:43.935830Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.938358Z", "completed_at": "2025-03-04T12:52:43.938368Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028473854064941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_market_updated_base_sepolia", "compiled": true, "compiled_code": "with events as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_legacy_event_market_usd_deposited\"\n\n        ) as usd_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_legacy_event_market_usd_withdrawn\"\n\n        ) as usd_withdrawn -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_market_collateral_deposited\"\n\n        ) as collateral_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_market_collateral_withdrawn\"\n\n        ) as collateral_withdrawn -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_market_usd_deposited\"\n\n        ) as usd_deposited -- noqa: AL05\n    union all\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        deposited_collateral_value,\n        target as sender,\n        'USD' as collateral_type,\n        credit_capacity,\n        amount as token_amount\n    from\n        (\n            \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_market_usd_withdrawn\"\n\n        ) as usd_withdrawn -- noqa: AL05\n)\n\nselect *\nfrom\n    events\norder by\n    block_timestamp", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.932149Z", "completed_at": "2025-03-04T12:52:43.942787Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.946102Z", "completed_at": "2025-03-04T12:52:43.946113Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03105330467224121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_pool_created_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_pool_created\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.939287Z", "completed_at": "2025-03-04T12:52:43.947101Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.950045Z", "completed_at": "2025-03-04T12:52:43.950053Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019298076629638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_pool_created_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_pool_created\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.953486Z", "completed_at": "2025-03-04T12:52:43.968241Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.970259Z", "completed_at": "2025-03-04T12:52:43.970271Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022723674774169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_pool_created_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_pool_created\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.957835Z", "completed_at": "2025-03-04T12:52:43.969550Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.975576Z", "completed_at": "2025-03-04T12:52:43.975585Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027382612228393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_pool_created_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_pool_created\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.963247Z", "completed_at": "2025-03-04T12:52:43.974820Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.977422Z", "completed_at": "2025-03-04T12:52:43.977430Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025363683700561523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_pool_created_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_pool_created\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.971262Z", "completed_at": "2025-03-04T12:52:43.979275Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:43.982726Z", "completed_at": "2025-03-04T12:52:43.982734Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020544052124023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_claimed_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_rewards_claimed\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.986208Z", "completed_at": "2025-03-04T12:52:43.999000Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.000721Z", "completed_at": "2025-03-04T12:52:44.000734Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02061605453491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_claimed_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_rewards_claimed\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.991091Z", "completed_at": "2025-03-04T12:52:44.001623Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.007430Z", "completed_at": "2025-03-04T12:52:44.007439Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02586197853088379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_claimed_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_rewards_claimed\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:43.995576Z", "completed_at": "2025-03-04T12:52:44.002184Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.008374Z", "completed_at": "2025-03-04T12:52:44.008382Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02431511878967285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_claimed_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_rewards_claimed\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.002790Z", "completed_at": "2025-03-04T12:52:44.010099Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.014764Z", "completed_at": "2025-03-04T12:52:44.014774Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020143985748291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_claimed_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_rewards_claimed\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.017278Z", "completed_at": "2025-03-04T12:52:44.024023Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.032315Z", "completed_at": "2025-03-04T12:52:44.032329Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023035526275634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_distributed_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_rewards_distributed\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.028145Z", "completed_at": "2025-03-04T12:52:44.036867Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.039033Z", "completed_at": "2025-03-04T12:52:44.039042Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0224761962890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_distributed_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_rewards_distributed\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.024627Z", "completed_at": "2025-03-04T12:52:44.038123Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.041635Z", "completed_at": "2025-03-04T12:52:44.041642Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025708436965942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_distributed_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_rewards_distributed\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.033612Z", "completed_at": "2025-03-04T12:52:44.040384Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.043280Z", "completed_at": "2025-03-04T12:52:44.043291Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02007269859313965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_distributed_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_rewards_distributed\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.047405Z", "completed_at": "2025-03-04T12:52:44.059419Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.064369Z", "completed_at": "2025-03-04T12:52:44.064383Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023608684539794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_rewards_distributed_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_rewards_distributed\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.055877Z", "completed_at": "2025-03-04T12:52:44.069020Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.071963Z", "completed_at": "2025-03-04T12:52:44.071974Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026271581649780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_burned_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_usd_burned\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.060704Z", "completed_at": "2025-03-04T12:52:44.070971Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.074116Z", "completed_at": "2025-03-04T12:52:44.074124Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02120041847229004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_burned_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_usd_burned\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.065568Z", "completed_at": "2025-03-04T12:52:44.072871Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.075798Z", "completed_at": "2025-03-04T12:52:44.075806Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021475553512573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_burned_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_usd_burned\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.080060Z", "completed_at": "2025-03-04T12:52:44.090146Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.096566Z", "completed_at": "2025-03-04T12:52:44.096581Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023239612579345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_burned_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_usd_burned\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.086693Z", "completed_at": "2025-03-04T12:52:44.101146Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.103721Z", "completed_at": "2025-03-04T12:52:44.103730Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025623321533203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_burned_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_usd_burned\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.091570Z", "completed_at": "2025-03-04T12:52:44.102693Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.105891Z", "completed_at": "2025-03-04T12:52:44.105901Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021966934204101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_minted_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_usd_minted\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.097663Z", "completed_at": "2025-03-04T12:52:44.105289Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.108523Z", "completed_at": "2025-03-04T12:52:44.108532Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02335357666015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_minted_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_usd_minted\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.111135Z", "completed_at": "2025-03-04T12:52:44.118358Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.126440Z", "completed_at": "2025-03-04T12:52:44.126451Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02188873291015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_minted_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_usd_minted\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.118970Z", "completed_at": "2025-03-04T12:52:44.134098Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.137066Z", "completed_at": "2025-03-04T12:52:44.137078Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02700018882751465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_minted_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_usd_minted\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.123054Z", "completed_at": "2025-03-04T12:52:44.135100Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.137984Z", "completed_at": "2025-03-04T12:52:44.137994Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022384166717529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_usd_minted_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_usd_minted\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.127527Z", "completed_at": "2025-03-04T12:52:44.136411Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.139432Z", "completed_at": "2025-03-04T12:52:44.139439Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.19379615783691406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_collateral_arbitrum_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            amount as numeric\n        ) as amount,\n        cast(\n            value as numeric\n        ) as collateral_value\n    from\n        \"analytics\".\"raw_arbitrum_mainnet\".\"core_get_vault_collateral\"\n    where\n        amount is not null\n)\n\nselect\n    to_timestamp(blocks.timestamp) as ts,\n    cast(\n        blocks.block_number as integer\n    ) as block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.amount / 1e18\n as amount,\n    \n    base.collateral_value / 1e18\n as collateral_value\nfrom\n    base\ninner join \"analytics\".\"raw_arbitrum_mainnet\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.313851Z", "completed_at": "2025-03-04T12:52:44.322686Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.328846Z", "completed_at": "2025-03-04T12:52:44.328862Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.19324064254760742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_collateral_arbitrum_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            amount as numeric\n        ) as amount,\n        cast(\n            value as numeric\n        ) as collateral_value\n    from\n        \"analytics\".\"raw_arbitrum_sepolia\".\"core_get_vault_collateral\"\n    where\n        amount is not null\n)\n\nselect\n    to_timestamp(blocks.timestamp) as ts,\n    cast(\n        blocks.block_number as integer\n    ) as block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.amount / 1e18\n as amount,\n    \n    base.collateral_value / 1e18\n as collateral_value\nfrom\n    base\ninner join \"analytics\".\"raw_arbitrum_sepolia\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.324482Z", "completed_at": "2025-03-04T12:52:44.339360Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.342446Z", "completed_at": "2025-03-04T12:52:44.342457Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023056507110595703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_collateral_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            amount as numeric\n        ) as amount,\n        cast(\n            value as numeric\n        ) as collateral_value\n    from\n        \"analytics\".\"raw_base_mainnet\".\"core_get_vault_collateral\"\n    where\n        amount is not null\n)\n\nselect\n    to_timestamp(blocks.timestamp) as ts,\n    cast(\n        blocks.block_number as integer\n    ) as block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.amount / 1e18\n as amount,\n    \n    base.collateral_value / 1e18\n as collateral_value\nfrom\n    base\ninner join \"analytics\".\"raw_base_mainnet\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.329966Z", "completed_at": "2025-03-04T12:52:44.340508Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.343388Z", "completed_at": "2025-03-04T12:52:44.343399Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02288985252380371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_collateral_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            amount as numeric\n        ) as amount,\n        cast(\n            value as numeric\n        ) as collateral_value\n    from\n        \"analytics\".\"raw_base_sepolia\".\"core_get_vault_collateral\"\n    where\n        amount is not null\n)\n\nselect\n    to_timestamp(blocks.timestamp) as ts,\n    cast(\n        blocks.block_number as integer\n    ) as block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.amount / 1e18\n as amount,\n    \n    base.collateral_value / 1e18\n as collateral_value\nfrom\n    base\ninner join \"analytics\".\"raw_base_sepolia\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.334249Z", "completed_at": "2025-03-04T12:52:44.341835Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.344914Z", "completed_at": "2025-03-04T12:52:44.344924Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023617029190063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_collateral_eth_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            amount as numeric\n        ) as amount,\n        cast(\n            \"value\" as numeric\n        ) as collateral_value\n    from\n        \"analytics\".\"raw_eth_mainnet\".\"core_get_vault_collateral\"\n    where\n        amount is not null\n)\n\nselect\n    to_timestamp(\n        blocks.timestamp\n    ) as ts,\n    base.block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.amount / 1e18\n as amount,\n    \n    base.collateral_value / 1e18\n as collateral_value\nfrom base\ninner join \"analytics\".\"raw_eth_mainnet\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.347569Z", "completed_at": "2025-03-04T12:52:44.356663Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.359029Z", "completed_at": "2025-03-04T12:52:44.359039Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017960548400878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_debt_arbitrum_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            value_1 as numeric\n        ) as debt\n    from\n        \"analytics\".\"raw_arbitrum_mainnet\".\"core_get_vault_debt\"\n    where\n        value_1 is not null\n)\n\nselect\n    to_timestamp(blocks.timestamp) as ts,\n    cast(\n        blocks.block_number as integer\n    ) as block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.debt / 1e18\n as debt\nfrom\n    base\ninner join \"analytics\".\"raw_arbitrum_mainnet\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.359970Z", "completed_at": "2025-03-04T12:52:44.373487Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.375403Z", "completed_at": "2025-03-04T12:52:44.375413Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022882461547851562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_debt_arbitrum_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            value_1 as numeric\n        ) as debt\n    from\n        \"analytics\".\"raw_arbitrum_sepolia\".\"core_get_vault_debt\"\n    where\n        value_1 is not null\n)\n\nselect\n    to_timestamp(blocks.timestamp) as ts,\n    cast(\n        blocks.block_number as integer\n    ) as block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.debt / 1e18\n as debt\nfrom\n    base\ninner join \"analytics\".\"raw_arbitrum_sepolia\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.367940Z", "completed_at": "2025-03-04T12:52:44.374790Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.377507Z", "completed_at": "2025-03-04T12:52:44.377518Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021622419357299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_debt_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            value_1 as numeric\n        ) as debt\n    from\n        \"analytics\".\"raw_base_sepolia\".\"core_get_vault_debt\"\n    where\n        value_1 is not null\n)\n\nselect\n    to_timestamp(blocks.timestamp) as ts,\n    cast(\n        blocks.block_number as integer\n    ) as block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.debt / 1e18\n as debt\nfrom\n    base\ninner join \"analytics\".\"raw_base_sepolia\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.364027Z", "completed_at": "2025-03-04T12:52:44.376904Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.383342Z", "completed_at": "2025-03-04T12:52:44.383351Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028315067291259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_debt_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        CAST(\n            value_1 as numeric\n        ) as debt\n    from\n        \"analytics\".\"raw_base_mainnet\".\"core_get_vault_debt\"\n    where\n        value_1 is not null\n)\n\nselect\n    TO_TIMESTAMP(\n        blocks.timestamp\n    ) as ts,\n    CAST(\n        blocks.block_number as integer\n    ) as block_number,\n    base.contract_address,\n    CAST(\n        base.pool_id as integer\n    ) as pool_id,\n    CAST(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.debt / 1e18\n as debt\nfrom\n    base\ninner join \"analytics\".\"raw_base_mainnet\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.379133Z", "completed_at": "2025-03-04T12:52:44.388256Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.393598Z", "completed_at": "2025-03-04T12:52:44.393612Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01958155632019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_debt_eth_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        block_number,\n        contract_address,\n        chain_id,\n        pool_id,\n        collateral_type,\n        cast(\n            value_1 as numeric\n        ) as debt\n    from\n        \"analytics\".\"raw_eth_mainnet\".\"core_get_vault_debt\"\n    where\n        value_1 is not null\n)\n\nselect\n    to_timestamp(\n        blocks.timestamp\n    ) as ts,\n    base.block_number,\n    base.contract_address,\n    cast(\n        base.pool_id as integer\n    ) as pool_id,\n    cast(\n        base.collateral_type as varchar\n    ) as collateral_type,\n    \n    base.debt / 1e18\n as debt\nfrom base\ninner join \"analytics\".\"raw_eth_mainnet\".\"blocks_parquet\" as blocks\n    on base.block_number = blocks.block_number", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.390111Z", "completed_at": "2025-03-04T12:52:44.401036Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.406893Z", "completed_at": "2025-03-04T12:52:44.406903Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021981239318847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_liquidation_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_vault_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.395140Z", "completed_at": "2025-03-04T12:52:44.406275Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.408580Z", "completed_at": "2025-03-04T12:52:44.408590Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021851062774658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_liquidation_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_vault_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.401802Z", "completed_at": "2025-03-04T12:52:44.409401Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.415262Z", "completed_at": "2025-03-04T12:52:44.415271Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026498794555664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_liquidation_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_vault_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.410779Z", "completed_at": "2025-03-04T12:52:44.418975Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.421730Z", "completed_at": "2025-03-04T12:52:44.421738Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01621723175048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_liquidation_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_vault_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.422631Z", "completed_at": "2025-03-04T12:52:44.435232Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.437440Z", "completed_at": "2025-03-04T12:52:44.437450Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02085280418395996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_vault_liquidation_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_vault_liquidation\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.426220Z", "completed_at": "2025-03-04T12:52:44.436039Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.438398Z", "completed_at": "2025-03-04T12:52:44.438407Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022803068161010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_withdrawn_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"core_proxy_event_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.431763Z", "completed_at": "2025-03-04T12:52:44.441038Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.444407Z", "completed_at": "2025-03-04T12:52:44.444415Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02347707748413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_withdrawn_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"core_proxy_event_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.445346Z", "completed_at": "2025-03-04T12:52:44.452119Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.457603Z", "completed_at": "2025-03-04T12:52:44.457613Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02107071876525879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_withdrawn_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"core_proxy_event_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.454041Z", "completed_at": "2025-03-04T12:52:44.463639Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.469364Z", "completed_at": "2025-03-04T12:52:44.469373Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020679950714111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_withdrawn_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"core_proxy_event_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.458502Z", "completed_at": "2025-03-04T12:52:44.468687Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.471051Z", "completed_at": "2025-03-04T12:52:44.471062Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021691560745239258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.core_withdrawn_eth_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_eth_mainnet\".\"core_proxy_event_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.464646Z", "completed_at": "2025-03-04T12:52:44.471939Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.478005Z", "completed_at": "2025-03-04T12:52:44.478013Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02474236488342285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.gov_vote_recorded_snax_testnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_snax_testnet\".\"governance_proxy_event_vote_recorded\"\n", "relation_name": "\"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.473307Z", "completed_at": "2025-03-04T12:52:44.482497Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.485309Z", "completed_at": "2025-03-04T12:52:44.485318Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017357349395751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.gov_vote_withdrawn_snax_testnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_snax_testnet\".\"governance_proxy_event_vote_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.541410Z", "completed_at": "2025-03-04T12:52:44.546311Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.546940Z", "completed_at": "2025-03-04T12:52:44.546953Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018482208251953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_account_created_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.550069Z", "completed_at": "2025-03-04T12:52:44.553637Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.554212Z", "completed_at": "2025-03-04T12:52:44.554221Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0056765079498291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_account_created_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.557018Z", "completed_at": "2025-03-04T12:52:44.560856Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.561415Z", "completed_at": "2025-03-04T12:52:44.561422Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005709171295166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_account_created_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.564410Z", "completed_at": "2025-03-04T12:52:44.569089Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.569692Z", "completed_at": "2025-03-04T12:52:44.569701Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006907224655151367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_account_created_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_account_created\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.572533Z", "completed_at": "2025-03-04T12:52:44.576183Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.576776Z", "completed_at": "2025-03-04T12:52:44.576784Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005709409713745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_account_liquidation_attempt_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_account_liquidation_attempt\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.580038Z", "completed_at": "2025-03-04T12:52:44.583380Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.583970Z", "completed_at": "2025-03-04T12:52:44.583977Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005796909332275391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_account_liquidation_attempt_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_account_liquidation_attempt\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.586967Z", "completed_at": "2025-03-04T12:52:44.590360Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.590948Z", "completed_at": "2025-03-04T12:52:44.590955Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0054852962493896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_account_liquidation_attempt_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_account_liquidation_attempt\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.594031Z", "completed_at": "2025-03-04T12:52:44.597442Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.598024Z", "completed_at": "2025-03-04T12:52:44.598031Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005712985992431641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_account_liquidation_attempt_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_account_liquidation_attempt\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.601149Z", "completed_at": "2025-03-04T12:52:44.605843Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.606397Z", "completed_at": "2025-03-04T12:52:44.606404Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006898164749145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_collateral_modified_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_collateral_modified\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.609485Z", "completed_at": "2025-03-04T12:52:44.612864Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.613421Z", "completed_at": "2025-03-04T12:52:44.613428Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005528688430786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_collateral_modified_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_collateral_modified\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.616432Z", "completed_at": "2025-03-04T12:52:44.619842Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.620390Z", "completed_at": "2025-03-04T12:52:44.620397Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005500316619873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_collateral_modified_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_collateral_modified\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.623199Z", "completed_at": "2025-03-04T12:52:44.627071Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.627662Z", "completed_at": "2025-03-04T12:52:44.627670Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005899667739868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_collateral_modified_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_collateral_modified\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.630436Z", "completed_at": "2025-03-04T12:52:44.634281Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.634875Z", "completed_at": "2025-03-04T12:52:44.634883Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005867958068847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_interest_charged_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_interest_charged\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.638103Z", "completed_at": "2025-03-04T12:52:44.641612Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.642158Z", "completed_at": "2025-03-04T12:52:44.642166Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005783557891845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_interest_charged_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_interest_charged\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.645113Z", "completed_at": "2025-03-04T12:52:44.650089Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.650773Z", "completed_at": "2025-03-04T12:52:44.650782Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0071392059326171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_interest_charged_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_interest_charged\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.653933Z", "completed_at": "2025-03-04T12:52:44.657605Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.658162Z", "completed_at": "2025-03-04T12:52:44.658170Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0057795047760009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_interest_charged_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_interest_charged\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.660931Z", "completed_at": "2025-03-04T12:52:44.664924Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.665559Z", "completed_at": "2025-03-04T12:52:44.665567Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005979061126708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_interest_rate_updated_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_interest_rate_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.668237Z", "completed_at": "2025-03-04T12:52:44.672252Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.672887Z", "completed_at": "2025-03-04T12:52:44.672895Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005964994430541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_interest_rate_updated_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_interest_rate_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.675735Z", "completed_at": "2025-03-04T12:52:44.679596Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.680191Z", "completed_at": "2025-03-04T12:52:44.680199Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005917787551879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_interest_rate_updated_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_interest_rate_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.682989Z", "completed_at": "2025-03-04T12:52:44.688113Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.688702Z", "completed_at": "2025-03-04T12:52:44.688710Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007129192352294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_interest_rate_updated_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_interest_rate_updated\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.691385Z", "completed_at": "2025-03-04T12:52:44.695126Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.695711Z", "completed_at": "2025-03-04T12:52:44.695718Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005643606185913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_market_created_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_market_created\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.698378Z", "completed_at": "2025-03-04T12:52:44.702357Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.702975Z", "completed_at": "2025-03-04T12:52:44.702983Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00591278076171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_market_created_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_market_created\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.705713Z", "completed_at": "2025-03-04T12:52:44.709782Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.710360Z", "completed_at": "2025-03-04T12:52:44.710367Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005990028381347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_market_created_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_market_created\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.713239Z", "completed_at": "2025-03-04T12:52:44.717095Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.717700Z", "completed_at": "2025-03-04T12:52:44.717707Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0059413909912109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_market_created_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_market_created\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.720375Z", "completed_at": "2025-03-04T12:52:44.724409Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.725003Z", "completed_at": "2025-03-04T12:52:44.725010Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005947589874267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_market_updated_arbitrum_mainnet", "compiled": true, "compiled_code": "with current_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_market_updated\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    price,\n    skew,\n    size,\n    size_delta,\n    current_funding_rate,\n    current_funding_velocity,\n    interest_rate\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.727891Z", "completed_at": "2025-03-04T12:52:44.733477Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.734039Z", "completed_at": "2025-03-04T12:52:44.734047Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0076291561126708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_market_updated_arbitrum_sepolia", "compiled": true, "compiled_code": "with current_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_market_updated\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    price,\n    skew,\n    size,\n    size_delta,\n    current_funding_rate,\n    current_funding_velocity,\n    interest_rate\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.736825Z", "completed_at": "2025-03-04T12:52:44.741317Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.741929Z", "completed_at": "2025-03-04T12:52:44.741937Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00652766227722168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_market_updated_base_mainnet", "compiled": true, "compiled_code": "with legacy_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_legacy_event_market_updated\"\n\n),\n\ncurrent_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_market_updated\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    price,\n    skew,\n    size,\n    size_delta,\n    current_funding_rate,\n    current_funding_velocity,\n    0 as interest_rate\nfrom\n    legacy_events\nunion all\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    price,\n    skew,\n    size,\n    size_delta,\n    current_funding_rate,\n    current_funding_velocity,\n    interest_rate\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.744637Z", "completed_at": "2025-03-04T12:52:44.749171Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.749770Z", "completed_at": "2025-03-04T12:52:44.749778Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006460428237915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_market_updated_base_sepolia", "compiled": true, "compiled_code": "with legacy_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_legacy_event_market_updated\"\n\n),\n\ncurrent_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_market_updated\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    price,\n    skew,\n    size,\n    size_delta,\n    current_funding_rate,\n    current_funding_velocity,\n    0 as interest_rate\nfrom\n    legacy_events\nunion all\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    price,\n    skew,\n    size,\n    size_delta,\n    current_funding_rate,\n    current_funding_velocity,\n    interest_rate\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.752608Z", "completed_at": "2025-03-04T12:52:44.756546Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.757208Z", "completed_at": "2025-03-04T12:52:44.757216Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006046772003173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_order_committed_arbitrum_mainnet", "compiled": true, "compiled_code": "with current_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_order_committed\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    expiration_time,\n    settlement_time,\n    expected_price_time,\n    acceptable_price,\n    order_type,\n    size_delta,\n    sender,\n    tracking_code\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.759917Z", "completed_at": "2025-03-04T12:52:44.763926Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.764556Z", "completed_at": "2025-03-04T12:52:44.764564Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005948543548583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_order_committed_arbitrum_sepolia", "compiled": true, "compiled_code": "with current_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_order_committed\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    expiration_time,\n    settlement_time,\n    expected_price_time,\n    acceptable_price,\n    order_type,\n    size_delta,\n    sender,\n    tracking_code\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.767356Z", "completed_at": "2025-03-04T12:52:44.773411Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.773995Z", "completed_at": "2025-03-04T12:52:44.774003Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008101224899291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_order_committed_base_mainnet", "compiled": true, "compiled_code": "with legacy_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_legacy_event_order_committed\"\n\n),\n\ncurrent_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_order_committed\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    expiration_time,\n    settlement_time,\n    cast(\n        null as numeric\n    ) as expected_price_time,\n    acceptable_price,\n    order_type,\n    size_delta,\n    sender,\n    tracking_code\nfrom\n    legacy_events\nunion all\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    expiration_time,\n    settlement_time,\n    expected_price_time,\n    acceptable_price,\n    order_type,\n    size_delta,\n    sender,\n    tracking_code\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.776676Z", "completed_at": "2025-03-04T12:52:44.781253Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.781854Z", "completed_at": "2025-03-04T12:52:44.781861Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0064849853515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_order_committed_base_sepolia", "compiled": true, "compiled_code": "with legacy_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_legacy_event_order_committed\"\n\n),\n\ncurrent_events as (\n    \nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_order_committed\"\n\n)\n\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    expiration_time,\n    settlement_time,\n    cast(\n        null as numeric\n    ) as expected_price_time,\n    acceptable_price,\n    order_type,\n    size_delta,\n    sender,\n    tracking_code\nfrom\n    legacy_events\nunion all\nselect\n    id,\n    block_number,\n    block_timestamp,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    expiration_time,\n    settlement_time,\n    expected_price_time,\n    acceptable_price,\n    order_type,\n    size_delta,\n    sender,\n    tracking_code\nfrom\n    current_events", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.785020Z", "completed_at": "2025-03-04T12:52:44.788685Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.789250Z", "completed_at": "2025-03-04T12:52:44.789259Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0060079097747802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_order_settled_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_order_settled\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.791960Z", "completed_at": "2025-03-04T12:52:44.795949Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.796561Z", "completed_at": "2025-03-04T12:52:44.796571Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005917072296142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_order_settled_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_order_settled\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.799223Z", "completed_at": "2025-03-04T12:52:44.803203Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.803805Z", "completed_at": "2025-03-04T12:52:44.803812Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005887746810913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_order_settled_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_order_settled\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.806553Z", "completed_at": "2025-03-04T12:52:44.811987Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.812571Z", "completed_at": "2025-03-04T12:52:44.812578Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0074939727783203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_order_settled_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_order_settled\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.815728Z", "completed_at": "2025-03-04T12:52:44.819167Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.819760Z", "completed_at": "2025-03-04T12:52:44.819768Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00574183464050293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_position_liquidated_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_position_liquidated\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.822451Z", "completed_at": "2025-03-04T12:52:44.826659Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.827248Z", "completed_at": "2025-03-04T12:52:44.827256Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006116151809692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_position_liquidated_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_position_liquidated\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.829991Z", "completed_at": "2025-03-04T12:52:44.834036Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.834658Z", "completed_at": "2025-03-04T12:52:44.834666Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00607609748840332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_position_liquidated_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_position_liquidated\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.837484Z", "completed_at": "2025-03-04T12:52:44.841410Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.842013Z", "completed_at": "2025-03-04T12:52:44.842021Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005878448486328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_position_liquidated_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_position_liquidated\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.844818Z", "completed_at": "2025-03-04T12:52:44.850387Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.851001Z", "completed_at": "2025-03-04T12:52:44.851010Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007527351379394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_previous_order_expired_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"perps_market_proxy_event_previous_order_expired\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.853747Z", "completed_at": "2025-03-04T12:52:44.857907Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.858519Z", "completed_at": "2025-03-04T12:52:44.858528Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006120443344116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_previous_order_expired_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"perps_market_proxy_event_previous_order_expired\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.861220Z", "completed_at": "2025-03-04T12:52:44.865715Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.866296Z", "completed_at": "2025-03-04T12:52:44.866305Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00641942024230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_previous_order_expired_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"perps_market_proxy_event_previous_order_expired\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.869186Z", "completed_at": "2025-03-04T12:52:44.873349Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.873978Z", "completed_at": "2025-03-04T12:52:44.873986Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006237983703613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.perp_previous_order_expired_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"perps_market_proxy_event_previous_order_expired\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.876694Z", "completed_at": "2025-03-04T12:52:44.880782Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.881388Z", "completed_at": "2025-03-04T12:52:44.881396Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0060384273529052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spartan_vote_recorded_snax_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_snax_mainnet\".\"spartan_governance_proxy_event_vote_recorded\"\n", "relation_name": "\"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.884091Z", "completed_at": "2025-03-04T12:52:44.889809Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.890381Z", "completed_at": "2025-03-04T12:52:44.890389Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007628440856933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spartan_vote_withdrawn_snax_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_snax_mainnet\".\"spartan_governance_proxy_event_vote_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.893273Z", "completed_at": "2025-03-04T12:52:44.897296Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.897898Z", "completed_at": "2025-03-04T12:52:44.897908Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00612640380859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_cancelled_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"spot_market_proxy_event_order_cancelled\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.900782Z", "completed_at": "2025-03-04T12:52:44.905248Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.905878Z", "completed_at": "2025-03-04T12:52:44.905890Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006494998931884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_cancelled_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"spot_market_proxy_event_order_cancelled\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.908676Z", "completed_at": "2025-03-04T12:52:44.913182Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.913804Z", "completed_at": "2025-03-04T12:52:44.913814Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006506443023681641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_cancelled_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"spot_market_proxy_event_order_cancelled\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.916667Z", "completed_at": "2025-03-04T12:52:44.921034Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.921633Z", "completed_at": "2025-03-04T12:52:44.921643Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006345510482788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_cancelled_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"spot_market_proxy_event_order_cancelled\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.924337Z", "completed_at": "2025-03-04T12:52:44.928923Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.929544Z", "completed_at": "2025-03-04T12:52:44.929555Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006560802459716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_committed_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"spot_market_proxy_event_order_committed\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.932674Z", "completed_at": "2025-03-04T12:52:44.938191Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.938784Z", "completed_at": "2025-03-04T12:52:44.938794Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007727861404418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_committed_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"spot_market_proxy_event_order_committed\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.941650Z", "completed_at": "2025-03-04T12:52:44.945712Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.946275Z", "completed_at": "2025-03-04T12:52:44.946283Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0061092376708984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_committed_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"spot_market_proxy_event_order_committed\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.948984Z", "completed_at": "2025-03-04T12:52:44.953230Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.953825Z", "completed_at": "2025-03-04T12:52:44.953834Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00616908073425293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_committed_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"spot_market_proxy_event_order_committed\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.956626Z", "completed_at": "2025-03-04T12:52:44.960863Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.961444Z", "completed_at": "2025-03-04T12:52:44.961453Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006300449371337891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_settled_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"spot_market_proxy_event_order_settled\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.964308Z", "completed_at": "2025-03-04T12:52:44.968390Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.968986Z", "completed_at": "2025-03-04T12:52:44.968996Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006020784378051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_settled_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"spot_market_proxy_event_order_settled\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.971896Z", "completed_at": "2025-03-04T12:52:44.977699Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.978265Z", "completed_at": "2025-03-04T12:52:44.978274Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007880210876464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_settled_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"spot_market_proxy_event_order_settled\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.980969Z", "completed_at": "2025-03-04T12:52:44.985176Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.985788Z", "completed_at": "2025-03-04T12:52:44.985797Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00613856315612793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_order_settled_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"spot_market_proxy_event_order_settled\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.988633Z", "completed_at": "2025-03-04T12:52:44.992835Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:44.993423Z", "completed_at": "2025-03-04T12:52:44.993433Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006309986114501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_bought_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"spot_market_proxy_event_synth_bought\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.996595Z", "completed_at": "2025-03-04T12:52:45.000922Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.001523Z", "completed_at": "2025-03-04T12:52:45.001534Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006712198257446289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_bought_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"spot_market_proxy_event_synth_bought\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.004443Z", "completed_at": "2025-03-04T12:52:45.008951Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.009543Z", "completed_at": "2025-03-04T12:52:45.009552Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006453275680541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_bought_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"spot_market_proxy_event_synth_bought\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.012369Z", "completed_at": "2025-03-04T12:52:45.018494Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.019078Z", "completed_at": "2025-03-04T12:52:45.019088Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008211374282836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_bought_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"spot_market_proxy_event_synth_bought\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.022315Z", "completed_at": "2025-03-04T12:52:45.026482Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.027051Z", "completed_at": "2025-03-04T12:52:45.027061Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063974857330322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_registered_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"spot_market_proxy_event_synth_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.029963Z", "completed_at": "2025-03-04T12:52:45.034202Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.034804Z", "completed_at": "2025-03-04T12:52:45.034813Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006192684173583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_registered_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"spot_market_proxy_event_synth_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.037673Z", "completed_at": "2025-03-04T12:52:45.041888Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.042451Z", "completed_at": "2025-03-04T12:52:45.042481Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063016414642333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_registered_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"spot_market_proxy_event_synth_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.045597Z", "completed_at": "2025-03-04T12:52:45.049387Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.049962Z", "completed_at": "2025-03-04T12:52:45.049971Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00597834587097168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_registered_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"spot_market_proxy_event_synth_registered\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.052995Z", "completed_at": "2025-03-04T12:52:45.056740Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.057289Z", "completed_at": "2025-03-04T12:52:45.057298Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005990028381347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_sold_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"spot_market_proxy_event_synth_sold\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.061898Z", "completed_at": "2025-03-04T12:52:45.065771Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.066334Z", "completed_at": "2025-03-04T12:52:45.066342Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005799055099487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_sold_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"spot_market_proxy_event_synth_sold\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.069040Z", "completed_at": "2025-03-04T12:52:45.073150Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.073745Z", "completed_at": "2025-03-04T12:52:45.073754Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006042957305908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_sold_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"spot_market_proxy_event_synth_sold\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.076416Z", "completed_at": "2025-03-04T12:52:45.080623Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.081214Z", "completed_at": "2025-03-04T12:52:45.081223Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0061190128326416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_sold_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"spot_market_proxy_event_synth_sold\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.084053Z", "completed_at": "2025-03-04T12:52:45.087944Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.088532Z", "completed_at": "2025-03-04T12:52:45.088540Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005931377410888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_unwrapped_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"spot_market_proxy_event_synth_unwrapped\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.091566Z", "completed_at": "2025-03-04T12:52:45.095124Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.095696Z", "completed_at": "2025-03-04T12:52:45.095704Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005695343017578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_unwrapped_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"spot_market_proxy_event_synth_unwrapped\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.100423Z", "completed_at": "2025-03-04T12:52:45.103961Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.104534Z", "completed_at": "2025-03-04T12:52:45.104544Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007508754730224609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_unwrapped_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"spot_market_proxy_event_synth_unwrapped\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.107344Z", "completed_at": "2025-03-04T12:52:45.111157Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.111744Z", "completed_at": "2025-03-04T12:52:45.111752Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005841970443725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_unwrapped_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"spot_market_proxy_event_synth_unwrapped\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.114553Z", "completed_at": "2025-03-04T12:52:45.118272Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.118862Z", "completed_at": "2025-03-04T12:52:45.118870Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005780220031738281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_wrapped_arbitrum_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_mainnet\".\"spot_market_proxy_event_synth_wrapped\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.121673Z", "completed_at": "2025-03-04T12:52:45.125364Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.125951Z", "completed_at": "2025-03-04T12:52:45.125958Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005738496780395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_wrapped_arbitrum_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_arbitrum_sepolia\".\"spot_market_proxy_event_synth_wrapped\"\n", "relation_name": "\"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.128725Z", "completed_at": "2025-03-04T12:52:45.132654Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.133256Z", "completed_at": "2025-03-04T12:52:45.133263Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005846261978149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_wrapped_base_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_mainnet\".\"spot_market_proxy_event_synth_wrapped\"\n", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.135923Z", "completed_at": "2025-03-04T12:52:45.141737Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.142307Z", "completed_at": "2025-03-04T12:52:45.142315Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007685422897338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.spot_synth_wrapped_base_sepolia", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_base_sepolia\".\"spot_market_proxy_event_synth_wrapped\"\n", "relation_name": "\"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.145131Z", "completed_at": "2025-03-04T12:52:45.148816Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.149386Z", "completed_at": "2025-03-04T12:52:45.149393Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005591630935668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.treasury_vote_recorded_snax_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_snax_mainnet\".\"treasury_governance_proxy_event_vote_recorded\"\n", "relation_name": "\"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.152193Z", "completed_at": "2025-03-04T12:52:45.155852Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.156410Z", "completed_at": "2025-03-04T12:52:45.156416Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005665302276611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.treasury_vote_withdrawn_snax_mainnet", "compiled": true, "compiled_code": "\nSELECT\n  *\nFROM\n  \"analytics\".\"raw_snax_mainnet\".\"treasury_governance_proxy_event_vote_withdrawn\"\n", "relation_name": "\"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.159197Z", "completed_at": "2025-03-04T12:52:45.160985Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.161719Z", "completed_at": "2025-03-04T12:52:45.161727Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00382232666015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.arbitrum_mainnet_reward_distributors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.164528Z", "completed_at": "2025-03-04T12:52:45.166294Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.167209Z", "completed_at": "2025-03-04T12:52:45.167217Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0040950775146484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.arbitrum_mainnet_synths", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.169954Z", "completed_at": "2025-03-04T12:52:45.171795Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.172365Z", "completed_at": "2025-03-04T12:52:45.172372Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0037431716918945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.arbitrum_mainnet_tokens", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.176765Z", "completed_at": "2025-03-04T12:52:45.178430Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.178996Z", "completed_at": "2025-03-04T12:52:45.179004Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0035109519958496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.arbitrum_sepolia_reward_distributors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.181672Z", "completed_at": "2025-03-04T12:52:45.183351Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.183956Z", "completed_at": "2025-03-04T12:52:45.183963Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0035958290100097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.arbitrum_sepolia_synths", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.186594Z", "completed_at": "2025-03-04T12:52:45.188318Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.188938Z", "completed_at": "2025-03-04T12:52:45.188945Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.003648519515991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.arbitrum_sepolia_tokens", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.191979Z", "completed_at": "2025-03-04T12:52:45.193727Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.194319Z", "completed_at": "2025-03-04T12:52:45.194327Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0037026405334472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.base_mainnet_reward_distributors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.197073Z", "completed_at": "2025-03-04T12:52:45.198793Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.199482Z", "completed_at": "2025-03-04T12:52:45.199491Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0038056373596191406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.base_mainnet_synths", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.202222Z", "completed_at": "2025-03-04T12:52:45.204016Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.204673Z", "completed_at": "2025-03-04T12:52:45.204682Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.003835439682006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.base_mainnet_tokens", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.208225Z", "completed_at": "2025-03-04T12:52:45.211698Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.212265Z", "completed_at": "2025-03-04T12:52:45.212272Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00605463981628418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.base_sepolia_reward_distributors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.215033Z", "completed_at": "2025-03-04T12:52:45.216737Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.217302Z", "completed_at": "2025-03-04T12:52:45.217308Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.003529071807861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.base_sepolia_synths", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.219944Z", "completed_at": "2025-03-04T12:52:45.221618Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.222160Z", "completed_at": "2025-03-04T12:52:45.222167Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.003434419631958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.base_sepolia_tokens", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.224941Z", "completed_at": "2025-03-04T12:52:45.226622Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.227194Z", "completed_at": "2025-03-04T12:52:45.227201Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.003671407699584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.eth_mainnet_reward_distributors", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.229906Z", "completed_at": "2025-03-04T12:52:45.231746Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.232293Z", "completed_at": "2025-03-04T12:52:45.232300Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0036437511444091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.eth_mainnet_synths", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.234905Z", "completed_at": "2025-03-04T12:52:45.236628Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.237205Z", "completed_at": "2025-03-04T12:52:45.237212Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.003581523895263672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.eth_mainnet_tokens", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.239933Z", "completed_at": "2025-03-04T12:52:45.243176Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.243870Z", "completed_at": "2025-03-04T12:52:45.243878Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005315542221069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.synthetix.optimism_mainnet_tokens", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.246604Z", "completed_at": "2025-03-04T12:52:45.251508Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.252073Z", "completed_at": "2025-03-04T12:52:45.252081Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006838798522949219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_ambassador_vote_recorded_snax_mainnet_event_name__VoteRecorded.54d007d547", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VoteRecorded'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.254780Z", "completed_at": "2025-03-04T12:52:45.264332Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.264916Z", "completed_at": "2025-03-04T12:52:45.264926Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011473417282104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_block_number.463911c810", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.267652Z", "completed_at": "2025-03-04T12:52:45.272420Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.273054Z", "completed_at": "2025-03-04T12:52:45.273063Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006773233413696289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_block_timestamp.22fdffe044", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.275791Z", "completed_at": "2025-03-04T12:52:45.280703Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.281266Z", "completed_at": "2025-03-04T12:52:45.281274Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00680851936340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_candidates.39a8d5dca6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect candidates\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere candidates is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.284020Z", "completed_at": "2025-03-04T12:52:45.288771Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.289320Z", "completed_at": "2025-03-04T12:52:45.289328Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006587028503417969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_chain_id.15e179b253", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect chain_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere chain_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.292004Z", "completed_at": "2025-03-04T12:52:45.298549Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.299109Z", "completed_at": "2025-03-04T12:52:45.299117Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008414268493652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_contract.bcb9549b94", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.301822Z", "completed_at": "2025-03-04T12:52:45.306592Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.307154Z", "completed_at": "2025-03-04T12:52:45.307162Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006667137145996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_epoch_id.85e943f65f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect epoch_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere epoch_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.309845Z", "completed_at": "2025-03-04T12:52:45.314480Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.315062Z", "completed_at": "2025-03-04T12:52:45.315071Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006483793258666992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_event_name.8b77ef45f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.317799Z", "completed_at": "2025-03-04T12:52:45.322339Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.322917Z", "completed_at": "2025-03-04T12:52:45.322925Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006470203399658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_id.d4148bfa57", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.325595Z", "completed_at": "2025-03-04T12:52:45.330046Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.330631Z", "completed_at": "2025-03-04T12:52:45.330639Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006294965744018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_transaction_hash.d7fa881495", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.333362Z", "completed_at": "2025-03-04T12:52:45.337973Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.338575Z", "completed_at": "2025-03-04T12:52:45.338584Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006583452224731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_voter.ab2df49992", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voter\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere voter is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.341248Z", "completed_at": "2025-03-04T12:52:45.347699Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.348246Z", "completed_at": "2025-03-04T12:52:45.348253Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00830388069152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_recorded_snax_mainnet_voting_power.94944f5709", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voting_power\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere voting_power is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.351006Z", "completed_at": "2025-03-04T12:52:45.357846Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.358405Z", "completed_at": "2025-03-04T12:52:45.358412Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00879359245300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_ambassador_vote_recorded_snax_mainnet_id.2ee777df0a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.361146Z", "completed_at": "2025-03-04T12:52:45.365774Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.366348Z", "completed_at": "2025-03-04T12:52:45.366357Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065631866455078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_ambassador_vote_recorded_snax_mainnet_transaction_hash.66af7027de", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_hash as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_recorded_snax_mainnet\"\nwhere transaction_hash is not null\ngroup by transaction_hash\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.369096Z", "completed_at": "2025-03-04T12:52:45.374040Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.374644Z", "completed_at": "2025-03-04T12:52:45.374652Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006880760192871094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_ambassador_vote_withdrawn_snax_mainnet_chain_id__2192__10__1__8453__42161.0c8eff9ef3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        chain_id as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\n    group by chain_id\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '2192','10','1','8453','42161'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.377581Z", "completed_at": "2025-03-04T12:52:45.382528Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.383115Z", "completed_at": "2025-03-04T12:52:45.383123Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006947517395019531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_ambassador_vote_withdrawn_snax_mainnet_event_name__VoteWithdrawn.60823368eb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VoteWithdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.385825Z", "completed_at": "2025-03-04T12:52:45.390871Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.391428Z", "completed_at": "2025-03-04T12:52:45.391436Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00694727897644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_recency_blocks_arbitrum_mainnet_hour__ts__1.e5882e697a", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith recency as (\n\n    select \n\n      \n      \n        max(ts) as most_recent\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"blocks_arbitrum_mainnet\"\n\n    \n\n)\n\nselect\n\n    \n    most_recent,\n    cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp) as threshold\n\nfrom recency\nwhere most_recent < cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.394187Z", "completed_at": "2025-03-04T12:52:45.400482Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.401033Z", "completed_at": "2025-03-04T12:52:45.401042Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008199214935302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_block_number.afd1b2b6f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.403734Z", "completed_at": "2025-03-04T12:52:45.408249Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.408842Z", "completed_at": "2025-03-04T12:52:45.408850Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006437778472900391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_block_timestamp.fb999cf588", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.411540Z", "completed_at": "2025-03-04T12:52:45.416002Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.416586Z", "completed_at": "2025-03-04T12:52:45.416595Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006340742111206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_chain_id.08c20376e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect chain_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere chain_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.419315Z", "completed_at": "2025-03-04T12:52:45.424078Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.424670Z", "completed_at": "2025-03-04T12:52:45.424678Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0067043304443359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_contract.ce63bcf894", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.427357Z", "completed_at": "2025-03-04T12:52:45.431969Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.432532Z", "completed_at": "2025-03-04T12:52:45.432540Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006519794464111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_epoch_id.e141cb577b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect epoch_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere epoch_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.435233Z", "completed_at": "2025-03-04T12:52:45.441362Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.441936Z", "completed_at": "2025-03-04T12:52:45.441944Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008067131042480469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_event_name.5660482f61", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.444630Z", "completed_at": "2025-03-04T12:52:45.449234Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.449840Z", "completed_at": "2025-03-04T12:52:45.449848Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006533145904541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_id.95a539d2e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.452582Z", "completed_at": "2025-03-04T12:52:45.457357Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.457978Z", "completed_at": "2025-03-04T12:52:45.457986Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006785869598388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_transaction_hash.fa826d3f14", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.460718Z", "completed_at": "2025-03-04T12:52:45.465249Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.465837Z", "completed_at": "2025-03-04T12:52:45.465845Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063970088958740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_ambassador_vote_withdrawn_snax_mainnet_voter.489834d56e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voter\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere voter is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.468585Z", "completed_at": "2025-03-04T12:52:45.473324Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.473899Z", "completed_at": "2025-03-04T12:52:45.473908Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006712913513183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_blocks_arbitrum_mainnet_block_number.60351acf6d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"blocks_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.476684Z", "completed_at": "2025-03-04T12:52:45.481482Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.482040Z", "completed_at": "2025-03-04T12:52:45.482049Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006781339645385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_ambassador_vote_withdrawn_snax_mainnet_id.3aa78e2ed2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.484755Z", "completed_at": "2025-03-04T12:52:45.491296Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.491883Z", "completed_at": "2025-03-04T12:52:45.491892Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008419036865234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_ambassador_vote_withdrawn_snax_mainnet_transaction_hash.4355134051", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_hash as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"ambassador_vote_withdrawn_snax_mainnet\"\nwhere transaction_hash is not null\ngroup by transaction_hash\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.494657Z", "completed_at": "2025-03-04T12:52:45.499295Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.499871Z", "completed_at": "2025-03-04T12:52:45.499879Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006615161895751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_blocks_arbitrum_mainnet_block_number.d70bece923", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    block_number as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"blocks_arbitrum_mainnet\"\nwhere block_number is not null\ngroup by block_number\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.502603Z", "completed_at": "2025-03-04T12:52:45.507850Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.508410Z", "completed_at": "2025-03-04T12:52:45.508419Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0072176456451416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_recency_blocks_arbitrum_sepolia_hour__ts__1.8a321a2874", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith recency as (\n\n    select \n\n      \n      \n        max(ts) as most_recent\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"blocks_arbitrum_sepolia\"\n\n    \n\n)\n\nselect\n\n    \n    most_recent,\n    cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp) as threshold\n\nfrom recency\nwhere most_recent < cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.511164Z", "completed_at": "2025-03-04T12:52:45.516028Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.516615Z", "completed_at": "2025-03-04T12:52:45.516624Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006799936294555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_blocks_arbitrum_sepolia_block_number.73833a1893", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"blocks_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.519346Z", "completed_at": "2025-03-04T12:52:45.524072Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.524651Z", "completed_at": "2025-03-04T12:52:45.524661Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006674289703369141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_blocks_arbitrum_sepolia_block_number.4c474d2bd5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    block_number as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"blocks_arbitrum_sepolia\"\nwhere block_number is not null\ngroup by block_number\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.527322Z", "completed_at": "2025-03-04T12:52:45.532305Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.532880Z", "completed_at": "2025-03-04T12:52:45.532888Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006801605224609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_recency_blocks_base_mainnet_hour__ts__1.b0724712c2", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith recency as (\n\n    select \n\n      \n      \n        max(ts) as most_recent\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"blocks_base_mainnet\"\n\n    \n\n)\n\nselect\n\n    \n    most_recent,\n    cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp) as threshold\n\nfrom recency\nwhere most_recent < cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.535556Z", "completed_at": "2025-03-04T12:52:45.541908Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.542451Z", "completed_at": "2025-03-04T12:52:45.542474Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008239507675170898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_blocks_base_mainnet_block_number.bb1b2f53c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"blocks_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.545126Z", "completed_at": "2025-03-04T12:52:45.549598Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.550160Z", "completed_at": "2025-03-04T12:52:45.550167Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006339550018310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_blocks_base_mainnet_block_number.e303976d40", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    block_number as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"blocks_base_mainnet\"\nwhere block_number is not null\ngroup by block_number\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.552889Z", "completed_at": "2025-03-04T12:52:45.557771Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.558333Z", "completed_at": "2025-03-04T12:52:45.558341Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006720542907714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_recency_blocks_base_sepolia_hour__ts__1.b4197f397a", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith recency as (\n\n    select \n\n      \n      \n        max(ts) as most_recent\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"blocks_base_sepolia\"\n\n    \n\n)\n\nselect\n\n    \n    most_recent,\n    cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp) as threshold\n\nfrom recency\nwhere most_recent < cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.561098Z", "completed_at": "2025-03-04T12:52:45.565589Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.566131Z", "completed_at": "2025-03-04T12:52:45.566138Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006339073181152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_blocks_base_sepolia_block_number.1adc80fce5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"blocks_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.568802Z", "completed_at": "2025-03-04T12:52:45.573355Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.573945Z", "completed_at": "2025-03-04T12:52:45.573953Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006455183029174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_blocks_base_sepolia_block_number.b9de81024b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    block_number as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"blocks_base_sepolia\"\nwhere block_number is not null\ngroup by block_number\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.576643Z", "completed_at": "2025-03-04T12:52:45.581202Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.581787Z", "completed_at": "2025-03-04T12:52:45.581795Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00648951530456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_blocks_snax_mainnet_block_number.af5006826a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"blocks_snax_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.584392Z", "completed_at": "2025-03-04T12:52:45.590616Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.591166Z", "completed_at": "2025-03-04T12:52:45.591174Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008006572723388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_blocks_snax_mainnet_block_number.305396795f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    block_number as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"blocks_snax_mainnet\"\nwhere block_number is not null\ngroup by block_number\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.593856Z", "completed_at": "2025-03-04T12:52:45.598807Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.599368Z", "completed_at": "2025-03-04T12:52:45.599376Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006861209869384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_recency_blocks_eth_mainnet_hour__ts__1.7c6c4534db", "compiled": true, "compiled_code": "\n\n\n\n\n\n\nwith recency as (\n\n    select \n\n      \n      \n        max(ts) as most_recent\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"blocks_eth_mainnet\"\n\n    \n\n)\n\nselect\n\n    \n    most_recent,\n    cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp) as threshold\n\nfrom recency\nwhere most_recent < cast(\n\n    now() + ((interval '1 hour') * (-1))\n\n as timestamp)\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.602070Z", "completed_at": "2025-03-04T12:52:45.606806Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.607366Z", "completed_at": "2025-03-04T12:52:45.607374Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006638526916503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_blocks_eth_mainnet_block_number.aba38b4904", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"blocks_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.610071Z", "completed_at": "2025-03-04T12:52:45.614615Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.615172Z", "completed_at": "2025-03-04T12:52:45.615183Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006398200988769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_blocks_eth_mainnet_block_number.ddb4ca7d09", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    block_number as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"blocks_eth_mainnet\"\nwhere block_number is not null\ngroup by block_number\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.617915Z", "completed_at": "2025-03-04T12:52:45.622852Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.623414Z", "completed_at": "2025-03-04T12:52:45.623422Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006866455078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_blocks_snax_testnet_block_number.cbe563226c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"blocks_snax_testnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.626132Z", "completed_at": "2025-03-04T12:52:45.630799Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.631366Z", "completed_at": "2025-03-04T12:52:45.631375Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065190792083740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_blocks_snax_testnet_block_number.2af7f40583", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    block_number as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"blocks_snax_testnet\"\nwhere block_number is not null\ngroup by block_number\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.634102Z", "completed_at": "2025-03-04T12:52:45.640750Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.641313Z", "completed_at": "2025-03-04T12:52:45.641322Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008483409881591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_buyback_base_mainnet", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp as ts,\n    buyer,\n    \n    snx / 1e18\n as snx,\n    \n    usd / 1e18\n as usd,\n    (\n    usd / 1e18\n) / (\n    snx / 1e18\n) as snx_price\nfrom\n    \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.644093Z", "completed_at": "2025-03-04T12:52:45.649482Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.650076Z", "completed_at": "2025-03-04T12:52:45.650085Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0073680877685546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_buyback_processed_base_mainnet_event_name__BuybackProcessed.dfe71d53df", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'BuybackProcessed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.652871Z", "completed_at": "2025-03-04T12:52:45.661391Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.662065Z", "completed_at": "2025-03-04T12:52:45.662076Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010618209838867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_buyback_processed_base_mainnet_snx__True__0.afaf938419", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.664912Z", "completed_at": "2025-03-04T12:52:45.670296Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.670887Z", "completed_at": "2025-03-04T12:52:45.670897Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007280111312866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_buyback_processed_base_mainnet_usd__True__0.4acbfc34a4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.673631Z", "completed_at": "2025-03-04T12:52:45.678603Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.679180Z", "completed_at": "2025-03-04T12:52:45.679189Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006933450698852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_block_number.7938e67f70", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.681927Z", "completed_at": "2025-03-04T12:52:45.686895Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.687456Z", "completed_at": "2025-03-04T12:52:45.687488Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006906270980834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_block_timestamp.a03c2a402e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.690197Z", "completed_at": "2025-03-04T12:52:45.697254Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.697840Z", "completed_at": "2025-03-04T12:52:45.697850Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008999824523925781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_buyer.6dc7c79cf3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect buyer\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere buyer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.700616Z", "completed_at": "2025-03-04T12:52:45.705602Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.706165Z", "completed_at": "2025-03-04T12:52:45.706174Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006867647171020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_contract.73ecec38f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.711078Z", "completed_at": "2025-03-04T12:52:45.718434Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.719048Z", "completed_at": "2025-03-04T12:52:45.719058Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010615825653076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_event_name.6b55058ad0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.721839Z", "completed_at": "2025-03-04T12:52:45.727020Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.727602Z", "completed_at": "2025-03-04T12:52:45.727614Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0070645809173583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_id.f2ddc16a13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.730379Z", "completed_at": "2025-03-04T12:52:45.735448Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.736032Z", "completed_at": "2025-03-04T12:52:45.736043Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0070493221282958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_snx.d434d429ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere snx is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.738812Z", "completed_at": "2025-03-04T12:52:45.743997Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.744580Z", "completed_at": "2025-03-04T12:52:45.744591Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007063150405883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_transaction_hash.48c42ff159", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.747270Z", "completed_at": "2025-03-04T12:52:45.754333Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.754929Z", "completed_at": "2025-03-04T12:52:45.754939Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008996009826660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_mainnet_usd.c5f2eba3f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect usd\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.757731Z", "completed_at": "2025-03-04T12:52:45.762545Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.763102Z", "completed_at": "2025-03-04T12:52:45.763112Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006791114807128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_buyback_processed_base_mainnet_id.7d5a3bf3a8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"buyback_processed_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.765889Z", "completed_at": "2025-03-04T12:52:45.770612Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.771177Z", "completed_at": "2025-03-04T12:52:45.771187Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00669550895690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_buyback_base_sepolia", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp as ts,\n    buyer,\n    \n    snx / 1e18\n as snx,\n    \n    usd / 1e18\n as usd,\n    (\n    usd / 1e18\n) / (\n    snx / 1e18\n) as snx_price\nfrom\n    \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.774382Z", "completed_at": "2025-03-04T12:52:45.780020Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.780634Z", "completed_at": "2025-03-04T12:52:45.780643Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008050680160522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_buyback_processed_base_sepolia_event_name__BuybackProcessed.16f3176222", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'BuybackProcessed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.783450Z", "completed_at": "2025-03-04T12:52:45.788700Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.789270Z", "completed_at": "2025-03-04T12:52:45.789280Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007241964340209961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_buyback_processed_base_sepolia_snx__True__0.628aa3b85b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.792030Z", "completed_at": "2025-03-04T12:52:45.799566Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.800149Z", "completed_at": "2025-03-04T12:52:45.800161Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009420633316040039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_buyback_processed_base_sepolia_usd__True__0.f23761f17f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.802957Z", "completed_at": "2025-03-04T12:52:45.808423Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.809022Z", "completed_at": "2025-03-04T12:52:45.809033Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007385969161987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_block_number.73166259d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.811889Z", "completed_at": "2025-03-04T12:52:45.817342Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.817948Z", "completed_at": "2025-03-04T12:52:45.817959Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007426023483276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_block_timestamp.c83a09ad33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.820769Z", "completed_at": "2025-03-04T12:52:45.826203Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.826825Z", "completed_at": "2025-03-04T12:52:45.826836Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007392406463623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_buyer.4fd04cc021", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect buyer\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere buyer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.838567Z", "completed_at": "2025-03-04T12:52:45.843894Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.844518Z", "completed_at": "2025-03-04T12:52:45.844532Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008251428604125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_contract.b27543f734", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.847297Z", "completed_at": "2025-03-04T12:52:45.854689Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.855279Z", "completed_at": "2025-03-04T12:52:45.855290Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009366273880004883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_event_name.755deb59b2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.858195Z", "completed_at": "2025-03-04T12:52:45.863839Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.864430Z", "completed_at": "2025-03-04T12:52:45.864443Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007687807083129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_id.e10820e4d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.867249Z", "completed_at": "2025-03-04T12:52:45.872901Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.873521Z", "completed_at": "2025-03-04T12:52:45.873534Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0076656341552734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_snx.52b876a9f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere snx is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.876313Z", "completed_at": "2025-03-04T12:52:45.881913Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.882534Z", "completed_at": "2025-03-04T12:52:45.882550Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0076160430908203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_transaction_hash.a38d34613b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.885332Z", "completed_at": "2025-03-04T12:52:45.903812Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.905188Z", "completed_at": "2025-03-04T12:52:45.905202Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021193981170654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_buyback_processed_base_sepolia_usd.397135feed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect usd\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.908125Z", "completed_at": "2025-03-04T12:52:45.913531Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.914113Z", "completed_at": "2025-03-04T12:52:45.914123Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007354259490966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_buyback_processed_base_sepolia_id.c3e20dc22e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"buyback_processed_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.916998Z", "completed_at": "2025-03-04T12:52:45.922725Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.923317Z", "completed_at": "2025-03-04T12:52:45.923329Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007812976837158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_account_created_arbitrum_mainnet_event_name__AccountCreated.8d24ea0d1c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.926152Z", "completed_at": "2025-03-04T12:52:45.931887Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.932487Z", "completed_at": "2025-03-04T12:52:45.932498Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007665157318115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_account_created_arbitrum_mainnet_account_id__True__0.1a60fd1c13", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.935305Z", "completed_at": "2025-03-04T12:52:45.940820Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.941413Z", "completed_at": "2025-03-04T12:52:45.941423Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007527351379394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_mainnet_account_id.80fd41e8a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.944253Z", "completed_at": "2025-03-04T12:52:45.949872Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.950485Z", "completed_at": "2025-03-04T12:52:45.950497Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007645130157470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_mainnet_block_number.ad85823ab6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.953369Z", "completed_at": "2025-03-04T12:52:45.960792Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.961379Z", "completed_at": "2025-03-04T12:52:45.961391Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009496212005615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_mainnet_block_timestamp.707ea51d9b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.964183Z", "completed_at": "2025-03-04T12:52:45.969482Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.970052Z", "completed_at": "2025-03-04T12:52:45.970062Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007220029830932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_mainnet_contract.51a2890c59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.972829Z", "completed_at": "2025-03-04T12:52:45.977936Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.978552Z", "completed_at": "2025-03-04T12:52:45.978563Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007120847702026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_mainnet_event_name.f044350ea8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.981360Z", "completed_at": "2025-03-04T12:52:45.987069Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.987707Z", "completed_at": "2025-03-04T12:52:45.987719Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007761955261230469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_mainnet_id.ccb85216a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.990605Z", "completed_at": "2025-03-04T12:52:45.996336Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:45.996982Z", "completed_at": "2025-03-04T12:52:45.996995Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007868766784667969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_mainnet_owner.510bc65b8e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:45.999923Z", "completed_at": "2025-03-04T12:52:46.013313Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.013987Z", "completed_at": "2025-03-04T12:52:46.014000Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015555143356323242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_mainnet_transaction_hash.ca429d274c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.016845Z", "completed_at": "2025-03-04T12:52:46.022117Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.022731Z", "completed_at": "2025-03-04T12:52:46.022742Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007292985916137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_account_created_arbitrum_mainnet_id.572cf5cf85", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_account_created_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.025656Z", "completed_at": "2025-03-04T12:52:46.031509Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.032130Z", "completed_at": "2025-03-04T12:52:46.032142Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007974624633789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_account_created_arbitrum_sepolia_event_name__AccountCreated.f6de61acf3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.035086Z", "completed_at": "2025-03-04T12:52:46.040847Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.041456Z", "completed_at": "2025-03-04T12:52:46.041486Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00775146484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_account_created_arbitrum_sepolia_account_id__True__0.2ee2f4ab2f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.044412Z", "completed_at": "2025-03-04T12:52:46.049808Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.050436Z", "completed_at": "2025-03-04T12:52:46.050448Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007535696029663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_sepolia_account_id.7a98480d2d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.053366Z", "completed_at": "2025-03-04T12:52:46.058673Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.059234Z", "completed_at": "2025-03-04T12:52:46.059245Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0073168277740478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_sepolia_block_number.1841c44bbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.062038Z", "completed_at": "2025-03-04T12:52:46.069336Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.069948Z", "completed_at": "2025-03-04T12:52:46.069960Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009243249893188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_sepolia_block_timestamp.74d0052bed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.072759Z", "completed_at": "2025-03-04T12:52:46.089717Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.091736Z", "completed_at": "2025-03-04T12:52:46.091751Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020380496978759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_sepolia_contract.c63e7e4dbf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.094771Z", "completed_at": "2025-03-04T12:52:46.100276Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.100897Z", "completed_at": "2025-03-04T12:52:46.100908Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007520437240600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_sepolia_event_name.8db7179ccc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.103684Z", "completed_at": "2025-03-04T12:52:46.108850Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.109416Z", "completed_at": "2025-03-04T12:52:46.109427Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007066249847412109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_sepolia_id.07253fa9ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.112254Z", "completed_at": "2025-03-04T12:52:46.119071Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.119661Z", "completed_at": "2025-03-04T12:52:46.119672Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00885152816772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_sepolia_owner.9aad095481", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.122403Z", "completed_at": "2025-03-04T12:52:46.127530Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.128102Z", "completed_at": "2025-03-04T12:52:46.128111Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0070378780364990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_arbitrum_sepolia_transaction_hash.59070c07aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.130879Z", "completed_at": "2025-03-04T12:52:46.135903Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.136506Z", "completed_at": "2025-03-04T12:52:46.136516Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007003307342529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_account_created_arbitrum_sepolia_id.f9001194ee", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_account_created_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.139285Z", "completed_at": "2025-03-04T12:52:46.144633Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.145202Z", "completed_at": "2025-03-04T12:52:46.145213Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007263660430908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_account_created_base_mainnet_event_name__AccountCreated.8d266dd241", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.147989Z", "completed_at": "2025-03-04T12:52:46.153330Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.153935Z", "completed_at": "2025-03-04T12:52:46.153945Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007323026657104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_account_created_base_mainnet_account_id__True__0.13ad3c12e1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.156740Z", "completed_at": "2025-03-04T12:52:46.161598Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.162163Z", "completed_at": "2025-03-04T12:52:46.162172Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006853818893432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_mainnet_account_id.9f366bbbab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.164871Z", "completed_at": "2025-03-04T12:52:46.170991Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.171577Z", "completed_at": "2025-03-04T12:52:46.171588Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007970809936523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_mainnet_block_number.1b0ff0bd14", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.174287Z", "completed_at": "2025-03-04T12:52:46.184847Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.185534Z", "completed_at": "2025-03-04T12:52:46.185546Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012634038925170898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_mainnet_block_timestamp.8e5d2b5809", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.188356Z", "completed_at": "2025-03-04T12:52:46.193087Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.193660Z", "completed_at": "2025-03-04T12:52:46.193670Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00658726692199707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_mainnet_contract.9c9629d4bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.196349Z", "completed_at": "2025-03-04T12:52:46.201015Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.201603Z", "completed_at": "2025-03-04T12:52:46.201612Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006573677062988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_mainnet_event_name.f3ba489917", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.204292Z", "completed_at": "2025-03-04T12:52:46.210404Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.210982Z", "completed_at": "2025-03-04T12:52:46.210992Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008059978485107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_mainnet_id.a6878c49cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.213725Z", "completed_at": "2025-03-04T12:52:46.218444Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.219026Z", "completed_at": "2025-03-04T12:52:46.219035Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065653324127197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_mainnet_owner.c498d5b28f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.221736Z", "completed_at": "2025-03-04T12:52:46.226621Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.227182Z", "completed_at": "2025-03-04T12:52:46.227192Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0067179203033447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_mainnet_transaction_hash.21cf6568c1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.229896Z", "completed_at": "2025-03-04T12:52:46.234778Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.235337Z", "completed_at": "2025-03-04T12:52:46.235347Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006800413131713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_account_created_base_mainnet_id.d79e3ab0d1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_account_created_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.238140Z", "completed_at": "2025-03-04T12:52:46.243348Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.243933Z", "completed_at": "2025-03-04T12:52:46.243943Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0071985721588134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_account_created_base_sepolia_event_name__AccountCreated.419b9196c4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.246699Z", "completed_at": "2025-03-04T12:52:46.251705Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.252269Z", "completed_at": "2025-03-04T12:52:46.252279Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006968259811401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_account_created_base_sepolia_account_id__True__0.dd17e6e171", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.255113Z", "completed_at": "2025-03-04T12:52:46.262031Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.267799Z", "completed_at": "2025-03-04T12:52:46.267812Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014160871505737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_sepolia_account_id.fb36b0b793", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.276842Z", "completed_at": "2025-03-04T12:52:46.281767Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.282331Z", "completed_at": "2025-03-04T12:52:46.282343Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006930828094482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_sepolia_block_number.01a77f24bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.285090Z", "completed_at": "2025-03-04T12:52:46.289730Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.290293Z", "completed_at": "2025-03-04T12:52:46.290303Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006470680236816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_sepolia_block_timestamp.56ac347427", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.293083Z", "completed_at": "2025-03-04T12:52:46.297746Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.298301Z", "completed_at": "2025-03-04T12:52:46.298309Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00659632682800293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_sepolia_contract.53ca26628e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.301015Z", "completed_at": "2025-03-04T12:52:46.306971Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.307541Z", "completed_at": "2025-03-04T12:52:46.307549Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007848262786865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_sepolia_event_name.4849c8704e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.310200Z", "completed_at": "2025-03-04T12:52:46.315000Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.315598Z", "completed_at": "2025-03-04T12:52:46.315607Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006717205047607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_sepolia_id.804b852bd8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.318321Z", "completed_at": "2025-03-04T12:52:46.322950Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.323526Z", "completed_at": "2025-03-04T12:52:46.323535Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006561756134033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_sepolia_owner.adee48eb04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.326232Z", "completed_at": "2025-03-04T12:52:46.331045Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.331637Z", "completed_at": "2025-03-04T12:52:46.331645Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0067441463470458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_base_sepolia_transaction_hash.53f2200f19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.334285Z", "completed_at": "2025-03-04T12:52:46.338898Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.339443Z", "completed_at": "2025-03-04T12:52:46.339452Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00641942024230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_account_created_base_sepolia_id.3342caea87", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_account_created_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.342152Z", "completed_at": "2025-03-04T12:52:46.354369Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.355083Z", "completed_at": "2025-03-04T12:52:46.355094Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01428365707397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_account_created_eth_mainnet_event_name__AccountCreated.7bff7383b3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.357898Z", "completed_at": "2025-03-04T12:52:46.362991Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.363580Z", "completed_at": "2025-03-04T12:52:46.363589Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007073402404785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_account_created_eth_mainnet_account_id__True__0.4d9379ebdc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.366261Z", "completed_at": "2025-03-04T12:52:46.371069Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.371665Z", "completed_at": "2025-03-04T12:52:46.371674Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00672459602355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_eth_mainnet_account_id.162a9a11ae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.374368Z", "completed_at": "2025-03-04T12:52:46.379129Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.379714Z", "completed_at": "2025-03-04T12:52:46.379722Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006675243377685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_eth_mainnet_block_number.be5f037644", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.382406Z", "completed_at": "2025-03-04T12:52:46.387291Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.387889Z", "completed_at": "2025-03-04T12:52:46.387898Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0068356990814208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_eth_mainnet_block_timestamp.8287155cde", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.390623Z", "completed_at": "2025-03-04T12:52:46.395267Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.395851Z", "completed_at": "2025-03-04T12:52:46.395860Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006598949432373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_eth_mainnet_contract.84cae83ab9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.398505Z", "completed_at": "2025-03-04T12:52:46.404707Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.405250Z", "completed_at": "2025-03-04T12:52:46.405260Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008011102676391602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_eth_mainnet_event_name.5a44f6813f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.407946Z", "completed_at": "2025-03-04T12:52:46.412560Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.413116Z", "completed_at": "2025-03-04T12:52:46.413125Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0064334869384765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_eth_mainnet_id.0d5cd71e99", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.415886Z", "completed_at": "2025-03-04T12:52:46.420690Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.421254Z", "completed_at": "2025-03-04T12:52:46.421262Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006720304489135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_eth_mainnet_owner.9141d07512", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.424006Z", "completed_at": "2025-03-04T12:52:46.428600Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.429180Z", "completed_at": "2025-03-04T12:52:46.429188Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065386295318603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_created_eth_mainnet_transaction_hash.5349e51024", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.431944Z", "completed_at": "2025-03-04T12:52:46.436630Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.437210Z", "completed_at": "2025-03-04T12:52:46.437219Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006610870361328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_account_created_eth_mainnet_id.51b373b820", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_created_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.439958Z", "completed_at": "2025-03-04T12:52:46.660140Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.666334Z", "completed_at": "2025-03-04T12:52:46.666348Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.22772717475891113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_migration_eth_mainnet", "compiled": true, "compiled_code": "select\n    block_timestamp as ts,\n    block_number,\n    transaction_hash,\n    1 as pool_id, -- Spartan Council pool\n    -- SNX collateral\n    '0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F' as collateral_type,\n    staker,\n    account_id,\n    \n    collateral_amount / 1e18\n as collateral_amount,\n    \n    debt_amount / 1e18\n as debt_amount\nfrom\n    \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\norder by block_timestamp", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.670454Z", "completed_at": "2025-03-04T12:52:46.675787Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.676364Z", "completed_at": "2025-03-04T12:52:46.676373Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007219791412353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_account_migrated_eth_mainnet_account_id__True__0.f1da2d38e8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.679094Z", "completed_at": "2025-03-04T12:52:46.684251Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.684854Z", "completed_at": "2025-03-04T12:52:46.684864Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00705265998840332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_account_migrated_eth_mainnet_collateral_amount__True__0.b1df54815d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.687615Z", "completed_at": "2025-03-04T12:52:46.692629Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.693184Z", "completed_at": "2025-03-04T12:52:46.693193Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006966352462768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_account_migrated_eth_mainnet_debt_amount__True__0.a8e29325c2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not debt_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.695860Z", "completed_at": "2025-03-04T12:52:46.701828Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.702378Z", "completed_at": "2025-03-04T12:52:46.702387Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00781702995300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_account_id.6263532792", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.705018Z", "completed_at": "2025-03-04T12:52:46.709526Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.710104Z", "completed_at": "2025-03-04T12:52:46.710112Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00634312629699707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_block_number.8a5aa490b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.712772Z", "completed_at": "2025-03-04T12:52:46.717402Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.717972Z", "completed_at": "2025-03-04T12:52:46.717979Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006445884704589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_block_timestamp.29c8a3ae97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.720586Z", "completed_at": "2025-03-04T12:52:46.725027Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.725601Z", "completed_at": "2025-03-04T12:52:46.725608Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063135623931884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_collateral_amount.3673a78a7a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere collateral_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.728191Z", "completed_at": "2025-03-04T12:52:46.732742Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.733295Z", "completed_at": "2025-03-04T12:52:46.733303Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063397884368896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_contract.ccd34b4a40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.735949Z", "completed_at": "2025-03-04T12:52:46.740430Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.741010Z", "completed_at": "2025-03-04T12:52:46.741019Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006343364715576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_debt_amount.37622c6a60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt_amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere debt_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.743662Z", "completed_at": "2025-03-04T12:52:46.749662Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.750213Z", "completed_at": "2025-03-04T12:52:46.750221Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007796049118041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_event_name.969c074241", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.752868Z", "completed_at": "2025-03-04T12:52:46.757316Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.757898Z", "completed_at": "2025-03-04T12:52:46.757906Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006290435791015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_id.3f18fc79cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.760525Z", "completed_at": "2025-03-04T12:52:46.764969Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.765540Z", "completed_at": "2025-03-04T12:52:46.765547Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006272554397583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_staker.cb3d4f410b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect staker\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere staker is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.768151Z", "completed_at": "2025-03-04T12:52:46.772573Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.773127Z", "completed_at": "2025-03-04T12:52:46.773135Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0062236785888671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_account_migrated_eth_mainnet_transaction_hash.bb710f8259", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.775771Z", "completed_at": "2025-03-04T12:52:46.780218Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.780787Z", "completed_at": "2025-03-04T12:52:46.780795Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006264686584472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_account_migrated_eth_mainnet_id.b21ce76ba7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_account_migrated_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.783438Z", "completed_at": "2025-03-04T12:52:46.787649Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.788214Z", "completed_at": "2025-03-04T12:52:46.788222Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006094694137573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_delegation_arbitrum_mainnet", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated,\n        ROW_NUMBER() over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated,\n    CAST(\n        account_id as text\n    ) as account_id\nfrom\n    cumulative_delegation\nwhere\n    rn = 1\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_delegation_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.791075Z", "completed_at": "2025-03-04T12:52:46.796769Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.797358Z", "completed_at": "2025-03-04T12:52:46.797367Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007570743560791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_active_stakers_daily_arbitrum_mainnet", "compiled": true, "compiled_code": "\n\nwith delegation_updated as (\n    select\n        block_timestamp,\n        account_id,\n        amount\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n),\n\ndim as (\n    select\n        d.block_date,\n        accounts_unique.account_id\n    from (\n        select\n            generate_series(\n                date_trunc('day', date('2023-12-15')),\n                date_trunc('day', current_date), '1 day'::interval\n            ) as block_date\n    ) as d\n    cross join (\n        select distinct account_id from delegation_updated\n    ) as accounts_unique\n),\n\nstakers as (\n    select\n        dim.block_date,\n        dim.account_id,\n        case\n            when coalesce(last(delegation_updated.amount) over (\n                partition by dim.account_id\n                order by dim.block_date\n                rows between unbounded preceding and current row\n            ), 0) = 0 then 0\n            else 1\n        end as is_staking\n    from dim\n    left join delegation_updated on\n        dim.block_date = date(delegation_updated.block_timestamp)\n        and dim.account_id = delegation_updated.account_id\n)\n\nselect\n    block_date,\n    sum(is_staking) as nof_stakers_daily\nfrom stakers\ngroup by block_date", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_active_stakers_daily_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.800145Z", "completed_at": "2025-03-04T12:52:46.804093Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.804674Z", "completed_at": "2025-03-04T12:52:46.804682Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00579380989074707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_delegation_arbitrum_mainnet", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated\nfrom\n    cumulative_delegation\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_delegation_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.807445Z", "completed_at": "2025-03-04T12:52:46.812546Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.813106Z", "completed_at": "2025-03-04T12:52:46.813113Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007102489471435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_delegation_updated_arbitrum_mainnet_event_name__DelegationUpdated.8158a7cafc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'DelegationUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.815730Z", "completed_at": "2025-03-04T12:52:46.820591Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.821153Z", "completed_at": "2025-03-04T12:52:46.821161Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006672382354736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_arbitrum_mainnet_account_id__True__0.eb3b030871", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.823808Z", "completed_at": "2025-03-04T12:52:46.828641Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.829200Z", "completed_at": "2025-03-04T12:52:46.829208Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006642818450927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_arbitrum_mainnet_amount__True__0.4dc42e5b67", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.849619Z", "completed_at": "2025-03-04T12:52:46.856307Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.856950Z", "completed_at": "2025-03-04T12:52:46.856962Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021057605743408203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_arbitrum_mainnet_leverage__True__1000000000000000000__1000000000000000000.fa830910e7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage >= 1000000000000000000\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage <= 1000000000000000000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.859716Z", "completed_at": "2025-03-04T12:52:46.864694Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.865250Z", "completed_at": "2025-03-04T12:52:46.865257Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006910085678100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_arbitrum_mainnet_pool_id__True__0.ceaf47901a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.867952Z", "completed_at": "2025-03-04T12:52:46.872537Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.873096Z", "completed_at": "2025-03-04T12:52:46.873105Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006444692611694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_account_id.1f6cadcc5d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.875722Z", "completed_at": "2025-03-04T12:52:46.880199Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.880774Z", "completed_at": "2025-03-04T12:52:46.880782Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006285905838012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_amount.790af0bbca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.883390Z", "completed_at": "2025-03-04T12:52:46.889417Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.889987Z", "completed_at": "2025-03-04T12:52:46.889996Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007869482040405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_block_number.e7dff1a919", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.892578Z", "completed_at": "2025-03-04T12:52:46.897173Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.897751Z", "completed_at": "2025-03-04T12:52:46.897758Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0064182281494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_block_timestamp.bf7b6f5a50", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.900426Z", "completed_at": "2025-03-04T12:52:46.905340Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.905921Z", "completed_at": "2025-03-04T12:52:46.905929Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006790876388549805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_collateral_type.ca955a713e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.908562Z", "completed_at": "2025-03-04T12:52:46.913066Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.913636Z", "completed_at": "2025-03-04T12:52:46.913644Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063397884368896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_contract.ae8a4f4c27", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.916221Z", "completed_at": "2025-03-04T12:52:46.920762Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.921343Z", "completed_at": "2025-03-04T12:52:46.921351Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006371736526489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_event_name.124ce539d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.923980Z", "completed_at": "2025-03-04T12:52:46.928454Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.929026Z", "completed_at": "2025-03-04T12:52:46.929033Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006291389465332031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_id.a1e63ca6e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.931650Z", "completed_at": "2025-03-04T12:52:46.937719Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.938268Z", "completed_at": "2025-03-04T12:52:46.938275Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007880926132202148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_leverage.e240b1993e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect leverage\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere leverage is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.940882Z", "completed_at": "2025-03-04T12:52:46.945343Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.945920Z", "completed_at": "2025-03-04T12:52:46.945927Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006263017654418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_pool_id.0fcc7a403c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.948516Z", "completed_at": "2025-03-04T12:52:46.952966Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.953543Z", "completed_at": "2025-03-04T12:52:46.953551Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006273984909057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_sender.7b21b54d07", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.956286Z", "completed_at": "2025-03-04T12:52:46.961063Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.961640Z", "completed_at": "2025-03-04T12:52:46.961648Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006684780120849609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_mainnet_transaction_hash.df3b0b1ada", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.964427Z", "completed_at": "2025-03-04T12:52:46.968817Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.969370Z", "completed_at": "2025-03-04T12:52:46.969378Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006372213363647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_delegation_updated_arbitrum_mainnet_id.53afc27917", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.972016Z", "completed_at": "2025-03-04T12:52:46.975983Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.976566Z", "completed_at": "2025-03-04T12:52:46.976575Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005896091461181641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_delegation_arbitrum_sepolia", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated,\n        ROW_NUMBER() over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated,\n    CAST(\n        account_id as text\n    ) as account_id\nfrom\n    cumulative_delegation\nwhere\n    rn = 1\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_delegation_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.979566Z", "completed_at": "2025-03-04T12:52:46.985102Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.985675Z", "completed_at": "2025-03-04T12:52:46.985684Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007699251174926758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_delegation_base_mainnet", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated,\n        ROW_NUMBER() over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated,\n    CAST(\n        account_id as text\n    ) as account_id\nfrom\n    cumulative_delegation\nwhere\n    rn = 1\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_account_delegation_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.988669Z", "completed_at": "2025-03-04T12:52:46.992645Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:46.993219Z", "completed_at": "2025-03-04T12:52:46.993227Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005826234817504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_active_stakers_daily_arbitrum_sepolia", "compiled": true, "compiled_code": "\n\nwith delegation_updated as (\n    select\n        block_timestamp,\n        account_id,\n        amount\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n),\n\ndim as (\n    select\n        d.block_date,\n        accounts_unique.account_id\n    from (\n        select\n            generate_series(\n                date_trunc('day', date('2023-12-15')),\n                date_trunc('day', current_date), '1 day'::interval\n            ) as block_date\n    ) as d\n    cross join (\n        select distinct account_id from delegation_updated\n    ) as accounts_unique\n),\n\nstakers as (\n    select\n        dim.block_date,\n        dim.account_id,\n        case\n            when coalesce(last(delegation_updated.amount) over (\n                partition by dim.account_id\n                order by dim.block_date\n                rows between unbounded preceding and current row\n            ), 0) = 0 then 0\n            else 1\n        end as is_staking\n    from dim\n    left join delegation_updated on\n        dim.block_date = date(delegation_updated.block_timestamp)\n        and dim.account_id = delegation_updated.account_id\n)\n\nselect\n    block_date,\n    sum(is_staking) as nof_stakers_daily\nfrom stakers\ngroup by block_date", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_active_stakers_daily_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:46.995985Z", "completed_at": "2025-03-04T12:52:47.000133Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.000713Z", "completed_at": "2025-03-04T12:52:47.000721Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006004810333251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_active_stakers_daily_base_mainnet", "compiled": true, "compiled_code": "\n\nwith delegation_updated as (\n    select\n        block_timestamp,\n        account_id,\n        amount\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n),\n\ndim as (\n    select\n        d.block_date,\n        accounts_unique.account_id\n    from (\n        select\n            generate_series(\n                date_trunc('day', date('2023-12-15')),\n                date_trunc('day', current_date), '1 day'::interval\n            ) as block_date\n    ) as d\n    cross join (\n        select distinct account_id from delegation_updated\n    ) as accounts_unique\n),\n\nstakers as (\n    select\n        dim.block_date,\n        dim.account_id,\n        case\n            when coalesce(last(delegation_updated.amount) over (\n                partition by dim.account_id\n                order by dim.block_date\n                rows between unbounded preceding and current row\n            ), 0) = 0 then 0\n            else 1\n        end as is_staking\n    from dim\n    left join delegation_updated on\n        dim.block_date = date(delegation_updated.block_timestamp)\n        and dim.account_id = delegation_updated.account_id\n)\n\nselect\n    block_date,\n    sum(is_staking) as nof_stakers_daily\nfrom stakers\ngroup by block_date", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_active_stakers_daily_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.003452Z", "completed_at": "2025-03-04T12:52:47.007741Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.008298Z", "completed_at": "2025-03-04T12:52:47.008308Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006120443344116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_delegation_arbitrum_sepolia", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated\nfrom\n    cumulative_delegation\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_delegation_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.011345Z", "completed_at": "2025-03-04T12:52:47.021170Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.021782Z", "completed_at": "2025-03-04T12:52:47.021791Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011805534362792969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_delegation_base_mainnet", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated\nfrom\n    cumulative_delegation\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_pool_delegation_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.025108Z", "completed_at": "2025-03-04T12:52:47.042841Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.044172Z", "completed_at": "2025-03-04T12:52:47.044184Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021085739135742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_delegation_updated_arbitrum_sepolia_event_name__DelegationUpdated.46889d7476", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'DelegationUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.047061Z", "completed_at": "2025-03-04T12:52:47.052000Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.052591Z", "completed_at": "2025-03-04T12:52:47.052601Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006883382797241211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_delegation_updated_base_mainnet_event_name__DelegationUpdated.67d059ef8b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'DelegationUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.055233Z", "completed_at": "2025-03-04T12:52:47.060721Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.061327Z", "completed_at": "2025-03-04T12:52:47.061339Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007477521896362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_arbitrum_sepolia_account_id__True__0.ead58dff29", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.064111Z", "completed_at": "2025-03-04T12:52:47.069556Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.070127Z", "completed_at": "2025-03-04T12:52:47.070136Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007314205169677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_arbitrum_sepolia_amount__True__0.aefd73a62f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.072855Z", "completed_at": "2025-03-04T12:52:47.079606Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.080171Z", "completed_at": "2025-03-04T12:52:47.080180Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00859522819519043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_arbitrum_sepolia_leverage__True__1000000000000000000__1000000000000000000.5ff8a67507", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage >= 1000000000000000000\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage <= 1000000000000000000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.082870Z", "completed_at": "2025-03-04T12:52:47.087584Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.088134Z", "completed_at": "2025-03-04T12:52:47.088142Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006517887115478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_arbitrum_sepolia_pool_id__True__0.f9aeca9f9a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.090805Z", "completed_at": "2025-03-04T12:52:47.095584Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.096156Z", "completed_at": "2025-03-04T12:52:47.096166Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006618976593017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_base_mainnet_account_id__True__0.682b9be0e3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.098794Z", "completed_at": "2025-03-04T12:52:47.103536Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.104094Z", "completed_at": "2025-03-04T12:52:47.104102Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00654149055480957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_base_mainnet_amount__True__0.a8783e193f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.106715Z", "completed_at": "2025-03-04T12:52:47.111397Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.111988Z", "completed_at": "2025-03-04T12:52:47.111996Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006519794464111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_base_mainnet_leverage__True__1000000000000000000__1000000000000000000.d5cf2050cc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage >= 1000000000000000000\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage <= 1000000000000000000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.114618Z", "completed_at": "2025-03-04T12:52:47.119606Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.120175Z", "completed_at": "2025-03-04T12:52:47.120184Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006803035736083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_base_mainnet_pool_id__True__0.4316662214", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.122852Z", "completed_at": "2025-03-04T12:52:47.129169Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.129745Z", "completed_at": "2025-03-04T12:52:47.129754Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008168458938598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_account_id.689f7da996", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.132377Z", "completed_at": "2025-03-04T12:52:47.136943Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.137523Z", "completed_at": "2025-03-04T12:52:47.137530Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006450653076171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_amount.77ddc8625f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.140276Z", "completed_at": "2025-03-04T12:52:47.145069Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.145650Z", "completed_at": "2025-03-04T12:52:47.145660Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006703615188598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_block_number.fa4a36eaeb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.148328Z", "completed_at": "2025-03-04T12:52:47.153292Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.154166Z", "completed_at": "2025-03-04T12:52:47.154175Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007132053375244141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_block_timestamp.ae4bac2433", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.156892Z", "completed_at": "2025-03-04T12:52:47.161944Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.162537Z", "completed_at": "2025-03-04T12:52:47.162545Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006914615631103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_collateral_type.db67498e80", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.165175Z", "completed_at": "2025-03-04T12:52:47.169778Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.170325Z", "completed_at": "2025-03-04T12:52:47.170333Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00640559196472168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_contract.8f08a5a9da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.173065Z", "completed_at": "2025-03-04T12:52:47.179438Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.180024Z", "completed_at": "2025-03-04T12:52:47.180034Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008220434188842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_event_name.4d0a81b0f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.188878Z", "completed_at": "2025-03-04T12:52:47.193623Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.194187Z", "completed_at": "2025-03-04T12:52:47.194198Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012026309967041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_id.12fb857e85", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.196911Z", "completed_at": "2025-03-04T12:52:47.201733Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.202296Z", "completed_at": "2025-03-04T12:52:47.202304Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0067081451416015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_leverage.d5bd156a6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect leverage\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere leverage is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.205031Z", "completed_at": "2025-03-04T12:52:47.209723Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.210281Z", "completed_at": "2025-03-04T12:52:47.210289Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065157413482666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_pool_id.8f59052242", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.213207Z", "completed_at": "2025-03-04T12:52:47.230628Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.232014Z", "completed_at": "2025-03-04T12:52:47.232027Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020354509353637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_sender.ef3937b25b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.234956Z", "completed_at": "2025-03-04T12:52:47.240110Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.240713Z", "completed_at": "2025-03-04T12:52:47.240722Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007151126861572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_arbitrum_sepolia_transaction_hash.8199cb0155", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.243509Z", "completed_at": "2025-03-04T12:52:47.248157Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.248732Z", "completed_at": "2025-03-04T12:52:47.248741Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006645679473876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_account_id.d54eaa7e33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.251485Z", "completed_at": "2025-03-04T12:52:47.256014Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.256590Z", "completed_at": "2025-03-04T12:52:47.256598Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00648951530456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_amount.a0ab515e0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.259267Z", "completed_at": "2025-03-04T12:52:47.265751Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.266317Z", "completed_at": "2025-03-04T12:52:47.266326Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00838470458984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_block_number.b7e4e88578", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.269008Z", "completed_at": "2025-03-04T12:52:47.273693Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.274273Z", "completed_at": "2025-03-04T12:52:47.274282Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006574153900146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_block_timestamp.c521a83475", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.276984Z", "completed_at": "2025-03-04T12:52:47.281565Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.282120Z", "completed_at": "2025-03-04T12:52:47.282129Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006467103958129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_collateral_type.ed1a32a32c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.284849Z", "completed_at": "2025-03-04T12:52:47.289494Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.290057Z", "completed_at": "2025-03-04T12:52:47.290066Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006581306457519531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_contract.26c790b056", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.292768Z", "completed_at": "2025-03-04T12:52:47.297543Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.298111Z", "completed_at": "2025-03-04T12:52:47.298120Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006665229797363281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_event_name.cfe99ccc6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.300811Z", "completed_at": "2025-03-04T12:52:47.305429Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.306061Z", "completed_at": "2025-03-04T12:52:47.306070Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006562471389770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_id.3f46fc5fef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.308764Z", "completed_at": "2025-03-04T12:52:47.315204Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.315782Z", "completed_at": "2025-03-04T12:52:47.315790Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00835108757019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_leverage.5efc0a9617", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect leverage\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere leverage is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.318453Z", "completed_at": "2025-03-04T12:52:47.323064Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.323642Z", "completed_at": "2025-03-04T12:52:47.323651Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006457328796386719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_pool_id.05c5c779bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.326370Z", "completed_at": "2025-03-04T12:52:47.330977Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.331544Z", "completed_at": "2025-03-04T12:52:47.331553Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006561994552612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_sender.0138cb07ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.334208Z", "completed_at": "2025-03-04T12:52:47.338916Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.339513Z", "completed_at": "2025-03-04T12:52:47.339522Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006625175476074219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_mainnet_transaction_hash.6915579646", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.342255Z", "completed_at": "2025-03-04T12:52:47.346807Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.347356Z", "completed_at": "2025-03-04T12:52:47.347364Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006487369537353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_delegation_updated_arbitrum_sepolia_id.beef769010", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.350035Z", "completed_at": "2025-03-04T12:52:47.361529Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.362768Z", "completed_at": "2025-03-04T12:52:47.362779Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014002084732055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_delegation_updated_base_mainnet_id.cb86d131a2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.365642Z", "completed_at": "2025-03-04T12:52:47.369942Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.370542Z", "completed_at": "2025-03-04T12:52:47.370551Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00627446174621582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_delegation_base_sepolia", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated,\n        ROW_NUMBER() over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated,\n    CAST(\n        account_id as text\n    ) as account_id\nfrom\n    cumulative_delegation\nwhere\n    rn = 1\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_account_delegation_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.373237Z", "completed_at": "2025-03-04T12:52:47.377909Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.378511Z", "completed_at": "2025-03-04T12:52:47.378520Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0066089630126953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_active_stakers_daily_base_sepolia", "compiled": true, "compiled_code": "\n\nwith delegation_updated as (\n    select\n        block_timestamp,\n        account_id,\n        amount\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n),\n\ndim as (\n    select\n        d.block_date,\n        accounts_unique.account_id\n    from (\n        select\n            generate_series(\n                date_trunc('day', date('2023-12-15')),\n                date_trunc('day', current_date), '1 day'::interval\n            ) as block_date\n    ) as d\n    cross join (\n        select distinct account_id from delegation_updated\n    ) as accounts_unique\n),\n\nstakers as (\n    select\n        dim.block_date,\n        dim.account_id,\n        case\n            when coalesce(last(delegation_updated.amount) over (\n                partition by dim.account_id\n                order by dim.block_date\n                rows between unbounded preceding and current row\n            ), 0) = 0 then 0\n            else 1\n        end as is_staking\n    from dim\n    left join delegation_updated on\n        dim.block_date = date(delegation_updated.block_timestamp)\n        and dim.account_id = delegation_updated.account_id\n)\n\nselect\n    block_date,\n    sum(is_staking) as nof_stakers_daily\nfrom stakers\ngroup by block_date", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_active_stakers_daily_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.381222Z", "completed_at": "2025-03-04T12:52:47.385539Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.386111Z", "completed_at": "2025-03-04T12:52:47.386120Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006214141845703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_delegation_base_sepolia", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated\nfrom\n    cumulative_delegation\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_pool_delegation_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.389014Z", "completed_at": "2025-03-04T12:52:47.394022Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.394615Z", "completed_at": "2025-03-04T12:52:47.394624Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007017850875854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_delegation_updated_base_sepolia_event_name__DelegationUpdated.05fda2d1e2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'DelegationUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.397308Z", "completed_at": "2025-03-04T12:52:47.414528Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.416555Z", "completed_at": "2025-03-04T12:52:47.416567Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020606517791748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_base_sepolia_account_id__True__0.744442e3e1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.419601Z", "completed_at": "2025-03-04T12:52:47.424648Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.425202Z", "completed_at": "2025-03-04T12:52:47.425210Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007032871246337891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_base_sepolia_amount__True__0.c17a0b7ccb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.427999Z", "completed_at": "2025-03-04T12:52:47.432856Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.433418Z", "completed_at": "2025-03-04T12:52:47.433427Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006851673126220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_base_sepolia_leverage__True__1000000000000000000__1000000000000000000.bc25b2b948", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage >= 1000000000000000000\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage <= 1000000000000000000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.436119Z", "completed_at": "2025-03-04T12:52:47.440989Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.441573Z", "completed_at": "2025-03-04T12:52:47.441581Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006707906723022461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_base_sepolia_pool_id__True__0.76dffc3ab3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.444307Z", "completed_at": "2025-03-04T12:52:47.448942Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.449520Z", "completed_at": "2025-03-04T12:52:47.449529Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006585359573364258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_account_id.eeaa67ead3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.452193Z", "completed_at": "2025-03-04T12:52:47.458621Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.459174Z", "completed_at": "2025-03-04T12:52:47.459183Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008297204971313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_amount.b946bd0b57", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.461895Z", "completed_at": "2025-03-04T12:52:47.466670Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.467234Z", "completed_at": "2025-03-04T12:52:47.467242Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006688594818115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_block_number.d1ae1c451b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.470008Z", "completed_at": "2025-03-04T12:52:47.474745Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.475294Z", "completed_at": "2025-03-04T12:52:47.475303Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006659030914306641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_block_timestamp.d9e4249b7d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.477992Z", "completed_at": "2025-03-04T12:52:47.482667Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.483214Z", "completed_at": "2025-03-04T12:52:47.483223Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006483554840087891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_collateral_type.0ccc2f8e54", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.485929Z", "completed_at": "2025-03-04T12:52:47.490663Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.491208Z", "completed_at": "2025-03-04T12:52:47.491216Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065381526947021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_contract.f5b6f539eb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.493902Z", "completed_at": "2025-03-04T12:52:47.498779Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.499349Z", "completed_at": "2025-03-04T12:52:47.499358Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006789445877075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_event_name.1eb3a277fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.502080Z", "completed_at": "2025-03-04T12:52:47.508744Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.509291Z", "completed_at": "2025-03-04T12:52:47.509299Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00855398178100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_id.dcd3b41380", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.511963Z", "completed_at": "2025-03-04T12:52:47.516649Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.517211Z", "completed_at": "2025-03-04T12:52:47.517219Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065479278564453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_leverage.b016b358da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect leverage\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere leverage is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.519924Z", "completed_at": "2025-03-04T12:52:47.530630Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.531252Z", "completed_at": "2025-03-04T12:52:47.531264Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012605667114257812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_pool_id.8e7b343725", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.534109Z", "completed_at": "2025-03-04T12:52:47.539188Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.539775Z", "completed_at": "2025-03-04T12:52:47.539785Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0071048736572265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_sender.ff059463dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.542521Z", "completed_at": "2025-03-04T12:52:47.547638Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.548208Z", "completed_at": "2025-03-04T12:52:47.548217Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007051944732666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_base_sepolia_transaction_hash.403e1a44d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.550975Z", "completed_at": "2025-03-04T12:52:47.557759Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.558322Z", "completed_at": "2025-03-04T12:52:47.558333Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008758544921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_delegation_updated_base_sepolia_id.09af5f863a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.561308Z", "completed_at": "2025-03-04T12:52:47.565579Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.566142Z", "completed_at": "2025-03-04T12:52:47.566150Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006403207778930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_delegation_eth_mainnet", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated,\n        ROW_NUMBER() over (\n            partition by\n                pool_id,\n                account_id,\n                collateral_type\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated,\n    CAST(\n        account_id as text\n    ) as account_id\nfrom\n    cumulative_delegation\nwhere\n    rn = 1\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_account_delegation_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.569024Z", "completed_at": "2025-03-04T12:52:47.573605Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.574177Z", "completed_at": "2025-03-04T12:52:47.574187Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006567239761352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_active_stakers_daily_eth_mainnet", "compiled": true, "compiled_code": "\n\nwith delegation_updated as (\n    select\n        block_timestamp,\n        account_id,\n        amount\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n),\n\ndim as (\n    select\n        d.block_date,\n        accounts_unique.account_id\n    from (\n        select\n            generate_series(\n                date_trunc('day', date('2023-12-15')),\n                date_trunc('day', current_date), '1 day'::interval\n            ) as block_date\n    ) as d\n    cross join (\n        select distinct account_id from delegation_updated\n    ) as accounts_unique\n),\n\nstakers as (\n    select\n        dim.block_date,\n        dim.account_id,\n        case\n            when coalesce(last(delegation_updated.amount) over (\n                partition by dim.account_id\n                order by dim.block_date\n                rows between unbounded preceding and current row\n            ), 0) = 0 then 0\n            else 1\n        end as is_staking\n    from dim\n    left join delegation_updated on\n        dim.block_date = date(delegation_updated.block_timestamp)\n        and dim.account_id = delegation_updated.account_id\n)\n\nselect\n    block_date,\n    sum(is_staking) as nof_stakers_daily\nfrom stakers\ngroup by block_date", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_active_stakers_daily_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.576918Z", "completed_at": "2025-03-04T12:52:47.581121Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.581710Z", "completed_at": "2025-03-04T12:52:47.581721Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0060617923736572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_delegation_eth_mainnet", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp,\n        account_id,\n        pool_id,\n        collateral_type,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n),\n\ncumulative_delegation as (\n    select\n        block_timestamp,\n        pool_id,\n        collateral_type,\n        SUM(change_in_amount) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as cumulative_amount_delegated\n    from\n        delegation_changes\n)\n\nselect\n    block_timestamp as ts,\n    pool_id,\n    collateral_type,\n    cumulative_amount_delegated as amount_delegated\nfrom\n    cumulative_delegation\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_delegation_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.584587Z", "completed_at": "2025-03-04T12:52:47.601597Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.603518Z", "completed_at": "2025-03-04T12:52:47.603532Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02042555809020996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_delegation_updated_eth_mainnet_event_name__DelegationUpdated.ec623b86f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'DelegationUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.607028Z", "completed_at": "2025-03-04T12:52:47.612378Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.612971Z", "completed_at": "2025-03-04T12:52:47.612980Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007242441177368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_eth_mainnet_account_id__True__0.3a3f9a0475", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.615724Z", "completed_at": "2025-03-04T12:52:47.621195Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.621788Z", "completed_at": "2025-03-04T12:52:47.621799Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007380962371826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_eth_mainnet_amount__True__0.94b97c0270", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.624561Z", "completed_at": "2025-03-04T12:52:47.629640Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.630198Z", "completed_at": "2025-03-04T12:52:47.630207Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006958961486816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_eth_mainnet_leverage__True__1000000000000000000__1000000000000000000.eb061a2128", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage >= 1000000000000000000\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not leverage <= 1000000000000000000\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.632893Z", "completed_at": "2025-03-04T12:52:47.638053Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.638636Z", "completed_at": "2025-03-04T12:52:47.638645Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0070362091064453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_delegation_updated_eth_mainnet_pool_id__True__0.fb370aa2ca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.641199Z", "completed_at": "2025-03-04T12:52:47.646162Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.646765Z", "completed_at": "2025-03-04T12:52:47.646775Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00681614875793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_account_id.141fb0f466", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.649417Z", "completed_at": "2025-03-04T12:52:47.656013Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.656591Z", "completed_at": "2025-03-04T12:52:47.656601Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008442163467407227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_amount.256481de3c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.659226Z", "completed_at": "2025-03-04T12:52:47.663890Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.664445Z", "completed_at": "2025-03-04T12:52:47.664453Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00650477409362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_block_number.5479fa5e08", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.667123Z", "completed_at": "2025-03-04T12:52:47.672129Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.672706Z", "completed_at": "2025-03-04T12:52:47.672716Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006886720657348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_block_timestamp.cd7fa2f4ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.675372Z", "completed_at": "2025-03-04T12:52:47.680296Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.680882Z", "completed_at": "2025-03-04T12:52:47.680891Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00677800178527832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_collateral_type.e3d73862e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.683560Z", "completed_at": "2025-03-04T12:52:47.688260Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.688830Z", "completed_at": "2025-03-04T12:52:47.688838Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006555795669555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_contract.5d369822a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.696867Z", "completed_at": "2025-03-04T12:52:47.704317Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.704929Z", "completed_at": "2025-03-04T12:52:47.704941Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014769315719604492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_event_name.69b76075f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.707602Z", "completed_at": "2025-03-04T12:52:47.712520Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.713089Z", "completed_at": "2025-03-04T12:52:47.713098Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006764650344848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_id.622c20c239", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.715791Z", "completed_at": "2025-03-04T12:52:47.720496Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.721045Z", "completed_at": "2025-03-04T12:52:47.721054Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006529092788696289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_leverage.3edfe7323e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect leverage\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere leverage is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.723708Z", "completed_at": "2025-03-04T12:52:47.728428Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.728996Z", "completed_at": "2025-03-04T12:52:47.729005Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006613016128540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_pool_id.914b411c12", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.731635Z", "completed_at": "2025-03-04T12:52:47.736174Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.736748Z", "completed_at": "2025-03-04T12:52:47.736756Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006356954574584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_sender.3a40ed8f3a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.739348Z", "completed_at": "2025-03-04T12:52:47.743825Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.744375Z", "completed_at": "2025-03-04T12:52:47.744383Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006291866302490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_delegation_updated_eth_mainnet_transaction_hash.048b7a5c68", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.746988Z", "completed_at": "2025-03-04T12:52:47.753202Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.753767Z", "completed_at": "2025-03-04T12:52:47.753775Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008023738861083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_delegation_updated_eth_mainnet_id.2467edf8ec", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.756341Z", "completed_at": "2025-03-04T12:52:47.761090Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.761673Z", "completed_at": "2025-03-04T12:52:47.761681Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006571769714355469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_deposited_arbitrum_mainnet_event_name__Deposited.63620c995c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Deposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.764299Z", "completed_at": "2025-03-04T12:52:47.769275Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.769855Z", "completed_at": "2025-03-04T12:52:47.769864Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00683283805847168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_arbitrum_mainnet_account_id__True__0.2fc937f08c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.773275Z", "completed_at": "2025-03-04T12:52:47.790130Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.790846Z", "completed_at": "2025-03-04T12:52:47.790858Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019629955291748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_arbitrum_mainnet_token_amount__True__0.825b012474", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.793610Z", "completed_at": "2025-03-04T12:52:47.799812Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.800372Z", "completed_at": "2025-03-04T12:52:47.800382Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008188009262084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_account_id.c7afbe52a5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.803050Z", "completed_at": "2025-03-04T12:52:47.807970Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.808545Z", "completed_at": "2025-03-04T12:52:47.808554Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00676417350769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_block_number.689c18351b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.811153Z", "completed_at": "2025-03-04T12:52:47.815968Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.816542Z", "completed_at": "2025-03-04T12:52:47.816552Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006643056869506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_block_timestamp.a16e8ef361", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.819200Z", "completed_at": "2025-03-04T12:52:47.824039Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.824650Z", "completed_at": "2025-03-04T12:52:47.824660Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0067386627197265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_collateral_type.42a3d10d97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.827375Z", "completed_at": "2025-03-04T12:52:47.832087Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.832655Z", "completed_at": "2025-03-04T12:52:47.832665Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006613731384277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_contract.a2cd7b2bb5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.835262Z", "completed_at": "2025-03-04T12:52:47.839906Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.840538Z", "completed_at": "2025-03-04T12:52:47.840547Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006532430648803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_event_name.8f5b81cb40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.843149Z", "completed_at": "2025-03-04T12:52:47.849504Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.850057Z", "completed_at": "2025-03-04T12:52:47.850066Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008162975311279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_id.2f7b341009", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.852690Z", "completed_at": "2025-03-04T12:52:47.857395Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.857965Z", "completed_at": "2025-03-04T12:52:47.857975Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065517425537109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_sender.5f276242f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.860592Z", "completed_at": "2025-03-04T12:52:47.871349Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.871969Z", "completed_at": "2025-03-04T12:52:47.871981Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01266026496887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_token_amount.238a5119e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.874690Z", "completed_at": "2025-03-04T12:52:47.879677Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.880232Z", "completed_at": "2025-03-04T12:52:47.880241Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006918191909790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_mainnet_transaction_hash.649446c0bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.882927Z", "completed_at": "2025-03-04T12:52:47.889278Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.889858Z", "completed_at": "2025-03-04T12:52:47.889869Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008227348327636719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_deposited_arbitrum_mainnet_id.65592bb86d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.892578Z", "completed_at": "2025-03-04T12:52:47.897498Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.898062Z", "completed_at": "2025-03-04T12:52:47.898072Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006774187088012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_deposited_arbitrum_sepolia_event_name__Deposited.1c0d375890", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Deposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.900762Z", "completed_at": "2025-03-04T12:52:47.905644Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.906194Z", "completed_at": "2025-03-04T12:52:47.906203Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006704568862915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_arbitrum_sepolia_account_id__True__0.d3287e563c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.908888Z", "completed_at": "2025-03-04T12:52:47.913740Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.914306Z", "completed_at": "2025-03-04T12:52:47.914315Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006708383560180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_arbitrum_sepolia_token_amount__True__0.0f0aa65236", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.917045Z", "completed_at": "2025-03-04T12:52:47.921775Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.922325Z", "completed_at": "2025-03-04T12:52:47.922335Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006556034088134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_account_id.0850a5cdd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.924989Z", "completed_at": "2025-03-04T12:52:47.929646Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.930193Z", "completed_at": "2025-03-04T12:52:47.930202Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0064697265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_block_number.c3036ab47e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.932895Z", "completed_at": "2025-03-04T12:52:47.939260Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.939840Z", "completed_at": "2025-03-04T12:52:47.939850Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008324861526489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_block_timestamp.423f2e9f55", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.942547Z", "completed_at": "2025-03-04T12:52:47.947153Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.947727Z", "completed_at": "2025-03-04T12:52:47.947736Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065555572509765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_collateral_type.88d590c5ca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.950385Z", "completed_at": "2025-03-04T12:52:47.955155Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.955741Z", "completed_at": "2025-03-04T12:52:47.955750Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006705045700073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_contract.98776e9523", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.958555Z", "completed_at": "2025-03-04T12:52:47.969854Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.975684Z", "completed_at": "2025-03-04T12:52:47.975698Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01864004135131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_event_name.ca52f6033b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.979286Z", "completed_at": "2025-03-04T12:52:47.985553Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.986113Z", "completed_at": "2025-03-04T12:52:47.986122Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008128881454467773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_id.7d3846b9e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.988841Z", "completed_at": "2025-03-04T12:52:47.993688Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:47.994241Z", "completed_at": "2025-03-04T12:52:47.994251Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006692647933959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_sender.2aeec9aec1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:47.996888Z", "completed_at": "2025-03-04T12:52:48.001666Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.002221Z", "completed_at": "2025-03-04T12:52:48.002231Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006598472595214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_token_amount.653e14e03e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.004901Z", "completed_at": "2025-03-04T12:52:48.009603Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.010159Z", "completed_at": "2025-03-04T12:52:48.010168Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006538867950439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_arbitrum_sepolia_transaction_hash.8084f934a8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.012886Z", "completed_at": "2025-03-04T12:52:48.017543Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.018113Z", "completed_at": "2025-03-04T12:52:48.018122Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065801143646240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_deposited_arbitrum_sepolia_id.9f22c1a15e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.020864Z", "completed_at": "2025-03-04T12:52:48.025747Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.026306Z", "completed_at": "2025-03-04T12:52:48.026315Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006813526153564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_deposited_base_mainnet_event_name__Deposited.8716111032", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Deposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.029004Z", "completed_at": "2025-03-04T12:52:48.041262Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.041890Z", "completed_at": "2025-03-04T12:52:48.041901Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014173746109008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_base_mainnet_account_id__True__0.64bcc1c124", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.044623Z", "completed_at": "2025-03-04T12:52:48.049670Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.050225Z", "completed_at": "2025-03-04T12:52:48.050234Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006895542144775391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_base_mainnet_token_amount__True__0.60382baf55", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.052984Z", "completed_at": "2025-03-04T12:52:48.057689Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.058245Z", "completed_at": "2025-03-04T12:52:48.058254Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00664210319519043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_account_id.7193b1a2c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.060949Z", "completed_at": "2025-03-04T12:52:48.065792Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.066349Z", "completed_at": "2025-03-04T12:52:48.066359Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0067844390869140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_block_number.08ee53cd26", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.069102Z", "completed_at": "2025-03-04T12:52:48.073911Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.074485Z", "completed_at": "2025-03-04T12:52:48.074495Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00676274299621582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_block_timestamp.560df883dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.077145Z", "completed_at": "2025-03-04T12:52:48.083679Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.084242Z", "completed_at": "2025-03-04T12:52:48.084253Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008387327194213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_collateral_type.be650ff685", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.086986Z", "completed_at": "2025-03-04T12:52:48.091958Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.092541Z", "completed_at": "2025-03-04T12:52:48.092551Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006934404373168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_contract.6e9ec1150a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.095244Z", "completed_at": "2025-03-04T12:52:48.100383Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.100964Z", "completed_at": "2025-03-04T12:52:48.100974Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007023334503173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_event_name.31446f5c55", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.103729Z", "completed_at": "2025-03-04T12:52:48.108746Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.109301Z", "completed_at": "2025-03-04T12:52:48.109311Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006992340087890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_id.ee16c24c51", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.112023Z", "completed_at": "2025-03-04T12:52:48.116907Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.117476Z", "completed_at": "2025-03-04T12:52:48.117485Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006822109222412109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_sender.7b7ebe7456", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.120124Z", "completed_at": "2025-03-04T12:52:48.124944Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.125515Z", "completed_at": "2025-03-04T12:52:48.125526Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006731271743774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_token_amount.5b0e4b379d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.128220Z", "completed_at": "2025-03-04T12:52:48.134847Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.135402Z", "completed_at": "2025-03-04T12:52:48.135412Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008504390716552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_mainnet_transaction_hash.272eb2e81d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.138116Z", "completed_at": "2025-03-04T12:52:48.143347Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.143930Z", "completed_at": "2025-03-04T12:52:48.143941Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0071811676025390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_deposited_base_mainnet_id.c13be8e337", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.153432Z", "completed_at": "2025-03-04T12:52:48.165327Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.166059Z", "completed_at": "2025-03-04T12:52:48.166073Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020763397216796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_deposited_base_sepolia_event_name__Deposited.2befe04139", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Deposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.168846Z", "completed_at": "2025-03-04T12:52:48.174219Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.174804Z", "completed_at": "2025-03-04T12:52:48.174812Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007242918014526367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_base_sepolia_account_id__True__0.7619844d60", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.177505Z", "completed_at": "2025-03-04T12:52:48.184033Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.184611Z", "completed_at": "2025-03-04T12:52:48.184620Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008422136306762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_base_sepolia_token_amount__True__0.266baf687b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.187251Z", "completed_at": "2025-03-04T12:52:48.192105Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.192691Z", "completed_at": "2025-03-04T12:52:48.192700Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006712198257446289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_account_id.d414fa2a62", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.195361Z", "completed_at": "2025-03-04T12:52:48.200137Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.200715Z", "completed_at": "2025-03-04T12:52:48.200724Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006623744964599609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_block_number.e9986d7fcf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.204397Z", "completed_at": "2025-03-04T12:52:48.214542Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.215121Z", "completed_at": "2025-03-04T12:52:48.215131Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012891292572021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_block_timestamp.cbbc8b2a2e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.217829Z", "completed_at": "2025-03-04T12:52:48.222687Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.223249Z", "completed_at": "2025-03-04T12:52:48.223258Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006691932678222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_collateral_type.a340ec02eb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.225934Z", "completed_at": "2025-03-04T12:52:48.232288Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.232877Z", "completed_at": "2025-03-04T12:52:48.232887Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008245468139648438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_contract.8dbc5afa3f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.235597Z", "completed_at": "2025-03-04T12:52:48.240576Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.241244Z", "completed_at": "2025-03-04T12:52:48.241254Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006945610046386719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_event_name.b7ccc83970", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.243977Z", "completed_at": "2025-03-04T12:52:48.249124Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.249724Z", "completed_at": "2025-03-04T12:52:48.249733Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007128000259399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_id.0591da203f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.252425Z", "completed_at": "2025-03-04T12:52:48.257325Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.257906Z", "completed_at": "2025-03-04T12:52:48.257915Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006834745407104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_sender.0468b8397d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.260667Z", "completed_at": "2025-03-04T12:52:48.265451Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.266015Z", "completed_at": "2025-03-04T12:52:48.266024Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0066568851470947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_token_amount.af75bc1896", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.268687Z", "completed_at": "2025-03-04T12:52:48.273423Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.273993Z", "completed_at": "2025-03-04T12:52:48.274003Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006585836410522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_base_sepolia_transaction_hash.305ad04c84", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.276652Z", "completed_at": "2025-03-04T12:52:48.282830Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.283381Z", "completed_at": "2025-03-04T12:52:48.283391Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008106231689453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_deposited_base_sepolia_id.3b38f638da", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.286072Z", "completed_at": "2025-03-04T12:52:48.290996Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.291571Z", "completed_at": "2025-03-04T12:52:48.291580Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0068416595458984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_deposited_eth_mainnet_event_name__Deposited.18727c72b0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Deposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.294261Z", "completed_at": "2025-03-04T12:52:48.299316Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.299900Z", "completed_at": "2025-03-04T12:52:48.299909Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0069200992584228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_eth_mainnet_account_id__True__0.5e26b84f6a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.302611Z", "completed_at": "2025-03-04T12:52:48.307761Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.308328Z", "completed_at": "2025-03-04T12:52:48.308337Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007112264633178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_deposited_eth_mainnet_token_amount__True__0.a57f2edd1b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.311031Z", "completed_at": "2025-03-04T12:52:48.315804Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.316351Z", "completed_at": "2025-03-04T12:52:48.316360Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006697654724121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_account_id.527d2b71c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.319046Z", "completed_at": "2025-03-04T12:52:48.323843Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.324388Z", "completed_at": "2025-03-04T12:52:48.324398Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006711006164550781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_block_number.5e2350a777", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.327077Z", "completed_at": "2025-03-04T12:52:48.339811Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.345915Z", "completed_at": "2025-03-04T12:52:48.345929Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020236492156982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_block_timestamp.6194c9ac03", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.349592Z", "completed_at": "2025-03-04T12:52:48.354619Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.355183Z", "completed_at": "2025-03-04T12:52:48.355193Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00689387321472168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_collateral_type.f940e4eba6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.357853Z", "completed_at": "2025-03-04T12:52:48.362677Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.363224Z", "completed_at": "2025-03-04T12:52:48.363233Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0066297054290771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_contract.d1fbae48f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.365847Z", "completed_at": "2025-03-04T12:52:48.371917Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.372482Z", "completed_at": "2025-03-04T12:52:48.372492Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007891178131103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_event_name.e185f199f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.380560Z", "completed_at": "2025-03-04T12:52:48.386059Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.386668Z", "completed_at": "2025-03-04T12:52:48.386679Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012860774993896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_id.9c5a20c527", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.389362Z", "completed_at": "2025-03-04T12:52:48.394074Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.394644Z", "completed_at": "2025-03-04T12:52:48.394654Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006559133529663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_sender.4c70b365da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.397284Z", "completed_at": "2025-03-04T12:52:48.401983Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.402555Z", "completed_at": "2025-03-04T12:52:48.402565Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006612539291381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_token_amount.dc8696c011", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.405246Z", "completed_at": "2025-03-04T12:52:48.410126Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.410696Z", "completed_at": "2025-03-04T12:52:48.410705Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006730556488037109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_deposited_eth_mainnet_transaction_hash.7087a2e09e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.413348Z", "completed_at": "2025-03-04T12:52:48.419235Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.419810Z", "completed_at": "2025-03-04T12:52:48.419820Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007800579071044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_deposited_eth_mainnet_id.97fd3624a5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.422481Z", "completed_at": "2025-03-04T12:52:48.427356Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.427922Z", "completed_at": "2025-03-04T12:52:48.427932Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006796598434448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_liquidation_arbitrum_mainnet_event_name__Liquidation.85cae70384", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Liquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.430635Z", "completed_at": "2025-03-04T12:52:48.435562Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.436124Z", "completed_at": "2025-03-04T12:52:48.436133Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006892681121826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_arbitrum_mainnet_account_id__True__0.71c92954dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.438891Z", "completed_at": "2025-03-04T12:52:48.444108Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.444693Z", "completed_at": "2025-03-04T12:52:48.444702Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00709080696105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_arbitrum_mainnet_liquidate_as_account_id__True__0.6ad1a29899", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.447348Z", "completed_at": "2025-03-04T12:52:48.452304Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.452884Z", "completed_at": "2025-03-04T12:52:48.452894Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006803750991821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_arbitrum_mainnet_pool_id__True__0.5d8232e38f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.455589Z", "completed_at": "2025-03-04T12:52:48.460306Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.460881Z", "completed_at": "2025-03-04T12:52:48.460890Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0066759586334228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_account_id.2b9f90b003", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.463549Z", "completed_at": "2025-03-04T12:52:48.469664Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.470214Z", "completed_at": "2025-03-04T12:52:48.470224Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008032083511352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_block_number.c43f5e1404", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.472889Z", "completed_at": "2025-03-04T12:52:48.477690Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.478234Z", "completed_at": "2025-03-04T12:52:48.478244Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006605863571166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_block_timestamp.e8b33f1dcb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.480911Z", "completed_at": "2025-03-04T12:52:48.485551Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.486110Z", "completed_at": "2025-03-04T12:52:48.486118Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0064508914947509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_collateral_type.7eae92d91d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.488882Z", "completed_at": "2025-03-04T12:52:48.493708Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.494260Z", "completed_at": "2025-03-04T12:52:48.494270Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00681757926940918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_contract.b02df4336b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.496989Z", "completed_at": "2025-03-04T12:52:48.501659Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.502219Z", "completed_at": "2025-03-04T12:52:48.502228Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006533622741699219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_event_name.c11ebbad99", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.504951Z", "completed_at": "2025-03-04T12:52:48.509776Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.510320Z", "completed_at": "2025-03-04T12:52:48.510329Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006680965423583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_id.428529a968", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.513008Z", "completed_at": "2025-03-04T12:52:48.525911Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.531917Z", "completed_at": "2025-03-04T12:52:48.531930Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020232200622558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_liquidate_as_account_id.00768ed71d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.535618Z", "completed_at": "2025-03-04T12:52:48.540598Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.541164Z", "completed_at": "2025-03-04T12:52:48.541174Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006857633590698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_pool_id.910c4e273f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.543848Z", "completed_at": "2025-03-04T12:52:48.553507Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.554780Z", "completed_at": "2025-03-04T12:52:48.554792Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01219630241394043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_sender.de5e917bc2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.557665Z", "completed_at": "2025-03-04T12:52:48.563444Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.564020Z", "completed_at": "2025-03-04T12:52:48.564030Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007750988006591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_mainnet_transaction_hash.7c4641c1db", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.566732Z", "completed_at": "2025-03-04T12:52:48.571184Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.571757Z", "completed_at": "2025-03-04T12:52:48.571765Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063741207122802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_liquidation_arbitrum_mainnet_id.ab79adeb33", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_liquidation_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.574394Z", "completed_at": "2025-03-04T12:52:48.579114Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.579691Z", "completed_at": "2025-03-04T12:52:48.579699Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006632804870605469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_liquidation_arbitrum_sepolia_event_name__Liquidation.32c120b3b8", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Liquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.582358Z", "completed_at": "2025-03-04T12:52:48.587187Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.587767Z", "completed_at": "2025-03-04T12:52:48.587776Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006738424301147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_arbitrum_sepolia_account_id__True__0.fa367d1bc5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.590316Z", "completed_at": "2025-03-04T12:52:48.595286Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.595882Z", "completed_at": "2025-03-04T12:52:48.595891Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00681614875793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_arbitrum_sepolia_liquidate_as_account_id__True__0.aa641f64fe", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.598548Z", "completed_at": "2025-03-04T12:52:48.603446Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.604015Z", "completed_at": "2025-03-04T12:52:48.604025Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00682377815246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_arbitrum_sepolia_pool_id__True__0.d1a4bd0579", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.606677Z", "completed_at": "2025-03-04T12:52:48.612428Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.612990Z", "completed_at": "2025-03-04T12:52:48.612998Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007664203643798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_account_id.2f2251c90a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.615658Z", "completed_at": "2025-03-04T12:52:48.620046Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.620618Z", "completed_at": "2025-03-04T12:52:48.620626Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006325721740722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_block_number.28a164853c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.623227Z", "completed_at": "2025-03-04T12:52:48.627857Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.628415Z", "completed_at": "2025-03-04T12:52:48.628423Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00652766227722168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_block_timestamp.2b65fcd144", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.631112Z", "completed_at": "2025-03-04T12:52:48.635769Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.636327Z", "completed_at": "2025-03-04T12:52:48.636336Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006476163864135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_collateral_type.611a474b69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.639051Z", "completed_at": "2025-03-04T12:52:48.643791Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.644337Z", "completed_at": "2025-03-04T12:52:48.644345Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065517425537109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_contract.b3848813ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.647008Z", "completed_at": "2025-03-04T12:52:48.651742Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.652291Z", "completed_at": "2025-03-04T12:52:48.652300Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006630659103393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_event_name.6dff9cd9a5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.654977Z", "completed_at": "2025-03-04T12:52:48.661022Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.661599Z", "completed_at": "2025-03-04T12:52:48.661609Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007983922958374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_id.acb7c881c1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.664327Z", "completed_at": "2025-03-04T12:52:48.669259Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.669842Z", "completed_at": "2025-03-04T12:52:48.669851Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006826639175415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_liquidate_as_account_id.8fb362bd59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.672780Z", "completed_at": "2025-03-04T12:52:48.677847Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.678403Z", "completed_at": "2025-03-04T12:52:48.678412Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007109642028808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_pool_id.851303c6c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.681134Z", "completed_at": "2025-03-04T12:52:48.685948Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.686531Z", "completed_at": "2025-03-04T12:52:48.686540Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0066661834716796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_sender.b1951bbf59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.689207Z", "completed_at": "2025-03-04T12:52:48.693915Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.694478Z", "completed_at": "2025-03-04T12:52:48.694487Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006531238555908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_arbitrum_sepolia_transaction_hash.aa34dc1b7f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.697185Z", "completed_at": "2025-03-04T12:52:48.709631Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.715329Z", "completed_at": "2025-03-04T12:52:48.715342Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019594430923461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_liquidation_arbitrum_sepolia_id.7489e81022", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_liquidation_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.724508Z", "completed_at": "2025-03-04T12:52:48.729320Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.729900Z", "completed_at": "2025-03-04T12:52:48.729909Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007540464401245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_liquidation_base_mainnet_event_name__Liquidation.b1c18b74aa", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Liquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.732569Z", "completed_at": "2025-03-04T12:52:48.737249Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.737829Z", "completed_at": "2025-03-04T12:52:48.737837Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006522178649902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_base_mainnet_account_id__True__0.136053be04", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.740425Z", "completed_at": "2025-03-04T12:52:48.745026Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.745605Z", "completed_at": "2025-03-04T12:52:48.745612Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006411314010620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_base_mainnet_liquidate_as_account_id__True__0.7686495bd9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.748176Z", "completed_at": "2025-03-04T12:52:48.753982Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.754554Z", "completed_at": "2025-03-04T12:52:48.754562Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0076045989990234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_base_mainnet_pool_id__True__0.9af005d964", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.757133Z", "completed_at": "2025-03-04T12:52:48.761419Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.761992Z", "completed_at": "2025-03-04T12:52:48.761999Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00608062744140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_account_id.2ddc542a47", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.764610Z", "completed_at": "2025-03-04T12:52:48.768961Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.769524Z", "completed_at": "2025-03-04T12:52:48.769532Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006181955337524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_block_number.896bca83af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.772099Z", "completed_at": "2025-03-04T12:52:48.776509Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.777065Z", "completed_at": "2025-03-04T12:52:48.777072Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0061991214752197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_block_timestamp.cc029a06b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.779659Z", "completed_at": "2025-03-04T12:52:48.784027Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.784602Z", "completed_at": "2025-03-04T12:52:48.784609Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0061686038970947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_collateral_type.c78d491846", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.787178Z", "completed_at": "2025-03-04T12:52:48.791574Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:48.792130Z", "completed_at": "2025-03-04T12:52:48.792137Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006172895431518555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_contract.cb2b40daff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:48.794736Z", "completed_at": "2025-03-04T12:52:49.034951Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.037534Z", "completed_at": "2025-03-04T12:52:49.037547Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.24406647682189941, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_event_name.b9c8609dd4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.040546Z", "completed_at": "2025-03-04T12:52:49.045099Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.045673Z", "completed_at": "2025-03-04T12:52:49.045681Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006505250930786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_id.c949216a70", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.048240Z", "completed_at": "2025-03-04T12:52:49.052645Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.053199Z", "completed_at": "2025-03-04T12:52:49.053207Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006180286407470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_liquidate_as_account_id.b2d7294162", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.055804Z", "completed_at": "2025-03-04T12:52:49.061098Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.061674Z", "completed_at": "2025-03-04T12:52:49.061682Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00710749626159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_pool_id.0342c9a9f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.064314Z", "completed_at": "2025-03-04T12:52:49.068861Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.069411Z", "completed_at": "2025-03-04T12:52:49.069419Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006368875503540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_sender.0c2397ee76", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.072078Z", "completed_at": "2025-03-04T12:52:49.076580Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.077134Z", "completed_at": "2025-03-04T12:52:49.077142Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063097476959228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_mainnet_transaction_hash.adee36dc81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.079729Z", "completed_at": "2025-03-04T12:52:49.084015Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.084587Z", "completed_at": "2025-03-04T12:52:49.084594Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0060842037200927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_liquidation_base_mainnet_id.876ec280ff", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_liquidation_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.087151Z", "completed_at": "2025-03-04T12:52:49.091700Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.092258Z", "completed_at": "2025-03-04T12:52:49.092265Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063283443450927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_liquidation_base_sepolia_event_name__Liquidation.24bb1726f1", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Liquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.094859Z", "completed_at": "2025-03-04T12:52:49.099403Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.099979Z", "completed_at": "2025-03-04T12:52:49.099986Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063555240631103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_liquidation_eth_mainnet_event_name__Liquidation.10d3a28f0f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Liquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.102580Z", "completed_at": "2025-03-04T12:52:49.108509Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.109066Z", "completed_at": "2025-03-04T12:52:49.109073Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007739543914794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_base_sepolia_account_id__True__0.02852291f8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.111687Z", "completed_at": "2025-03-04T12:52:49.116256Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.116839Z", "completed_at": "2025-03-04T12:52:49.116846Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006396293640136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_base_sepolia_liquidate_as_account_id__True__0.6947f1cc05", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.119407Z", "completed_at": "2025-03-04T12:52:49.123965Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.124539Z", "completed_at": "2025-03-04T12:52:49.124546Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006364107131958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_base_sepolia_pool_id__True__0.7493427efd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.127114Z", "completed_at": "2025-03-04T12:52:49.131727Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.132275Z", "completed_at": "2025-03-04T12:52:49.132282Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00642085075378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_eth_mainnet_account_id__True__0.d050e2f72d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.134870Z", "completed_at": "2025-03-04T12:52:49.139446Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.140021Z", "completed_at": "2025-03-04T12:52:49.140029Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006389141082763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_eth_mainnet_liquidate_as_account_id__True__0.02ffa79c7a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.142620Z", "completed_at": "2025-03-04T12:52:49.147272Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.147862Z", "completed_at": "2025-03-04T12:52:49.147869Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006464481353759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_liquidation_eth_mainnet_pool_id__True__0.0b09af0400", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.150432Z", "completed_at": "2025-03-04T12:52:49.156380Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.156972Z", "completed_at": "2025-03-04T12:52:49.156980Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007765531539916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_account_id.0aa7b969f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.159570Z", "completed_at": "2025-03-04T12:52:49.163970Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.164544Z", "completed_at": "2025-03-04T12:52:49.164552Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0062253475189208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_block_number.f510e99a58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.167153Z", "completed_at": "2025-03-04T12:52:49.171629Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.172219Z", "completed_at": "2025-03-04T12:52:49.172227Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00630950927734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_block_timestamp.212c6a9018", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.174907Z", "completed_at": "2025-03-04T12:52:49.179365Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.179938Z", "completed_at": "2025-03-04T12:52:49.179945Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006299734115600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_collateral_type.c93d2f649b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.182512Z", "completed_at": "2025-03-04T12:52:49.186985Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.187553Z", "completed_at": "2025-03-04T12:52:49.187561Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006283283233642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_contract.2d1b4b38d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.190125Z", "completed_at": "2025-03-04T12:52:49.194617Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.195162Z", "completed_at": "2025-03-04T12:52:49.195170Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006300210952758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_event_name.ab3ef77d1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.197759Z", "completed_at": "2025-03-04T12:52:49.211321Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.221163Z", "completed_at": "2025-03-04T12:52:49.221178Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02468585968017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_id.efbd949b78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.225450Z", "completed_at": "2025-03-04T12:52:49.230325Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.230903Z", "completed_at": "2025-03-04T12:52:49.230912Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0067386627197265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_liquidate_as_account_id.3e3ca344a6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.233624Z", "completed_at": "2025-03-04T12:52:49.239412Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.239989Z", "completed_at": "2025-03-04T12:52:49.239997Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007624387741088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_pool_id.0059acd0f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.242712Z", "completed_at": "2025-03-04T12:52:49.247225Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.247795Z", "completed_at": "2025-03-04T12:52:49.247802Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006331205368041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_sender.3afbae055d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.250456Z", "completed_at": "2025-03-04T12:52:49.254996Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.255562Z", "completed_at": "2025-03-04T12:52:49.255570Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063478946685791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_base_sepolia_transaction_hash.78921d6775", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.258223Z", "completed_at": "2025-03-04T12:52:49.262727Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.263280Z", "completed_at": "2025-03-04T12:52:49.263288Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006313323974609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_account_id.13c94e5d02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.265984Z", "completed_at": "2025-03-04T12:52:49.270752Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.271308Z", "completed_at": "2025-03-04T12:52:49.271317Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006647825241088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_block_number.8c6c1cbe38", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.274035Z", "completed_at": "2025-03-04T12:52:49.278551Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.279103Z", "completed_at": "2025-03-04T12:52:49.279110Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006403923034667969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_block_timestamp.c85990976a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.281840Z", "completed_at": "2025-03-04T12:52:49.287941Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.288506Z", "completed_at": "2025-03-04T12:52:49.288515Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008024930953979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_collateral_type.59a2516e40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.291173Z", "completed_at": "2025-03-04T12:52:49.295805Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.296360Z", "completed_at": "2025-03-04T12:52:49.296369Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065326690673828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_contract.05fe5f9d13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.299067Z", "completed_at": "2025-03-04T12:52:49.303775Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.304326Z", "completed_at": "2025-03-04T12:52:49.304334Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006562709808349609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_event_name.a70ed0a4dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.307093Z", "completed_at": "2025-03-04T12:52:49.311776Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.312343Z", "completed_at": "2025-03-04T12:52:49.312353Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006668806076049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_id.8175916dcc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.315102Z", "completed_at": "2025-03-04T12:52:49.319848Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.320393Z", "completed_at": "2025-03-04T12:52:49.320402Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006668806076049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_liquidate_as_account_id.778690c632", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.323074Z", "completed_at": "2025-03-04T12:52:49.327724Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.328287Z", "completed_at": "2025-03-04T12:52:49.328295Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065267086029052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_pool_id.0966ab4339", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.331063Z", "completed_at": "2025-03-04T12:52:49.337824Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.338384Z", "completed_at": "2025-03-04T12:52:49.338393Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008636713027954102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_sender.734f70adf9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.341130Z", "completed_at": "2025-03-04T12:52:49.345724Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.346285Z", "completed_at": "2025-03-04T12:52:49.346293Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006421804428100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_liquidation_eth_mainnet_transaction_hash.e3478512f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.348985Z", "completed_at": "2025-03-04T12:52:49.353522Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.354096Z", "completed_at": "2025-03-04T12:52:49.354103Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006422519683837891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_liquidation_base_sepolia_id.321d95d29c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_liquidation_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.356822Z", "completed_at": "2025-03-04T12:52:49.361256Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.361823Z", "completed_at": "2025-03-04T12:52:49.361831Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00635218620300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_liquidation_eth_mainnet_id.05a09be0f1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_liquidation_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.364508Z", "completed_at": "2025-03-04T12:52:49.369295Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.369896Z", "completed_at": "2025-03-04T12:52:49.369904Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00672149658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_registered_arbitrum_mainnet_event_name__MarketRegistered.61c1a17f46", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.372624Z", "completed_at": "2025-03-04T12:52:49.377069Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.377640Z", "completed_at": "2025-03-04T12:52:49.377648Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006384372711181641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_block_number.49f898432d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.380302Z", "completed_at": "2025-03-04T12:52:49.398724Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.403552Z", "completed_at": "2025-03-04T12:52:49.403567Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02457880973815918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_block_timestamp.9ccff6bb17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.407100Z", "completed_at": "2025-03-04T12:52:49.411767Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.412325Z", "completed_at": "2025-03-04T12:52:49.412332Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065119266510009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_contract.705a5b5579", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.414978Z", "completed_at": "2025-03-04T12:52:49.419441Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.420012Z", "completed_at": "2025-03-04T12:52:49.420019Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0062830448150634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_event_name.5833e57631", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.422626Z", "completed_at": "2025-03-04T12:52:49.428423Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.428992Z", "completed_at": "2025-03-04T12:52:49.429000Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007681608200073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_id.4c7305111a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.431614Z", "completed_at": "2025-03-04T12:52:49.436056Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.436624Z", "completed_at": "2025-03-04T12:52:49.436633Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006315469741821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_market.4671a5874b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere market is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.439226Z", "completed_at": "2025-03-04T12:52:49.443711Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.444260Z", "completed_at": "2025-03-04T12:52:49.444267Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006265878677368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_market_id.edc1b5f010", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.446880Z", "completed_at": "2025-03-04T12:52:49.451363Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.451954Z", "completed_at": "2025-03-04T12:52:49.451962Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006331205368041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_sender.a9f878c2c9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.454566Z", "completed_at": "2025-03-04T12:52:49.459537Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.460105Z", "completed_at": "2025-03-04T12:52:49.460114Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006791114807128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_mainnet_transaction_hash.2e6db31571", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.462772Z", "completed_at": "2025-03-04T12:52:49.467432Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.468014Z", "completed_at": "2025-03-04T12:52:49.468024Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006493806838989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_arbitrum_mainnet_id.c4fce94bc5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.470632Z", "completed_at": "2025-03-04T12:52:49.477101Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.477675Z", "completed_at": "2025-03-04T12:52:49.477684Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008299589157104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_arbitrum_mainnet_market_id.f4e9d45c5f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    market_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_registered_arbitrum_mainnet\"\nwhere market_id is not null\ngroup by market_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.480374Z", "completed_at": "2025-03-04T12:52:49.485258Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.485844Z", "completed_at": "2025-03-04T12:52:49.485853Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00674748420715332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_registered_arbitrum_sepolia_event_name__MarketRegistered.0d43228789", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.488601Z", "completed_at": "2025-03-04T12:52:49.493328Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.493926Z", "completed_at": "2025-03-04T12:52:49.493936Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006732940673828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_block_number.94a8562b13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.496597Z", "completed_at": "2025-03-04T12:52:49.501791Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.502347Z", "completed_at": "2025-03-04T12:52:49.502356Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00705409049987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_block_timestamp.fa45bb6a23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.505026Z", "completed_at": "2025-03-04T12:52:49.509763Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.510309Z", "completed_at": "2025-03-04T12:52:49.510317Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006535530090332031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_contract.8d5b49ae4d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.513415Z", "completed_at": "2025-03-04T12:52:49.518002Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.518573Z", "completed_at": "2025-03-04T12:52:49.518581Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0064067840576171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_event_name.72e398dd82", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.521167Z", "completed_at": "2025-03-04T12:52:49.527400Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.527988Z", "completed_at": "2025-03-04T12:52:49.527997Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008062124252319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_id.88f5db38d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.530586Z", "completed_at": "2025-03-04T12:52:49.535097Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.535669Z", "completed_at": "2025-03-04T12:52:49.535677Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063283443450927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_market.67fc30dc60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere market is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.538267Z", "completed_at": "2025-03-04T12:52:49.542730Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.543291Z", "completed_at": "2025-03-04T12:52:49.543299Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0062716007232666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_market_id.c742aae1d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.545944Z", "completed_at": "2025-03-04T12:52:49.550732Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.551292Z", "completed_at": "2025-03-04T12:52:49.551303Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006628751754760742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_sender.f940ee9c3a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.559378Z", "completed_at": "2025-03-04T12:52:49.565449Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.566727Z", "completed_at": "2025-03-04T12:52:49.566740Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013947010040283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_arbitrum_sepolia_transaction_hash.9904023035", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.582823Z", "completed_at": "2025-03-04T12:52:49.587539Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.588110Z", "completed_at": "2025-03-04T12:52:49.588121Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0076601505279541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_arbitrum_sepolia_id.5964f1fbf3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.590853Z", "completed_at": "2025-03-04T12:52:49.595397Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.595996Z", "completed_at": "2025-03-04T12:52:49.596004Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00646519660949707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_arbitrum_sepolia_market_id.78637df31f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    market_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_registered_arbitrum_sepolia\"\nwhere market_id is not null\ngroup by market_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.598694Z", "completed_at": "2025-03-04T12:52:49.603418Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.604015Z", "completed_at": "2025-03-04T12:52:49.604022Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006642818450927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_registered_base_mainnet_event_name__MarketRegistered.b297851ae7", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.606691Z", "completed_at": "2025-03-04T12:52:49.611118Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.611696Z", "completed_at": "2025-03-04T12:52:49.611703Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006247282028198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_block_number.14cb004b58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.614378Z", "completed_at": "2025-03-04T12:52:49.620345Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.620919Z", "completed_at": "2025-03-04T12:52:49.620927Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007879495620727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_block_timestamp.41726ce377", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.623734Z", "completed_at": "2025-03-04T12:52:49.628064Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.628630Z", "completed_at": "2025-03-04T12:52:49.628638Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006371736526489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_contract.0187a84f0b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.631280Z", "completed_at": "2025-03-04T12:52:49.635772Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.636333Z", "completed_at": "2025-03-04T12:52:49.636340Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006351470947265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_event_name.c5054f10bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.639046Z", "completed_at": "2025-03-04T12:52:49.643634Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.644183Z", "completed_at": "2025-03-04T12:52:49.644191Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006398200988769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_id.58185ba1ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.646918Z", "completed_at": "2025-03-04T12:52:49.651393Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.651966Z", "completed_at": "2025-03-04T12:52:49.651973Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006408214569091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_market.6a5311f9b7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere market is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.654686Z", "completed_at": "2025-03-04T12:52:49.660531Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.661083Z", "completed_at": "2025-03-04T12:52:49.661090Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007784843444824219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_market_id.8fa95d0adc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.663761Z", "completed_at": "2025-03-04T12:52:49.668157Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.668749Z", "completed_at": "2025-03-04T12:52:49.668757Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006300926208496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_sender.9825c848f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.671520Z", "completed_at": "2025-03-04T12:52:49.676498Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.677136Z", "completed_at": "2025-03-04T12:52:49.677145Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007021903991699219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_mainnet_transaction_hash.7e49be40a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.679936Z", "completed_at": "2025-03-04T12:52:49.684567Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.685128Z", "completed_at": "2025-03-04T12:52:49.685136Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065822601318359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_base_mainnet_id.b0e87b4cdb", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.687812Z", "completed_at": "2025-03-04T12:52:49.692171Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.692746Z", "completed_at": "2025-03-04T12:52:49.692753Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006173849105834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_base_mainnet_market_id.e03ba7f671", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    market_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_registered_base_mainnet\"\nwhere market_id is not null\ngroup by market_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.695434Z", "completed_at": "2025-03-04T12:52:49.700036Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.700614Z", "completed_at": "2025-03-04T12:52:49.700622Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006532430648803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_registered_base_sepolia_event_name__MarketRegistered.52bda7875b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.703308Z", "completed_at": "2025-03-04T12:52:49.709769Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.710318Z", "completed_at": "2025-03-04T12:52:49.710327Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00827479362487793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_block_number.fd8cdd563c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.713047Z", "completed_at": "2025-03-04T12:52:49.717457Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.718039Z", "completed_at": "2025-03-04T12:52:49.718047Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006346225738525391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_block_timestamp.209ede7f48", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.720711Z", "completed_at": "2025-03-04T12:52:49.725127Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.725719Z", "completed_at": "2025-03-04T12:52:49.725727Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006254673004150391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_contract.8cc1db09cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.747320Z", "completed_at": "2025-03-04T12:52:49.758693Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.766446Z", "completed_at": "2025-03-04T12:52:49.766474Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03939247131347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_event_name.c0f99c65cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.770754Z", "completed_at": "2025-03-04T12:52:49.775405Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.775986Z", "completed_at": "2025-03-04T12:52:49.775993Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006512165069580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_id.6150b3d520", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.778714Z", "completed_at": "2025-03-04T12:52:49.783081Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.783654Z", "completed_at": "2025-03-04T12:52:49.783661Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0062901973724365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_market.c1fe5f76b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere market is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.786368Z", "completed_at": "2025-03-04T12:52:49.790756Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.791317Z", "completed_at": "2025-03-04T12:52:49.791325Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00632476806640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_market_id.dc3f59aaaf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.793998Z", "completed_at": "2025-03-04T12:52:49.798794Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.799354Z", "completed_at": "2025-03-04T12:52:49.799362Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006695270538330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_sender.0ec521b301", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.802045Z", "completed_at": "2025-03-04T12:52:49.806643Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.807197Z", "completed_at": "2025-03-04T12:52:49.807205Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006453990936279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_base_sepolia_transaction_hash.de234a0b4d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.809846Z", "completed_at": "2025-03-04T12:52:49.816053Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.816619Z", "completed_at": "2025-03-04T12:52:49.816627Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008015632629394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_base_sepolia_id.1efe4c6aec", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.819168Z", "completed_at": "2025-03-04T12:52:49.823450Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.824017Z", "completed_at": "2025-03-04T12:52:49.824024Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006063938140869141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_base_sepolia_market_id.37a04d292a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    market_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_registered_base_sepolia\"\nwhere market_id is not null\ngroup by market_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.826646Z", "completed_at": "2025-03-04T12:52:49.831530Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.832099Z", "completed_at": "2025-03-04T12:52:49.832108Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006784677505493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_registered_eth_mainnet_event_name__MarketRegistered.db8e4ac8d2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.834718Z", "completed_at": "2025-03-04T12:52:49.839205Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.839782Z", "completed_at": "2025-03-04T12:52:49.839790Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006291627883911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_block_number.7eec7e8f2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.842377Z", "completed_at": "2025-03-04T12:52:49.846835Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.847389Z", "completed_at": "2025-03-04T12:52:49.847396Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063054561614990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_block_timestamp.0b8054a50c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.849999Z", "completed_at": "2025-03-04T12:52:49.854504Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.855063Z", "completed_at": "2025-03-04T12:52:49.855072Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063097476959228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_contract.f582853f53", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.857670Z", "completed_at": "2025-03-04T12:52:49.864164Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.864749Z", "completed_at": "2025-03-04T12:52:49.864758Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008307695388793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_event_name.0d26c502fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.867359Z", "completed_at": "2025-03-04T12:52:49.871811Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.872355Z", "completed_at": "2025-03-04T12:52:49.872363Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0062732696533203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_id.35b1e4e0f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.875000Z", "completed_at": "2025-03-04T12:52:49.879407Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.879975Z", "completed_at": "2025-03-04T12:52:49.879982Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006215333938598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_market.fccda96dc8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere market is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.882557Z", "completed_at": "2025-03-04T12:52:49.886972Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.887543Z", "completed_at": "2025-03-04T12:52:49.887551Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006239891052246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_market_id.2e945dec67", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.890110Z", "completed_at": "2025-03-04T12:52:49.894548Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.895094Z", "completed_at": "2025-03-04T12:52:49.895101Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0062084197998046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_sender.6e63d1acbc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.897686Z", "completed_at": "2025-03-04T12:52:49.902028Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.902590Z", "completed_at": "2025-03-04T12:52:49.902598Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006120443344116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_registered_eth_mainnet_transaction_hash.7c581f179e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.905132Z", "completed_at": "2025-03-04T12:52:49.911113Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.911676Z", "completed_at": "2025-03-04T12:52:49.911684Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0077686309814453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_eth_mainnet_id.ae732b851b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.914249Z", "completed_at": "2025-03-04T12:52:49.918815Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.919362Z", "completed_at": "2025-03-04T12:52:49.919371Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0063762664794921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_registered_eth_mainnet_market_id.496c543395", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    market_id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_registered_eth_mainnet\"\nwhere market_id is not null\ngroup by market_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.922074Z", "completed_at": "2025-03-04T12:52:49.926243Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.926830Z", "completed_at": "2025-03-04T12:52:49.926838Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0060193538665771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_market_updated_arbitrum_mainnet", "compiled": true, "compiled_code": "with market_updated as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\n)\n\nselect\n    id,\n    block_timestamp as ts,\n    transaction_hash,\n    event_name,\n    market_id,\n    collateral_type,\n    \n    credit_capacity / 1e18\n as credit_capacity,\n    \n    net_issuance / 1e18\n as net_issuance,\n    \n    token_amount / 1e18\n as token_amount\nfrom\n    market_updated", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.497123Z", "completed_at": "2025-03-04T12:52:49.759325Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.767393Z", "completed_at": "2025-03-04T12:52:49.767401Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 5.447816371917725, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.lt_rebalanced_base_mainnet", "compiled": true, "compiled_code": "with events as (\n    WITH raw_data AS (\n    \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_short3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_long3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_long3_event_rebalanced\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_short3_event_rebalanced\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"current_leverage\" as numeric) as \"current_leverage\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_short3_event_rebalanced\"\n\n            \n        )\n\n        \n  )\nSELECT\n  *,\n  SUBSTRING(\n    \"_dbt_source_relation\"\n    FROM\n      'lt_([^_]+_[^_]+)_event_[^_]+$'\n  ) AS token\nFROM\n  raw_data -- noqa\n)\n\nselect * -- noqa: ST06\nfrom\n    events\nwhere\n    \n        true\n    \norder by\n    id", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"lt_rebalanced_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.932890Z", "completed_at": "2025-03-04T12:52:49.944803Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.956980Z", "completed_at": "2025-03-04T12:52:49.956998Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026823997497558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_updated_arbitrum_mainnet_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.b6d0a34129", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.939671Z", "completed_at": "2025-03-04T12:52:49.958139Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.960722Z", "completed_at": "2025-03-04T12:52:49.960731Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02860569953918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_arbitrum_mainnet_deposited_collateral_value__True__0.f78663cae5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not deposited_collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.964418Z", "completed_at": "2025-03-04T12:52:49.975888Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.976652Z", "completed_at": "2025-03-04T12:52:49.976664Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014970779418945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_arbitrum_mainnet_market_id__True__0.8e0b3e9147", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.970736Z", "completed_at": "2025-03-04T12:52:49.977622Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.978914Z", "completed_at": "2025-03-04T12:52:49.978922Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015233278274536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_arbitrum_mainnet_token_amount__True__0.bfc2ca181b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.982319Z", "completed_at": "2025-03-04T12:52:49.992407Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.993725Z", "completed_at": "2025-03-04T12:52:49.993735Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01403045654296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_block_number.eea9214a4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.987915Z", "completed_at": "2025-03-04T12:52:49.993143Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:49.994631Z", "completed_at": "2025-03-04T12:52:49.994638Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013016700744628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_block_timestamp.2bd177f07f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:49.999217Z", "completed_at": "2025-03-04T12:52:50.010074Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.011223Z", "completed_at": "2025-03-04T12:52:50.011233Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01449441909790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_collateral_type.5ccd7ace00", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.003622Z", "completed_at": "2025-03-04T12:52:50.010653Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.012131Z", "completed_at": "2025-03-04T12:52:50.012139Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0147552490234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_contract.3ed1c1d699", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.016788Z", "completed_at": "2025-03-04T12:52:50.026177Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.027394Z", "completed_at": "2025-03-04T12:52:50.027402Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01314687728881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_credit_capacity.09c391d59d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.021170Z", "completed_at": "2025-03-04T12:52:50.026843Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.028292Z", "completed_at": "2025-03-04T12:52:50.028300Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013372659683227539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_deposited_collateral_value.45b375717f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deposited_collateral_value\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere deposited_collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.032940Z", "completed_at": "2025-03-04T12:52:50.042756Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.044054Z", "completed_at": "2025-03-04T12:52:50.044066Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013644695281982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_event_name.1198969560", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.037644Z", "completed_at": "2025-03-04T12:52:50.043498Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.045007Z", "completed_at": "2025-03-04T12:52:50.045015Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013955831527709961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_id.6634d79b97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.049761Z", "completed_at": "2025-03-04T12:52:50.061576Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.062904Z", "completed_at": "2025-03-04T12:52:50.062916Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01572132110595703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_market_id.92b8458e5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.054587Z", "completed_at": "2025-03-04T12:52:50.062311Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.063843Z", "completed_at": "2025-03-04T12:52:50.063850Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0159761905670166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_net_issuance.016c84545c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.068541Z", "completed_at": "2025-03-04T12:52:50.078255Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.078930Z", "completed_at": "2025-03-04T12:52:50.078940Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012926578521728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_sender.fe1f2d4275", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.073456Z", "completed_at": "2025-03-04T12:52:50.081153Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.082299Z", "completed_at": "2025-03-04T12:52:50.082307Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0156097412109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_token_amount.b89be9c43a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.083183Z", "completed_at": "2025-03-04T12:52:50.094229Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.094907Z", "completed_at": "2025-03-04T12:52:50.094915Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014569282531738281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_mainnet_transaction_hash.9db6bb9d6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.089862Z", "completed_at": "2025-03-04T12:52:50.095763Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.097063Z", "completed_at": "2025-03-04T12:52:50.097071Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008562564849853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_updated_arbitrum_mainnet_id.ef7b2e2622", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_market_updated_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.100477Z", "completed_at": "2025-03-04T12:52:50.112350Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.112952Z", "completed_at": "2025-03-04T12:52:50.112962Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015116453170776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_market_updated_arbitrum_sepolia", "compiled": true, "compiled_code": "with market_updated as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\n)\n\nselect\n    id,\n    block_timestamp as ts,\n    transaction_hash,\n    event_name,\n    market_id,\n    collateral_type,\n    \n    credit_capacity / 1e18\n as credit_capacity,\n    \n    net_issuance / 1e18\n as net_issuance,\n    \n    token_amount / 1e18\n as token_amount\nfrom\n    market_updated", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.105676Z", "completed_at": "2025-03-04T12:52:50.114456Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.116060Z", "completed_at": "2025-03-04T12:52:50.116069Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016318559646606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_updated_arbitrum_sepolia_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.4a106f8344", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.118175Z", "completed_at": "2025-03-04T12:52:50.128992Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.131797Z", "completed_at": "2025-03-04T12:52:50.131808Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016889572143554688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_arbitrum_sepolia_deposited_collateral_value__True__0.bb2ac3f8fc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not deposited_collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.124446Z", "completed_at": "2025-03-04T12:52:50.131222Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.164301Z", "completed_at": "2025-03-04T12:52:50.164321Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.041527748107910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_arbitrum_sepolia_market_id__True__0.f774945861", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.179790Z", "completed_at": "2025-03-04T12:52:50.186002Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.187174Z", "completed_at": "2025-03-04T12:52:50.187184Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01625370979309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_block_number.18b9e7bff4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.174254Z", "completed_at": "2025-03-04T12:52:50.186581Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.188115Z", "completed_at": "2025-03-04T12:52:50.188122Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018552780151367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_arbitrum_sepolia_token_amount__True__0.33dea408c4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.192855Z", "completed_at": "2025-03-04T12:52:50.202595Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.203794Z", "completed_at": "2025-03-04T12:52:50.203805Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013449668884277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_block_timestamp.f0ccbe740a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.197754Z", "completed_at": "2025-03-04T12:52:50.203216Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.204713Z", "completed_at": "2025-03-04T12:52:50.204720Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013724565505981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_collateral_type.0163e724c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.209395Z", "completed_at": "2025-03-04T12:52:50.218991Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.219785Z", "completed_at": "2025-03-04T12:52:50.219798Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012977838516235352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_contract.925fa67624", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.214061Z", "completed_at": "2025-03-04T12:52:50.220735Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.222033Z", "completed_at": "2025-03-04T12:52:50.222042Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01450490951538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_credit_capacity.ed07eaef21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.225607Z", "completed_at": "2025-03-04T12:52:50.238022Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.238638Z", "completed_at": "2025-03-04T12:52:50.238649Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01579904556274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_deposited_collateral_value.2a9afd7205", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deposited_collateral_value\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere deposited_collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.231390Z", "completed_at": "2025-03-04T12:52:50.239563Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.240837Z", "completed_at": "2025-03-04T12:52:50.240845Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015984535217285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_event_name.07d4bde491", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.249675Z", "completed_at": "2025-03-04T12:52:50.254213Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.255444Z", "completed_at": "2025-03-04T12:52:50.255455Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011940479278564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_market_id.4d2767c0b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.244251Z", "completed_at": "2025-03-04T12:52:50.254853Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.256345Z", "completed_at": "2025-03-04T12:52:50.256352Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014682531356811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_id.087024faa4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.265648Z", "completed_at": "2025-03-04T12:52:50.270589Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.271761Z", "completed_at": "2025-03-04T12:52:50.271771Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01262354850769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_sender.b4216822d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.261028Z", "completed_at": "2025-03-04T12:52:50.271172Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.272686Z", "completed_at": "2025-03-04T12:52:50.272694Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014153242111206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_net_issuance.ab387b275f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.277326Z", "completed_at": "2025-03-04T12:52:50.288496Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.289676Z", "completed_at": "2025-03-04T12:52:50.289686Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014927387237548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_token_amount.e980630f1e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.281963Z", "completed_at": "2025-03-04T12:52:50.289070Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.290600Z", "completed_at": "2025-03-04T12:52:50.290608Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015148162841796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_arbitrum_sepolia_transaction_hash.697e3dd319", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.299698Z", "completed_at": "2025-03-04T12:52:50.304169Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.304803Z", "completed_at": "2025-03-04T12:52:50.304813Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011476278305053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_market_updated_base_mainnet", "compiled": true, "compiled_code": "with market_updated as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\n)\n\nselect\n    id,\n    block_timestamp as ts,\n    transaction_hash,\n    event_name,\n    market_id,\n    collateral_type,\n    \n    credit_capacity / 1e18\n as credit_capacity,\n    \n    net_issuance / 1e18\n as net_issuance,\n    \n    token_amount / 1e18\n as token_amount\nfrom\n    market_updated", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.295198Z", "completed_at": "2025-03-04T12:52:50.305659Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.307055Z", "completed_at": "2025-03-04T12:52:50.307063Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014325141906738281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_updated_arbitrum_sepolia_id.7ed403a10d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_market_updated_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.310927Z", "completed_at": "2025-03-04T12:52:50.321505Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.322200Z", "completed_at": "2025-03-04T12:52:50.322209Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014017105102539062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_updated_base_mainnet_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.06e57bf5c5", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.316643Z", "completed_at": "2025-03-04T12:52:50.323757Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.325014Z", "completed_at": "2025-03-04T12:52:50.325022Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014837503433227539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_base_mainnet_deposited_collateral_value__True__0.3945f7eca1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not deposited_collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.327154Z", "completed_at": "2025-03-04T12:52:50.339681Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.341053Z", "completed_at": "2025-03-04T12:52:50.341062Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016865968704223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_base_mainnet_market_id__True__0.ab7b335af7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.486863Z", "completed_at": "2025-03-04T12:52:50.169004Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.171722Z", "completed_at": "2025-03-04T12:52:50.171732Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 5.862239122390747, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.lt_minted_base_mainnet", "compiled": true, "compiled_code": "with events as (\n    WITH raw_data AS (\n    \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_short3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_long3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_long3_event_minted\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_short3_event_minted\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"event_name\" as text) as \"event_name\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_short3_event_minted\"\n\n            \n        )\n\n        \n  )\nSELECT\n  *,\n  SUBSTRING(\n    \"_dbt_source_relation\"\n    FROM\n      'lt_([^_]+_[^_]+)_event_[^_]+$'\n  ) AS token\nFROM\n  raw_data -- noqa\n)\n\nselect -- noqa: ST06\n    *\nfrom\n    events\nwhere\n    \n        true\n    \norder by\n    id", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"lt_minted_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.333337Z", "completed_at": "2025-03-04T12:52:50.341928Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.344119Z", "completed_at": "2025-03-04T12:52:50.344127Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0123138427734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_base_mainnet_token_amount__True__0.159f754b68", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:44.529380Z", "completed_at": "2025-03-04T12:52:50.170424Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.172990Z", "completed_at": "2025-03-04T12:52:50.172998Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.862864017486572, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.lt_redeemed_base_mainnet", "compiled": true, "compiled_code": "with events as (\n    WITH raw_data AS (\n    \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_eth_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_btc_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_sol_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_xrp_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pepe_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_doge_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_wif_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_pnut_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_bonk_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_fartcoin_short3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_long3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_long3_event_redeemed\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_short3_event_redeemed\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"contract\" as text) as \"contract\" ,\n                    cast(\"referral_code\" as text) as \"referral_code\" ,\n                    cast(\"block_number\" as integer) as \"block_number\" ,\n                    cast(\"block_timestamp\" as timestamp with time zone) as \"block_timestamp\" ,\n                    cast(\"base_asset_amount\" as numeric) as \"base_asset_amount\" ,\n                    cast(\"transaction_hash\" as text) as \"transaction_hash\" ,\n                    cast(\"id\" as character varying) as \"id\" ,\n                    cast(\"leveraged_token_amount\" as numeric) as \"leveraged_token_amount\" ,\n                    cast(\"recipient\" as text) as \"recipient\" ,\n                    cast(\"event_name\" as text) as \"event_name\" ,\n                    cast(\"caller\" as text) as \"caller\" \n\n            from \"analytics\".\"raw_base_mainnet_lt\".\"lt_trump_short3_event_redeemed\"\n\n            \n        )\n\n        \n  )\nSELECT\n  *,\n  SUBSTRING(\n    \"_dbt_source_relation\"\n    FROM\n      'lt_([^_]+_[^_]+)_event_[^_]+$'\n  ) AS token\nFROM\n  raw_data -- noqa\n)\n\nselect -- noqa: ST06\n    *\nfrom\n    events\nwhere\n    \n        true\n    \norder by\n    id", "relation_name": "\"analytics\".\"prod_raw_base_mainnet\".\"lt_redeemed_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.350502Z", "completed_at": "2025-03-04T12:52:50.362531Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.368837Z", "completed_at": "2025-03-04T12:52:50.368846Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02393817901611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_block_number.e9e83211a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.357306Z", "completed_at": "2025-03-04T12:52:50.368205Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.374262Z", "completed_at": "2025-03-04T12:52:50.374272Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02601456642150879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_block_timestamp.648a5f6e8c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.363088Z", "completed_at": "2025-03-04T12:52:50.375304Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.378062Z", "completed_at": "2025-03-04T12:52:50.378069Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028306007385253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_collateral_type.6e2d5502d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.369846Z", "completed_at": "2025-03-04T12:52:50.377458Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.380207Z", "completed_at": "2025-03-04T12:52:50.380214Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018529653549194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_contract.6d90834e3f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.384267Z", "completed_at": "2025-03-04T12:52:50.397443Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.407296Z", "completed_at": "2025-03-04T12:52:50.407308Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028479337692260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_credit_capacity.4cad1dd5dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.388803Z", "completed_at": "2025-03-04T12:52:50.402343Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.408381Z", "completed_at": "2025-03-04T12:52:50.408390Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028947114944458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_deposited_collateral_value.905a08bfbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deposited_collateral_value\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere deposited_collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.398075Z", "completed_at": "2025-03-04T12:52:50.409367Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.412185Z", "completed_at": "2025-03-04T12:52:50.412193Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028635025024414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_event_name.6afe397967", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.402963Z", "completed_at": "2025-03-04T12:52:50.411549Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.414356Z", "completed_at": "2025-03-04T12:52:50.414364Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019165992736816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_id.bdb44c0b54", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.418416Z", "completed_at": "2025-03-04T12:52:50.434613Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.442417Z", "completed_at": "2025-03-04T12:52:50.442430Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02950143814086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_market_id.de78147356", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.423260Z", "completed_at": "2025-03-04T12:52:50.440444Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.443401Z", "completed_at": "2025-03-04T12:52:50.443408Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029804229736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_net_issuance.334062f568", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.435335Z", "completed_at": "2025-03-04T12:52:50.445226Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.447756Z", "completed_at": "2025-03-04T12:52:50.447764Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019926071166992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_token_amount.ce8694585d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.430197Z", "completed_at": "2025-03-04T12:52:50.445800Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.448638Z", "completed_at": "2025-03-04T12:52:50.448648Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03094768524169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_sender.5b6ff88208", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.452745Z", "completed_at": "2025-03-04T12:52:50.465178Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.475670Z", "completed_at": "2025-03-04T12:52:50.475687Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02875995635986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_mainnet_transaction_hash.7b8eb5d77d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.459067Z", "completed_at": "2025-03-04T12:52:50.475023Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.477009Z", "completed_at": "2025-03-04T12:52:50.477017Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027598857879638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_updated_base_mainnet_id.b2a5abdd48", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_market_updated_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.470210Z", "completed_at": "2025-03-04T12:52:50.478000Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.480647Z", "completed_at": "2025-03-04T12:52:50.480655Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022385120391845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_updated_eth_mainnet_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.7de7687ac0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.465904Z", "completed_at": "2025-03-04T12:52:50.478591Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.481521Z", "completed_at": "2025-03-04T12:52:50.481532Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023922204971313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_market_updated_eth_mainnet", "compiled": true, "compiled_code": "with market_updated as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\n)\n\nselect\n    id,\n    block_timestamp as ts,\n    transaction_hash,\n    event_name,\n    market_id,\n    collateral_type,\n    \n    credit_capacity / 1e18\n as credit_capacity,\n    \n    net_issuance / 1e18\n as net_issuance,\n    \n    token_amount / 1e18\n as token_amount\nfrom\n    market_updated", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.494966Z", "completed_at": "2025-03-04T12:52:50.505964Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.511873Z", "completed_at": "2025-03-04T12:52:50.511887Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028978824615478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_eth_mainnet_market_id__True__0.58438c84b4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.488091Z", "completed_at": "2025-03-04T12:52:50.506556Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.512996Z", "completed_at": "2025-03-04T12:52:50.513006Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030713319778442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_eth_mainnet_deposited_collateral_value__True__0.06de946dba", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not deposited_collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.501225Z", "completed_at": "2025-03-04T12:52:50.513856Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.516577Z", "completed_at": "2025-03-04T12:52:50.516588Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030050039291381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_eth_mainnet_token_amount__True__0.fdf0db60b7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.507159Z", "completed_at": "2025-03-04T12:52:50.515966Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.518812Z", "completed_at": "2025-03-04T12:52:50.518819Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031479597091674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_block_number.f4a7497fbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.522878Z", "completed_at": "2025-03-04T12:52:50.534391Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.546236Z", "completed_at": "2025-03-04T12:52:50.546249Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028866052627563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_block_timestamp.683bea78d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.527674Z", "completed_at": "2025-03-04T12:52:50.540134Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.547382Z", "completed_at": "2025-03-04T12:52:50.547391Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029356956481933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_collateral_type.c83211fd2f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.535046Z", "completed_at": "2025-03-04T12:52:50.549324Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.551894Z", "completed_at": "2025-03-04T12:52:50.551902Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029815673828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_contract.97f87c3b4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.541956Z", "completed_at": "2025-03-04T12:52:50.549970Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.552782Z", "completed_at": "2025-03-04T12:52:50.552789Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020799636840820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_credit_capacity.baa89e2e5a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.556771Z", "completed_at": "2025-03-04T12:52:50.568794Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.578941Z", "completed_at": "2025-03-04T12:52:50.578952Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027846574783325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_deposited_collateral_value.93b2bdea02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deposited_collateral_value\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere deposited_collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.563009Z", "completed_at": "2025-03-04T12:52:50.573854Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.580023Z", "completed_at": "2025-03-04T12:52:50.580031Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026474714279174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_event_name.6d64c2a842", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.569532Z", "completed_at": "2025-03-04T12:52:50.580938Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.583678Z", "completed_at": "2025-03-04T12:52:50.583686Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02214813232421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_id.f7dedb5ddb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.574457Z", "completed_at": "2025-03-04T12:52:50.583061Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.585832Z", "completed_at": "2025-03-04T12:52:50.585839Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02356266975402832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_market_id.649fb28529", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.589896Z", "completed_at": "2025-03-04T12:52:50.602946Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.612910Z", "completed_at": "2025-03-04T12:52:50.612923Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02850198745727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_net_issuance.3e92a0dc4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.596317Z", "completed_at": "2025-03-04T12:52:50.603525Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.613970Z", "completed_at": "2025-03-04T12:52:50.613978Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0288851261138916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_sender.12a64a65ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.608484Z", "completed_at": "2025-03-04T12:52:50.616688Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.619307Z", "completed_at": "2025-03-04T12:52:50.619314Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018695354461669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_transaction_hash.3a0d8e52a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.604099Z", "completed_at": "2025-03-04T12:52:50.618076Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.620796Z", "completed_at": "2025-03-04T12:52:50.620804Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03170204162597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_eth_mainnet_token_amount.a9f6d4a588", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.622964Z", "completed_at": "2025-03-04T12:52:50.634118Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.636500Z", "completed_at": "2025-03-04T12:52:50.636509Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019175291061401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_updated_eth_mainnet_id.7cd00231f1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_market_updated_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.628215Z", "completed_at": "2025-03-04T12:52:50.635313Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.643990Z", "completed_at": "2025-03-04T12:52:50.643999Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025422096252441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_market_updated_base_sepolia", "compiled": true, "compiled_code": "with market_updated as (\n    select\n        id,\n        block_timestamp,\n        block_number,\n        transaction_hash,\n        contract,\n        event_name,\n        market_id,\n        net_issuance,\n        sender,\n        collateral_type,\n        credit_capacity,\n        token_amount\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\n)\n\nselect\n    id,\n    block_timestamp as ts,\n    transaction_hash,\n    event_name,\n    market_id,\n    collateral_type,\n    \n    credit_capacity / 1e18\n as credit_capacity,\n    \n    net_issuance / 1e18\n as net_issuance,\n    \n    token_amount / 1e18\n as token_amount\nfrom\n    market_updated", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.644902Z", "completed_at": "2025-03-04T12:52:50.652163Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.654911Z", "completed_at": "2025-03-04T12:52:50.654921Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021852970123291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_base_sepolia_deposited_collateral_value__True__0.ff17627b64", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not deposited_collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.637361Z", "completed_at": "2025-03-04T12:52:50.653651Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.656375Z", "completed_at": "2025-03-04T12:52:50.656384Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024199247360229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_market_updated_base_sepolia_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.97084835ea", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.657310Z", "completed_at": "2025-03-04T12:52:50.669103Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.671668Z", "completed_at": "2025-03-04T12:52:50.671678Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020328521728515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_base_sepolia_market_id__True__0.c2038f3200", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.662781Z", "completed_at": "2025-03-04T12:52:50.671069Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.677821Z", "completed_at": "2025-03-04T12:52:50.677831Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02492547035217285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_market_updated_base_sepolia_token_amount__True__0.00d32c5847", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.673245Z", "completed_at": "2025-03-04T12:52:50.686746Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.688838Z", "completed_at": "2025-03-04T12:52:50.688848Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02067422866821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_block_number.450e88640c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.679576Z", "completed_at": "2025-03-04T12:52:50.689819Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.692290Z", "completed_at": "2025-03-04T12:52:50.692301Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022591590881347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_block_timestamp.66be40faea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.693253Z", "completed_at": "2025-03-04T12:52:50.705768Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.708207Z", "completed_at": "2025-03-04T12:52:50.708216Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021007776260375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_collateral_type.a64be17284", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.699797Z", "completed_at": "2025-03-04T12:52:50.706968Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.713572Z", "completed_at": "2025-03-04T12:52:50.713580Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025560617446899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_contract.cf139c06ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.709100Z", "completed_at": "2025-03-04T12:52:50.716571Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.723113Z", "completed_at": "2025-03-04T12:52:50.723121Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019126176834106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_credit_capacity.2033e021e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.717143Z", "completed_at": "2025-03-04T12:52:50.724822Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.731123Z", "completed_at": "2025-03-04T12:52:50.731132Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02367568016052246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_deposited_collateral_value.47b96d9782", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect deposited_collateral_value\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere deposited_collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.726685Z", "completed_at": "2025-03-04T12:52:50.738068Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.740529Z", "completed_at": "2025-03-04T12:52:50.740538Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0189056396484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_event_name.c0e71ec841", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.732083Z", "completed_at": "2025-03-04T12:52:50.738685Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.741384Z", "completed_at": "2025-03-04T12:52:50.741394Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019153118133544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_id.179b4fa862", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.742290Z", "completed_at": "2025-03-04T12:52:50.755129Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.757258Z", "completed_at": "2025-03-04T12:52:50.757268Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02095770835876465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_market_id.81913bae24", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.750893Z", "completed_at": "2025-03-04T12:52:50.758777Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.765039Z", "completed_at": "2025-03-04T12:52:50.765048Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025289058685302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_net_issuance.85d70c9059", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.760635Z", "completed_at": "2025-03-04T12:52:50.772637Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.778896Z", "completed_at": "2025-03-04T12:52:50.778910Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02317500114440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_sender.b57e7709cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.765958Z", "completed_at": "2025-03-04T12:52:50.773870Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.780610Z", "completed_at": "2025-03-04T12:52:50.780621Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024198532104492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_token_amount.a8f7145772", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.774478Z", "completed_at": "2025-03-04T12:52:50.782324Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.788847Z", "completed_at": "2025-03-04T12:52:50.788856Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01864767074584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_market_updated_base_sepolia_transaction_hash.6351c7ce23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.782924Z", "completed_at": "2025-03-04T12:52:50.791113Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.798323Z", "completed_at": "2025-03-04T12:52:50.798332Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025182008743286133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_market_updated_base_sepolia_id.945f14ee77", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_market_updated_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.792998Z", "completed_at": "2025-03-04T12:52:50.805987Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.812480Z", "completed_at": "2025-03-04T12:52:50.812495Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02444171905517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pools_arbitrum_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        pool_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        owner\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pools_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.799869Z", "completed_at": "2025-03-04T12:52:50.811844Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.814305Z", "completed_at": "2025-03-04T12:52:50.814314Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024546146392822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_pool_created_arbitrum_mainnet_event_name__PoolCreated.e7fda490fd", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PoolCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.807369Z", "completed_at": "2025-03-04T12:52:50.815179Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.821926Z", "completed_at": "2025-03-04T12:52:50.821936Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022835969924926758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_pool_created_arbitrum_mainnet_pool_id__True__0.fc42e6b4ce", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.816675Z", "completed_at": "2025-03-04T12:52:50.824898Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.827381Z", "completed_at": "2025-03-04T12:52:50.827391Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02081894874572754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_block_number.184c04858e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.828272Z", "completed_at": "2025-03-04T12:52:50.844005Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.846335Z", "completed_at": "2025-03-04T12:52:50.846348Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02360844612121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_block_timestamp.4bcfbab318", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.832777Z", "completed_at": "2025-03-04T12:52:50.847199Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.849789Z", "completed_at": "2025-03-04T12:52:50.849800Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026292800903320312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_contract.ad227a594e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.838747Z", "completed_at": "2025-03-04T12:52:50.849099Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.855906Z", "completed_at": "2025-03-04T12:52:50.855916Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029400348663330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_event_name.67b202a2ae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.850691Z", "completed_at": "2025-03-04T12:52:50.859120Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.865500Z", "completed_at": "2025-03-04T12:52:50.865510Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02081775665283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_id.b0e9e6535d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.860422Z", "completed_at": "2025-03-04T12:52:50.867856Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.878018Z", "completed_at": "2025-03-04T12:52:50.878027Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02306056022644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_owner.749821fb46", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.869106Z", "completed_at": "2025-03-04T12:52:50.880837Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.883228Z", "completed_at": "2025-03-04T12:52:50.883239Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023545026779174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_pool_id.ce6f3bd570", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.873575Z", "completed_at": "2025-03-04T12:52:50.881988Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.890214Z", "completed_at": "2025-03-04T12:52:50.890225Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025485754013061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_sender.b85ac4e404", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.884130Z", "completed_at": "2025-03-04T12:52:50.897502Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.899545Z", "completed_at": "2025-03-04T12:52:50.899554Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020698070526123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_mainnet_transaction_hash.762082599b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.893260Z", "completed_at": "2025-03-04T12:52:50.901014Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.906236Z", "completed_at": "2025-03-04T12:52:50.906245Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023771047592163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_pool_created_arbitrum_mainnet_id.4a0435d902", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_pool_created_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.902856Z", "completed_at": "2025-03-04T12:52:50.913476Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.916102Z", "completed_at": "2025-03-04T12:52:50.916111Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01811361312866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pools_arbitrum_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        pool_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        owner\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pools_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.907290Z", "completed_at": "2025-03-04T12:52:50.915507Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.922524Z", "completed_at": "2025-03-04T12:52:50.922535Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02386474609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_pool_created_arbitrum_sepolia_event_name__PoolCreated.d04166c685", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PoolCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.917033Z", "completed_at": "2025-03-04T12:52:50.928895Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.931083Z", "completed_at": "2025-03-04T12:52:50.931092Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019350528717041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_pool_created_arbitrum_sepolia_pool_id__True__0.d3bc479935", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.924477Z", "completed_at": "2025-03-04T12:52:50.932632Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.935063Z", "completed_at": "2025-03-04T12:52:50.935071Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02026224136352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_block_number.28a66d0e74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.935947Z", "completed_at": "2025-03-04T12:52:50.948877Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.955032Z", "completed_at": "2025-03-04T12:52:50.955042Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024873971939086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_block_timestamp.fd0d1a2266", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.942949Z", "completed_at": "2025-03-04T12:52:50.954391Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.956713Z", "completed_at": "2025-03-04T12:52:50.956722Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02478957176208496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_contract.bd9da8f8fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.950154Z", "completed_at": "2025-03-04T12:52:50.957650Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.964170Z", "completed_at": "2025-03-04T12:52:50.964179Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021993637084960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_event_name.9148e96626", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.958938Z", "completed_at": "2025-03-04T12:52:50.966447Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.968952Z", "completed_at": "2025-03-04T12:52:50.968962Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019558429718017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_id.2ecf600861", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.974905Z", "completed_at": "2025-03-04T12:52:50.981654Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.989674Z", "completed_at": "2025-03-04T12:52:50.989684Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023924589157104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_pool_id.1fccbc8d94", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.970451Z", "completed_at": "2025-03-04T12:52:50.988340Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.990697Z", "completed_at": "2025-03-04T12:52:50.990704Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025725603103637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_owner.980ce0b630", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.982265Z", "completed_at": "2025-03-04T12:52:50.995842Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:50.997973Z", "completed_at": "2025-03-04T12:52:50.997983Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028255939483642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_sender.999d6ba1d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:50.991633Z", "completed_at": "2025-03-04T12:52:50.999572Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.002081Z", "completed_at": "2025-03-04T12:52:51.002092Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021163463592529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_arbitrum_sepolia_transaction_hash.09e0ac3340", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.004200Z", "completed_at": "2025-03-04T12:52:51.014727Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.021671Z", "completed_at": "2025-03-04T12:52:51.021685Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022830963134765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_pool_created_arbitrum_sepolia_id.520ef444f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_pool_created_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.009618Z", "completed_at": "2025-03-04T12:52:51.020274Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.022744Z", "completed_at": "2025-03-04T12:52:51.022754Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022680282592773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pools_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        pool_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        owner\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_pools_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.015454Z", "completed_at": "2025-03-04T12:52:51.023627Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.030411Z", "completed_at": "2025-03-04T12:52:51.030419Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027002334594726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_pool_created_base_mainnet_event_name__PoolCreated.a1f7123964", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PoolCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.024209Z", "completed_at": "2025-03-04T12:52:51.032954Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.035393Z", "completed_at": "2025-03-04T12:52:51.035401Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0214998722076416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_pool_created_base_mainnet_pool_id__True__0.39f67d8bfc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.043309Z", "completed_at": "2025-03-04T12:52:51.050000Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.056290Z", "completed_at": "2025-03-04T12:52:51.056307Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02410268783569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_block_timestamp.94505d3912", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.036921Z", "completed_at": "2025-03-04T12:52:51.050583Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.057283Z", "completed_at": "2025-03-04T12:52:51.057292Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02574944496154785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_block_number.8ef3c64233", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.051170Z", "completed_at": "2025-03-04T12:52:51.062894Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.065023Z", "completed_at": "2025-03-04T12:52:51.065033Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02888631820678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_contract.6f3850c4d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.058328Z", "completed_at": "2025-03-04T12:52:51.066613Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.069089Z", "completed_at": "2025-03-04T12:52:51.069097Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019922733306884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_event_name.0770467455", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.071171Z", "completed_at": "2025-03-04T12:52:51.088667Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.095693Z", "completed_at": "2025-03-04T12:52:51.095704Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029837608337402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_id.44cc56adee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.076671Z", "completed_at": "2025-03-04T12:52:51.095091Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.096941Z", "completed_at": "2025-03-04T12:52:51.096951Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029865026473999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_owner.875044313e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.089333Z", "completed_at": "2025-03-04T12:52:51.097831Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.100524Z", "completed_at": "2025-03-04T12:52:51.100535Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018685340881347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_sender.0c210116c7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.082832Z", "completed_at": "2025-03-04T12:52:51.098440Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.101401Z", "completed_at": "2025-03-04T12:52:51.101409Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03096461296081543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_pool_id.d63bf41661", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.111806Z", "completed_at": "2025-03-04T12:52:51.117684Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.127291Z", "completed_at": "2025-03-04T12:52:51.127306Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024552345275878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_pool_created_base_mainnet_id.f5ca162629", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.107282Z", "completed_at": "2025-03-04T12:52:51.121681Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.128615Z", "completed_at": "2025-03-04T12:52:51.128623Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026447296142578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_mainnet_transaction_hash.88325163ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_pool_created_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.118260Z", "completed_at": "2025-03-04T12:52:51.129670Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.132256Z", "completed_at": "2025-03-04T12:52:51.132264Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026326656341552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pools_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        pool_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        owner\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_pools_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.122415Z", "completed_at": "2025-03-04T12:52:51.130940Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.133874Z", "completed_at": "2025-03-04T12:52:51.133882Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027298450469970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_pool_created_base_sepolia_event_name__PoolCreated.f08bef53a3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PoolCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.138815Z", "completed_at": "2025-03-04T12:52:51.153779Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.164548Z", "completed_at": "2025-03-04T12:52:51.164561Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031511545181274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_pool_created_base_sepolia_pool_id__True__0.b3e7c8b05d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.147301Z", "completed_at": "2025-03-04T12:52:51.163863Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.165849Z", "completed_at": "2025-03-04T12:52:51.165858Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031227588653564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_block_number.094a784336", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.159273Z", "completed_at": "2025-03-04T12:52:51.166724Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.169340Z", "completed_at": "2025-03-04T12:52:51.169349Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02298879623413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_contract.3347ab7e86", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.154426Z", "completed_at": "2025-03-04T12:52:51.167961Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.170947Z", "completed_at": "2025-03-04T12:52:51.170959Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.032938480377197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_block_timestamp.770a6f30f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.175934Z", "completed_at": "2025-03-04T12:52:51.193558Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.201866Z", "completed_at": "2025-03-04T12:52:51.201883Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03179049491882324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_event_name.1dac944daf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.182036Z", "completed_at": "2025-03-04T12:52:51.196127Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.203136Z", "completed_at": "2025-03-04T12:52:51.203148Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03122544288635254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_id.b1a35dd808", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.188486Z", "completed_at": "2025-03-04T12:52:51.204163Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.206869Z", "completed_at": "2025-03-04T12:52:51.206878Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03175830841064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_owner.de5ae68a1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.196870Z", "completed_at": "2025-03-04T12:52:51.204878Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.207794Z", "completed_at": "2025-03-04T12:52:51.207802Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0266420841217041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_pool_id.e6e51130fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.213803Z", "completed_at": "2025-03-04T12:52:51.226007Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.236189Z", "completed_at": "2025-03-04T12:52:51.236204Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027667760848999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_sender.40177457bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.219259Z", "completed_at": "2025-03-04T12:52:51.231754Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.237381Z", "completed_at": "2025-03-04T12:52:51.237391Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028208494186401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_base_sepolia_transaction_hash.c6810d0b49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.226685Z", "completed_at": "2025-03-04T12:52:51.238347Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.241125Z", "completed_at": "2025-03-04T12:52:51.241137Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028743267059326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_pool_created_base_sepolia_id.bc373a2eb3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_pool_created_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.232520Z", "completed_at": "2025-03-04T12:52:51.239820Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.242777Z", "completed_at": "2025-03-04T12:52:51.242788Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029745101928710938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pools_eth_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        pool_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        owner\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_pools_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.247980Z", "completed_at": "2025-03-04T12:52:51.267943Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.274485Z", "completed_at": "2025-03-04T12:52:51.274501Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0325927734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_pool_created_eth_mainnet_event_name__PoolCreated.109464a698", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PoolCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.256619Z", "completed_at": "2025-03-04T12:52:51.268685Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.275539Z", "completed_at": "2025-03-04T12:52:51.275551Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031989336013793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_pool_created_eth_mainnet_pool_id__True__0.7c8df298df", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.263145Z", "completed_at": "2025-03-04T12:52:51.276456Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.279310Z", "completed_at": "2025-03-04T12:52:51.279320Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03231358528137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_block_number.2f99b31050", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.269293Z", "completed_at": "2025-03-04T12:52:51.278025Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.280911Z", "completed_at": "2025-03-04T12:52:51.280921Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025250673294067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_block_timestamp.edc63e1dd6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.285946Z", "completed_at": "2025-03-04T12:52:51.300253Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.311327Z", "completed_at": "2025-03-04T12:52:51.311344Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03130674362182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_contract.31bb49a3da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.291984Z", "completed_at": "2025-03-04T12:52:51.305675Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.312564Z", "completed_at": "2025-03-04T12:52:51.312575Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03065180778503418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_event_name.86049849e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.300913Z", "completed_at": "2025-03-04T12:52:51.313453Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.316315Z", "completed_at": "2025-03-04T12:52:51.316325Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031164169311523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_id.d903c0dfc4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.306492Z", "completed_at": "2025-03-04T12:52:51.315002Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.317905Z", "completed_at": "2025-03-04T12:52:51.317916Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026853561401367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_owner.4ac2c4d7d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.328904Z", "completed_at": "2025-03-04T12:52:51.340352Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.348665Z", "completed_at": "2025-03-04T12:52:51.348679Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030022382736206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_sender.0e2161372e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.322724Z", "completed_at": "2025-03-04T12:52:51.341056Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.350236Z", "completed_at": "2025-03-04T12:52:51.350244Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03312373161315918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_pool_id.6662208418", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.335439Z", "completed_at": "2025-03-04T12:52:51.349613Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.352131Z", "completed_at": "2025-03-04T12:52:51.352142Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030219554901123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_pool_created_eth_mainnet_transaction_hash.c51273100e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.341698Z", "completed_at": "2025-03-04T12:52:51.352998Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.355642Z", "completed_at": "2025-03-04T12:52:51.355650Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027696847915649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_pool_created_eth_mainnet_id.8a7d542185", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_pool_created_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.359605Z", "completed_at": "2025-03-04T12:52:51.377379Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.383545Z", "completed_at": "2025-03-04T12:52:51.383560Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029480934143066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_claimed_arbitrum_mainnet_event_name__RewardsClaimed.3c1cd34ad1", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsClaimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.366481Z", "completed_at": "2025-03-04T12:52:51.384744Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.387289Z", "completed_at": "2025-03-04T12:52:51.387298Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030910015106201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_arbitrum_mainnet_account_id__True__0.34b4de86db", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.371671Z", "completed_at": "2025-03-04T12:52:51.385324Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.388222Z", "completed_at": "2025-03-04T12:52:51.388230Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030600309371948242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_arbitrum_mainnet_amount__True__0.d98a3e4cc7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.378269Z", "completed_at": "2025-03-04T12:52:51.386626Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.389805Z", "completed_at": "2025-03-04T12:52:51.389812Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024116039276123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_arbitrum_mainnet_pool_id__True__0.1c91c56a7b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.394572Z", "completed_at": "2025-03-04T12:52:51.407513Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.419725Z", "completed_at": "2025-03-04T12:52:51.419743Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030782461166381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_account_id.657d0a650c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.402399Z", "completed_at": "2025-03-04T12:52:51.421070Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.423263Z", "completed_at": "2025-03-04T12:52:51.423275Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030124664306640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_amount.b7ad8d34fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.415018Z", "completed_at": "2025-03-04T12:52:51.422566Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.425474Z", "completed_at": "2025-03-04T12:52:51.425483Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025826215744018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_block_timestamp.830ba4bdac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.410041Z", "completed_at": "2025-03-04T12:52:51.424192Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.427061Z", "completed_at": "2025-03-04T12:52:51.427070Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0332338809967041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_block_number.90a2165709", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.430505Z", "completed_at": "2025-03-04T12:52:51.443229Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.449085Z", "completed_at": "2025-03-04T12:52:51.449100Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024448156356811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_collateral_type.868513a78c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.438403Z", "completed_at": "2025-03-04T12:52:51.455375Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.458142Z", "completed_at": "2025-03-04T12:52:51.458153Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02905726432800293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_contract.dbeede65a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.444485Z", "completed_at": "2025-03-04T12:52:51.459033Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.461701Z", "completed_at": "2025-03-04T12:52:51.461709Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026111125946044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_distributor.cfe4797061", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.450288Z", "completed_at": "2025-03-04T12:52:51.460409Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.463155Z", "completed_at": "2025-03-04T12:52:51.463163Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026225566864013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_event_name.c85b97045f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.465285Z", "completed_at": "2025-03-04T12:52:51.477553Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.479641Z", "completed_at": "2025-03-04T12:52:51.479654Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01997208595275879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_id.ec96b450dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.472855Z", "completed_at": "2025-03-04T12:52:51.480605Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.491033Z", "completed_at": "2025-03-04T12:52:51.491044Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027138948440551758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_pool_id.bd58480578", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.481158Z", "completed_at": "2025-03-04T12:52:51.493633Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.496141Z", "completed_at": "2025-03-04T12:52:51.496151Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02488422393798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_mainnet_transaction_hash.b143b485c4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.485708Z", "completed_at": "2025-03-04T12:52:51.494943Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.501886Z", "completed_at": "2025-03-04T12:52:51.501894Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02985692024230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_claimed_arbitrum_mainnet_id.0aa80585e9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.497055Z", "completed_at": "2025-03-04T12:52:51.505027Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.513764Z", "completed_at": "2025-03-04T12:52:51.513774Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021661043167114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_claimed_arbitrum_sepolia_event_name__RewardsClaimed.34f660416a", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsClaimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.505640Z", "completed_at": "2025-03-04T12:52:51.515964Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.526886Z", "completed_at": "2025-03-04T12:52:51.526897Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_arbitrum_sepolia_account_id__True__0.931fbcf6dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.517234Z", "completed_at": "2025-03-04T12:52:51.529363Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.531939Z", "completed_at": "2025-03-04T12:52:51.531948Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019611358642578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_arbitrum_sepolia_amount__True__0.4bdbe43c5e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.522023Z", "completed_at": "2025-03-04T12:52:51.530014Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.532841Z", "completed_at": "2025-03-04T12:52:51.532848Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01983022689819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_arbitrum_sepolia_pool_id__True__0.8b433a3bc6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.533733Z", "completed_at": "2025-03-04T12:52:51.545727Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.548263Z", "completed_at": "2025-03-04T12:52:51.548273Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020550251007080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_account_id.f2bf56343c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.540525Z", "completed_at": "2025-03-04T12:52:51.547715Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.554197Z", "completed_at": "2025-03-04T12:52:51.554208Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02305769920349121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_amount.c69c35b9b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.549769Z", "completed_at": "2025-03-04T12:52:51.563194Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.565256Z", "completed_at": "2025-03-04T12:52:51.565267Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020334243774414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_block_number.9a6d0e0806", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.556027Z", "completed_at": "2025-03-04T12:52:51.566119Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.568483Z", "completed_at": "2025-03-04T12:52:51.568491Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022278547286987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_block_timestamp.b87721cc33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.569387Z", "completed_at": "2025-03-04T12:52:51.582552Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.589368Z", "completed_at": "2025-03-04T12:52:51.589382Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02574777603149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_collateral_type.d2183c9d15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.574778Z", "completed_at": "2025-03-04T12:52:51.583158Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.590329Z", "completed_at": "2025-03-04T12:52:51.590338Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025876283645629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_contract.d436fcb4ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.583769Z", "completed_at": "2025-03-04T12:52:51.596800Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.599027Z", "completed_at": "2025-03-04T12:52:51.599036Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01963520050048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_distributor.3f6ad9aa55", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.591336Z", "completed_at": "2025-03-04T12:52:51.599880Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.602346Z", "completed_at": "2025-03-04T12:52:51.602356Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0205385684967041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_event_name.a3f0d6ec61", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.603879Z", "completed_at": "2025-03-04T12:52:51.618339Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.624925Z", "completed_at": "2025-03-04T12:52:51.624939Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026778697967529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_id.9a1c133f3b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.610004Z", "completed_at": "2025-03-04T12:52:51.624267Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.631412Z", "completed_at": "2025-03-04T12:52:51.631424Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031067609786987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_pool_id.a883be69bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.619080Z", "completed_at": "2025-03-04T12:52:51.630674Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.633206Z", "completed_at": "2025-03-04T12:52:51.633214Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024720191955566406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_arbitrum_sepolia_transaction_hash.680f286a1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.626028Z", "completed_at": "2025-03-04T12:52:51.634787Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.637448Z", "completed_at": "2025-03-04T12:52:51.637456Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019846200942993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_claimed_arbitrum_sepolia_id.f24f1c4553", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.641057Z", "completed_at": "2025-03-04T12:52:51.657894Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.659371Z", "completed_at": "2025-03-04T12:52:51.659384Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02411794662475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_claimed_base_mainnet_event_name__RewardsClaimed.aa2ca50bfd", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsClaimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.647045Z", "completed_at": "2025-03-04T12:52:51.660303Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.669589Z", "completed_at": "2025-03-04T12:52:51.669601Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03291583061218262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_base_mainnet_account_id__True__0.f3a8537aec", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.652894Z", "completed_at": "2025-03-04T12:52:51.660951Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.670531Z", "completed_at": "2025-03-04T12:52:51.670540Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03162217140197754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_base_mainnet_amount__True__0.d32a48611c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.661536Z", "completed_at": "2025-03-04T12:52:51.672978Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.675614Z", "completed_at": "2025-03-04T12:52:51.675626Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023667573928833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_base_mainnet_pool_id__True__0.4091fd0cb1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.677149Z", "completed_at": "2025-03-04T12:52:51.690114Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.696677Z", "completed_at": "2025-03-04T12:52:51.696692Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025250911712646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_account_id.854e016ff9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.684392Z", "completed_at": "2025-03-04T12:52:51.697700Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.705111Z", "completed_at": "2025-03-04T12:52:51.705121Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030321359634399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_amount.2d80149737", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.690947Z", "completed_at": "2025-03-04T12:52:51.704371Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.707483Z", "completed_at": "2025-03-04T12:52:51.707492Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.031075000762939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_block_number.4b65195293", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.698424Z", "completed_at": "2025-03-04T12:52:51.706907Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.709687Z", "completed_at": "2025-03-04T12:52:51.709697Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020322561264038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_block_timestamp.365bd8971d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.711960Z", "completed_at": "2025-03-04T12:52:51.720411Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.732678Z", "completed_at": "2025-03-04T12:52:51.732692Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026642322540283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_collateral_type.f4a0d97e20", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.721029Z", "completed_at": "2025-03-04T12:52:51.738377Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.740497Z", "completed_at": "2025-03-04T12:52:51.740508Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02939891815185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_contract.c7544b70ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.728378Z", "completed_at": "2025-03-04T12:52:51.739708Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.742681Z", "completed_at": "2025-03-04T12:52:51.742691Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024967670440673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_distributor.edc7126cd6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.733895Z", "completed_at": "2025-03-04T12:52:51.742062Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.744941Z", "completed_at": "2025-03-04T12:52:51.744950Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02586054801940918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_event_name.8699999c22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.747129Z", "completed_at": "2025-03-04T12:52:51.755160Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.765176Z", "completed_at": "2025-03-04T12:52:51.765188Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02391839027404785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_id.e1c2a57eae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.755786Z", "completed_at": "2025-03-04T12:52:51.775003Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.777042Z", "completed_at": "2025-03-04T12:52:51.777054Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030642271041870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_pool_id.28e40cfefe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.760906Z", "completed_at": "2025-03-04T12:52:51.775616Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.778552Z", "completed_at": "2025-03-04T12:52:51.778563Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02629709243774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_mainnet_transaction_hash.b63233ece5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.766303Z", "completed_at": "2025-03-04T12:52:51.777925Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.780690Z", "completed_at": "2025-03-04T12:52:51.780697Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02695322036743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_claimed_base_mainnet_id.3e937354d7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.782301Z", "completed_at": "2025-03-04T12:52:51.791199Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.801971Z", "completed_at": "2025-03-04T12:52:51.801983Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025789499282836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_claimed_base_sepolia_event_name__RewardsClaimed.813e8d6cab", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsClaimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.791810Z", "completed_at": "2025-03-04T12:52:51.807736Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.810057Z", "completed_at": "2025-03-04T12:52:51.810066Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022935152053833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_base_sepolia_account_id__True__0.56bdf07961", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.797238Z", "completed_at": "2025-03-04T12:52:51.809324Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.812228Z", "completed_at": "2025-03-04T12:52:51.812236Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023750782012939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_base_sepolia_amount__True__0.83b60baad2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.803049Z", "completed_at": "2025-03-04T12:52:51.810978Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.813829Z", "completed_at": "2025-03-04T12:52:51.813837Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02396082878112793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_base_sepolia_pool_id__True__0.80a0443cd0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.817331Z", "completed_at": "2025-03-04T12:52:51.829584Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.836401Z", "completed_at": "2025-03-04T12:52:51.836415Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024985313415527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_account_id.35c6ac2750", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.824510Z", "completed_at": "2025-03-04T12:52:51.842743Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.844877Z", "completed_at": "2025-03-04T12:52:51.844886Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0289919376373291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_amount.8d0b56d69c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.837498Z", "completed_at": "2025-03-04T12:52:51.844240Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.846994Z", "completed_at": "2025-03-04T12:52:51.847004Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02399921417236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_block_timestamp.78d8816d82", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.832105Z", "completed_at": "2025-03-04T12:52:51.845791Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.848533Z", "completed_at": "2025-03-04T12:52:51.848540Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0268557071685791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_block_number.2341e8ee42", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.849437Z", "completed_at": "2025-03-04T12:52:51.857425Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.863745Z", "completed_at": "2025-03-04T12:52:51.863755Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020212888717651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_collateral_type.44fc9e2622", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.859208Z", "completed_at": "2025-03-04T12:52:51.870552Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.878054Z", "completed_at": "2025-03-04T12:52:51.878065Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023511886596679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_contract.8063e60014", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.865267Z", "completed_at": "2025-03-04T12:52:51.878944Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.881507Z", "completed_at": "2025-03-04T12:52:51.881515Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025481224060058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_distributor.cfc3ec6cdd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.871110Z", "completed_at": "2025-03-04T12:52:51.880220Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.886699Z", "completed_at": "2025-03-04T12:52:51.886706Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0288238525390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_event_name.5d0bea85a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.882353Z", "completed_at": "2025-03-04T12:52:51.890443Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.896783Z", "completed_at": "2025-03-04T12:52:51.896793Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019602298736572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_id.a324c0d7d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.892340Z", "completed_at": "2025-03-04T12:52:51.904123Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.910129Z", "completed_at": "2025-03-04T12:52:51.910140Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022632122039794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_pool_id.e61695fb4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.899768Z", "completed_at": "2025-03-04T12:52:51.911889Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.918535Z", "completed_at": "2025-03-04T12:52:51.918550Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027629613876342773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_base_sepolia_transaction_hash.399851f94f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.904878Z", "completed_at": "2025-03-04T12:52:51.913121Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.920159Z", "completed_at": "2025-03-04T12:52:51.920168Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028543710708618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_claimed_base_sepolia_id.b13c8534bb", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.913821Z", "completed_at": "2025-03-04T12:52:51.921956Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.924525Z", "completed_at": "2025-03-04T12:52:51.924533Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01534724235534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_claimed_eth_mainnet_event_name__RewardsClaimed.e5c952f144", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsClaimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.925375Z", "completed_at": "2025-03-04T12:52:51.939322Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.945413Z", "completed_at": "2025-03-04T12:52:51.945423Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026022911071777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_eth_mainnet_account_id__True__0.7eae5581d0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.934781Z", "completed_at": "2025-03-04T12:52:51.946994Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.953424Z", "completed_at": "2025-03-04T12:52:51.953433Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02965998649597168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_eth_mainnet_amount__True__0.8d7de0dad3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.940729Z", "completed_at": "2025-03-04T12:52:51.952667Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.955126Z", "completed_at": "2025-03-04T12:52:51.955140Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023176193237304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_claimed_eth_mainnet_pool_id__True__0.4ee2d574e0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.948396Z", "completed_at": "2025-03-04T12:52:51.956757Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.959274Z", "completed_at": "2025-03-04T12:52:51.959284Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01941657066345215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_account_id.a671c2ed40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.960181Z", "completed_at": "2025-03-04T12:52:51.967408Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.979160Z", "completed_at": "2025-03-04T12:52:51.979170Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024951934814453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_amount.aa1ebaa88c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.968024Z", "completed_at": "2025-03-04T12:52:51.980785Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.987287Z", "completed_at": "2025-03-04T12:52:51.987296Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02876138687133789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_block_number.fb82a92db5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.973121Z", "completed_at": "2025-03-04T12:52:51.986450Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.988992Z", "completed_at": "2025-03-04T12:52:51.989002Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024448156356811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_block_timestamp.890e664a3c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.982222Z", "completed_at": "2025-03-04T12:52:51.989877Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:51.992389Z", "completed_at": "2025-03-04T12:52:51.992396Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020192384719848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_collateral_type.440762309c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:51.993915Z", "completed_at": "2025-03-04T12:52:52.001873Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.011943Z", "completed_at": "2025-03-04T12:52:52.011955Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02388620376586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_contract.fba4f37c05", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.002478Z", "completed_at": "2025-03-04T12:52:52.013186Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.021180Z", "completed_at": "2025-03-04T12:52:52.021188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028030872344970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_distributor.728609281c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.006895Z", "completed_at": "2025-03-04T12:52:52.019640Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.022752Z", "completed_at": "2025-03-04T12:52:52.022759Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024413108825683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_event_name.b83d684e5d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.013850Z", "completed_at": "2025-03-04T12:52:52.025048Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.258266Z", "completed_at": "2025-03-04T12:52:52.258281Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2571682929992676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_id.d534df2fd8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.026949Z", "completed_at": "2025-03-04T12:52:52.262075Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.272542Z", "completed_at": "2025-03-04T12:52:52.272555Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2505812644958496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_pool_id.760bae7f85", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.262742Z", "completed_at": "2025-03-04T12:52:52.275249Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.281941Z", "completed_at": "2025-03-04T12:52:52.281954Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.25580263137817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_claimed_eth_mainnet_transaction_hash.db7f7a63db", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.268090Z", "completed_at": "2025-03-04T12:52:52.280691Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.283009Z", "completed_at": "2025-03-04T12:52:52.283020Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023863792419433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_claimed_eth_mainnet_id.b73c8da16c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.275856Z", "completed_at": "2025-03-04T12:52:52.284482Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.291326Z", "completed_at": "2025-03-04T12:52:52.291337Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024109601974487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_distributed_arbitrum_mainnet_event_name__RewardsDistributed.3370ace359", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsDistributed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.286434Z", "completed_at": "2025-03-04T12:52:52.295202Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.302041Z", "completed_at": "2025-03-04T12:52:52.302051Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02089715003967285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_arbitrum_mainnet_amount__True__0.09cd5040a6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.297022Z", "completed_at": "2025-03-04T12:52:52.315241Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.317425Z", "completed_at": "2025-03-04T12:52:52.317435Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025237321853637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_arbitrum_mainnet_duration__True__0.00212b4134", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not duration >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.302971Z", "completed_at": "2025-03-04T12:52:52.315814Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.318389Z", "completed_at": "2025-03-04T12:52:52.318400Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025507688522338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_arbitrum_mainnet_pool_id__True__0.d68e3c64d9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.310929Z", "completed_at": "2025-03-04T12:52:52.319248Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.321855Z", "completed_at": "2025-03-04T12:52:52.321864Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025580406188964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_amount.efe177b3e7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.322740Z", "completed_at": "2025-03-04T12:52:52.330769Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.341742Z", "completed_at": "2025-03-04T12:52:52.341756Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02528667449951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_block_number.4692e1b237", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.336895Z", "completed_at": "2025-03-04T12:52:52.344398Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.352417Z", "completed_at": "2025-03-04T12:52:52.352430Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024475812911987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_collateral_type.d8c598b114", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.331991Z", "completed_at": "2025-03-04T12:52:52.351820Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.354672Z", "completed_at": "2025-03-04T12:52:52.354679Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02744317054748535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_block_timestamp.b6efe37fde", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.345066Z", "completed_at": "2025-03-04T12:52:52.354105Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.360909Z", "completed_at": "2025-03-04T12:52:52.360919Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02969980239868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_contract.cad4a84b49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.356169Z", "completed_at": "2025-03-04T12:52:52.364853Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.367220Z", "completed_at": "2025-03-04T12:52:52.367229Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016149282455444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_distributor.b8c551ebf5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.368112Z", "completed_at": "2025-03-04T12:52:52.384365Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.386863Z", "completed_at": "2025-03-04T12:52:52.386876Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02428579330444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_duration.8dfbbf7a51", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect duration\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere duration is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.373539Z", "completed_at": "2025-03-04T12:52:52.385017Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.387800Z", "completed_at": "2025-03-04T12:52:52.387810Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023786067962646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_event_name.bb49accedd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.378910Z", "completed_at": "2025-03-04T12:52:52.386235Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.393251Z", "completed_at": "2025-03-04T12:52:52.393262Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02736949920654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_id.2d439b2dff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.388680Z", "completed_at": "2025-03-04T12:52:52.396351Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.398930Z", "completed_at": "2025-03-04T12:52:52.398939Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015346765518188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_pool_id.06cc36de8b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.402262Z", "completed_at": "2025-03-04T12:52:52.419926Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.422435Z", "completed_at": "2025-03-04T12:52:52.422450Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02559685707092285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_mainnet_transaction_hash.a791a80876", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.413805Z", "completed_at": "2025-03-04T12:52:52.420663Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.423393Z", "completed_at": "2025-03-04T12:52:52.423400Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025249242782592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_distributed_base_mainnet_event_name__RewardsDistributed.c4ccd15bed", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsDistributed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.409263Z", "completed_at": "2025-03-04T12:52:52.421842Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.429734Z", "completed_at": "2025-03-04T12:52:52.429745Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.032199859619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_distributed_arbitrum_mainnet_id.b2d650e4fd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.424279Z", "completed_at": "2025-03-04T12:52:52.433658Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.436094Z", "completed_at": "2025-03-04T12:52:52.436106Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017516374588012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_base_mainnet_amount__True__0.839843f110", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.438199Z", "completed_at": "2025-03-04T12:52:52.456429Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.458576Z", "completed_at": "2025-03-04T12:52:52.458587Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025702714920043945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_base_mainnet_duration__True__0.7efb65f7c3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not duration >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.444326Z", "completed_at": "2025-03-04T12:52:52.457927Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.464629Z", "completed_at": "2025-03-04T12:52:52.464639Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_base_mainnet_pool_id__True__0.7d779ece26", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.449224Z", "completed_at": "2025-03-04T12:52:52.459475Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.466195Z", "completed_at": "2025-03-04T12:52:52.466206Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031424522399902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_amount.2580da873a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.460052Z", "completed_at": "2025-03-04T12:52:52.468691Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.471200Z", "completed_at": "2025-03-04T12:52:52.471210Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01562786102294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_block_number.8a561feed6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.473331Z", "completed_at": "2025-03-04T12:52:52.485039Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.490870Z", "completed_at": "2025-03-04T12:52:52.490883Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022980690002441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_block_timestamp.3080d49013", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.479576Z", "completed_at": "2025-03-04T12:52:52.491850Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.498601Z", "completed_at": "2025-03-04T12:52:52.498611Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028770923614501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_collateral_type.7253a5e6ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.485645Z", "completed_at": "2025-03-04T12:52:52.498009Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.500864Z", "completed_at": "2025-03-04T12:52:52.500872Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028847932815551758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_contract.5545c1884a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.492566Z", "completed_at": "2025-03-04T12:52:52.500240Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.503049Z", "completed_at": "2025-03-04T12:52:52.503060Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018966197967529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_distributor.eb73b71c1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.505254Z", "completed_at": "2025-03-04T12:52:52.514966Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.525389Z", "completed_at": "2025-03-04T12:52:52.525405Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025966644287109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_duration.78ed8fd436", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect duration\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere duration is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.515591Z", "completed_at": "2025-03-04T12:52:52.531832Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.534545Z", "completed_at": "2025-03-04T12:52:52.534555Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030030488967895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_event_name.16811bbe2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.520959Z", "completed_at": "2025-03-04T12:52:52.532587Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.535405Z", "completed_at": "2025-03-04T12:52:52.535413Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02315211296081543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_id.0142695043", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.526623Z", "completed_at": "2025-03-04T12:52:52.533941Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.536911Z", "completed_at": "2025-03-04T12:52:52.536919Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023232460021972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_pool_id.8ee087c0fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.539113Z", "completed_at": "2025-03-04T12:52:52.547722Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.559797Z", "completed_at": "2025-03-04T12:52:52.559809Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026654958724975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_mainnet_transaction_hash.bc1d7442f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.548886Z", "completed_at": "2025-03-04T12:52:52.566449Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.569173Z", "completed_at": "2025-03-04T12:52:52.569182Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024863481521606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_distributed_base_mainnet_id.8cb2f0871f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.553399Z", "completed_at": "2025-03-04T12:52:52.567152Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.570068Z", "completed_at": "2025-03-04T12:52:52.570076Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02504897117614746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_distributed_arbitrum_sepolia_event_name__RewardsDistributed.94958bacc6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsDistributed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.560740Z", "completed_at": "2025-03-04T12:52:52.568591Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.571557Z", "completed_at": "2025-03-04T12:52:52.571564Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025775909423828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_arbitrum_sepolia_amount__True__0.a57935c0b7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.573785Z", "completed_at": "2025-03-04T12:52:52.582058Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.588586Z", "completed_at": "2025-03-04T12:52:52.588597Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020753860473632812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_arbitrum_sepolia_duration__True__0.905006d2f0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not duration >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.589496Z", "completed_at": "2025-03-04T12:52:52.599410Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.602129Z", "completed_at": "2025-03-04T12:52:52.602139Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022197246551513672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_amount.8682e416ae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.583803Z", "completed_at": "2025-03-04T12:52:52.600083Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.603043Z", "completed_at": "2025-03-04T12:52:52.603050Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02379918098449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_arbitrum_sepolia_pool_id__True__0.4ca72a296c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.593847Z", "completed_at": "2025-03-04T12:52:52.600887Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.603926Z", "completed_at": "2025-03-04T12:52:52.603934Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023250102996826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_block_number.5fbc655c9b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.607438Z", "completed_at": "2025-03-04T12:52:52.616811Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.623270Z", "completed_at": "2025-03-04T12:52:52.623285Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021968841552734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_block_timestamp.b3adafb4cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.618607Z", "completed_at": "2025-03-04T12:52:52.634265Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.637061Z", "completed_at": "2025-03-04T12:52:52.637071Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023128271102905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_collateral_type.099d0e256e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.624401Z", "completed_at": "2025-03-04T12:52:52.635894Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.638613Z", "completed_at": "2025-03-04T12:52:52.638621Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023938655853271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_contract.7bb7fd8da4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.628858Z", "completed_at": "2025-03-04T12:52:52.636427Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.639494Z", "completed_at": "2025-03-04T12:52:52.639502Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024203062057495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_distributor.f184171df4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.641173Z", "completed_at": "2025-03-04T12:52:52.650042Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.652441Z", "completed_at": "2025-03-04T12:52:52.652451Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01743626594543457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_duration.a042625996", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect duration\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere duration is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.653330Z", "completed_at": "2025-03-04T12:52:52.669741Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.672295Z", "completed_at": "2025-03-04T12:52:52.672307Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024930477142333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_event_name.1803af1787", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.658048Z", "completed_at": "2025-03-04T12:52:52.670309Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.673218Z", "completed_at": "2025-03-04T12:52:52.673228Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02491927146911621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_id.4fea69e81a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.664272Z", "completed_at": "2025-03-04T12:52:52.670989Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.674122Z", "completed_at": "2025-03-04T12:52:52.674132Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02505207061767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_pool_id.4ae694bfec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.677695Z", "completed_at": "2025-03-04T12:52:52.685612Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.692273Z", "completed_at": "2025-03-04T12:52:52.692290Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020861148834228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_arbitrum_sepolia_transaction_hash.2ae04c7450", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.687369Z", "completed_at": "2025-03-04T12:52:52.704104Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.706279Z", "completed_at": "2025-03-04T12:52:52.706292Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023612499237060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_distributed_arbitrum_sepolia_id.728eef2ccb", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.693337Z", "completed_at": "2025-03-04T12:52:52.705655Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.708362Z", "completed_at": "2025-03-04T12:52:52.708371Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024923324584960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_distributed_base_sepolia_event_name__RewardsDistributed.23760c7762", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsDistributed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.698307Z", "completed_at": "2025-03-04T12:52:52.707182Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.709969Z", "completed_at": "2025-03-04T12:52:52.709977Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025858640670776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_base_sepolia_amount__True__0.6d7f4124f8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.710855Z", "completed_at": "2025-03-04T12:52:52.721528Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.728329Z", "completed_at": "2025-03-04T12:52:52.728341Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02346181869506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_base_sepolia_duration__True__0.aca43f41bf", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not duration >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.723335Z", "completed_at": "2025-03-04T12:52:52.735652Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.742167Z", "completed_at": "2025-03-04T12:52:52.742178Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023542165756225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_base_sepolia_pool_id__True__0.4ad1e16907", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.729918Z", "completed_at": "2025-03-04T12:52:52.741572Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.743868Z", "completed_at": "2025-03-04T12:52:52.743875Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023767948150634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_amount.ec60c3040c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.736214Z", "completed_at": "2025-03-04T12:52:52.744733Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.751702Z", "completed_at": "2025-03-04T12:52:52.751712Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02969980239868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_block_number.1404eb5f75", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.746053Z", "completed_at": "2025-03-04T12:52:52.754633Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.757083Z", "completed_at": "2025-03-04T12:52:52.757091Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016437053680419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_block_timestamp.305338d6ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.757989Z", "completed_at": "2025-03-04T12:52:52.774891Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.777111Z", "completed_at": "2025-03-04T12:52:52.777122Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024614810943603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_collateral_type.d02c77e463", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.762697Z", "completed_at": "2025-03-04T12:52:52.776397Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.779254Z", "completed_at": "2025-03-04T12:52:52.779265Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025992631912231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_contract.b51980138b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.770531Z", "completed_at": "2025-03-04T12:52:52.778679Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.785457Z", "completed_at": "2025-03-04T12:52:52.785489Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02914142608642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_distributor.8e49885144", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.780841Z", "completed_at": "2025-03-04T12:52:52.789192Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.791611Z", "completed_at": "2025-03-04T12:52:52.791619Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015949726104736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_duration.151d5a6383", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect duration\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere duration is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.792475Z", "completed_at": "2025-03-04T12:52:52.807659Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.809763Z", "completed_at": "2025-03-04T12:52:52.809774Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022790908813476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_event_name.e3a18ecd0c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.797765Z", "completed_at": "2025-03-04T12:52:52.809049Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.811866Z", "completed_at": "2025-03-04T12:52:52.811880Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023369550704956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_id.0d42a7a31a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.803075Z", "completed_at": "2025-03-04T12:52:52.811259Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.820067Z", "completed_at": "2025-03-04T12:52:52.820076Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029812097549438477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_pool_id.618ac3407b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.813438Z", "completed_at": "2025-03-04T12:52:52.823866Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.826257Z", "completed_at": "2025-03-04T12:52:52.826265Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017960071563720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_base_sepolia_transaction_hash.9d7346a555", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.827148Z", "completed_at": "2025-03-04T12:52:52.843688Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.845652Z", "completed_at": "2025-03-04T12:52:52.845665Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024090051651000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_distributed_base_sepolia_id.fafe19f7d9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.832424Z", "completed_at": "2025-03-04T12:52:52.844291Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.847114Z", "completed_at": "2025-03-04T12:52:52.847122Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024034500122070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_rewards_distributed_eth_mainnet_event_name__RewardsDistributed.fae0bd904b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'RewardsDistributed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.838049Z", "completed_at": "2025-03-04T12:52:52.846533Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.853709Z", "completed_at": "2025-03-04T12:52:52.853718Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02878403663635254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_eth_mainnet_amount__True__0.43de804120", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.848002Z", "completed_at": "2025-03-04T12:52:52.856047Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.858569Z", "completed_at": "2025-03-04T12:52:52.858580Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0157315731048584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_eth_mainnet_duration__True__0.7d6965f572", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not duration >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.860669Z", "completed_at": "2025-03-04T12:52:52.873843Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.879563Z", "completed_at": "2025-03-04T12:52:52.879576Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024332284927368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_rewards_distributed_eth_mainnet_pool_id__True__0.37dd01cd96", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.868514Z", "completed_at": "2025-03-04T12:52:52.880481Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.886842Z", "completed_at": "2025-03-04T12:52:52.886851Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029666423797607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_amount.a39a6908b6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.874441Z", "completed_at": "2025-03-04T12:52:52.885567Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.887865Z", "completed_at": "2025-03-04T12:52:52.887873Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02853846549987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_block_number.79a91ea969", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.881176Z", "completed_at": "2025-03-04T12:52:52.888772Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.891361Z", "completed_at": "2025-03-04T12:52:52.891369Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018461942672729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_block_timestamp.f066e2381d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.894783Z", "completed_at": "2025-03-04T12:52:52.911882Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.918103Z", "completed_at": "2025-03-04T12:52:52.918117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028934001922607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_collateral_type.2475fcd59d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.901641Z", "completed_at": "2025-03-04T12:52:52.919166Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.922056Z", "completed_at": "2025-03-04T12:52:52.922066Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029333829879760742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_contract.4cb5b10595", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.906116Z", "completed_at": "2025-03-04T12:52:52.920818Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.923625Z", "completed_at": "2025-03-04T12:52:52.923635Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030289888381958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_distributor.7022e12146", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.913728Z", "completed_at": "2025-03-04T12:52:52.921430Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.924518Z", "completed_at": "2025-03-04T12:52:52.924525Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023756027221679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_duration.07b5947e7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect duration\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere duration is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.928654Z", "completed_at": "2025-03-04T12:52:52.936866Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.951404Z", "completed_at": "2025-03-04T12:52:52.951422Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028638839721679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_event_name.193bdd11d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.937493Z", "completed_at": "2025-03-04T12:52:52.952883Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.955432Z", "completed_at": "2025-03-04T12:52:52.955440Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027570247650146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_id.cb5898e934", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.942247Z", "completed_at": "2025-03-04T12:52:52.953546Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.956337Z", "completed_at": "2025-03-04T12:52:52.956345Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022873401641845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_pool_id.059709c3dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.946887Z", "completed_at": "2025-03-04T12:52:52.954774Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.957878Z", "completed_at": "2025-03-04T12:52:52.957886Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023690223693847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_rewards_distributed_eth_mainnet_transaction_hash.dd811ca405", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.962621Z", "completed_at": "2025-03-04T12:52:52.976702Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.986775Z", "completed_at": "2025-03-04T12:52:52.986791Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029723644256591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_rewards_distributed_eth_mainnet_id.48f45b85d1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.971993Z", "completed_at": "2025-03-04T12:52:52.987789Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.990448Z", "completed_at": "2025-03-04T12:52:52.990456Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029261350631713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_burned_arbitrum_mainnet_event_name__UsdBurned.9ecdb75459", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdBurned'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.977303Z", "completed_at": "2025-03-04T12:52:52.988620Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.991399Z", "completed_at": "2025-03-04T12:52:52.991409Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029557466506958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_arbitrum_mainnet_account_id__True__0.f8708303cd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.981918Z", "completed_at": "2025-03-04T12:52:52.989224Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:52.992310Z", "completed_at": "2025-03-04T12:52:52.992319Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023026466369628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_arbitrum_mainnet_amount__True__0.2bf9da99f6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:52.998959Z", "completed_at": "2025-03-04T12:52:53.015882Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.022033Z", "completed_at": "2025-03-04T12:52:53.022050Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02899765968322754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_arbitrum_mainnet_pool_id__True__0.dad5587ce6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.006185Z", "completed_at": "2025-03-04T12:52:53.022996Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.025122Z", "completed_at": "2025-03-04T12:52:53.025131Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02874588966369629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_account_id.c71695a669", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.010774Z", "completed_at": "2025-03-04T12:52:53.024495Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.027359Z", "completed_at": "2025-03-04T12:52:53.027367Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02981090545654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_amount.638bb23cb6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.017568Z", "completed_at": "2025-03-04T12:52:53.026142Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.028942Z", "completed_at": "2025-03-04T12:52:53.028950Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030736207962036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_block_number.9d57cfa9ee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.032389Z", "completed_at": "2025-03-04T12:52:53.044124Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.050010Z", "completed_at": "2025-03-04T12:52:53.050022Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023427724838256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_block_timestamp.da67490d2d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.039747Z", "completed_at": "2025-03-04T12:52:53.055627Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.057644Z", "completed_at": "2025-03-04T12:52:53.057654Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026673555374145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_collateral_type.6f8f53a6c9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.045501Z", "completed_at": "2025-03-04T12:52:53.056863Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.059787Z", "completed_at": "2025-03-04T12:52:53.059795Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022897958755493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_contract.718a1f61dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.051014Z", "completed_at": "2025-03-04T12:52:53.059184Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.062076Z", "completed_at": "2025-03-04T12:52:53.062084Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0238645076751709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_event_name.2c934d7229", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.064331Z", "completed_at": "2025-03-04T12:52:53.074330Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.084704Z", "completed_at": "2025-03-04T12:52:53.084721Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02627277374267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_id.f07377da8d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.074963Z", "completed_at": "2025-03-04T12:52:53.090226Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.092559Z", "completed_at": "2025-03-04T12:52:53.092569Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0290377140045166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_pool_id.574d8e09b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.080264Z", "completed_at": "2025-03-04T12:52:53.091717Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.094727Z", "completed_at": "2025-03-04T12:52:53.094735Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023097753524780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_sender.1b76ecab38", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.085862Z", "completed_at": "2025-03-04T12:52:53.093471Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.096292Z", "completed_at": "2025-03-04T12:52:53.096300Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023282289505004883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_mainnet_transaction_hash.6535b2db90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.099779Z", "completed_at": "2025-03-04T12:52:53.106917Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.119229Z", "completed_at": "2025-03-04T12:52:53.119240Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02530956268310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_burned_arbitrum_mainnet_id.1918882dbf", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.107501Z", "completed_at": "2025-03-04T12:52:53.126162Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.128209Z", "completed_at": "2025-03-04T12:52:53.128220Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029921531677246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_burned_arbitrum_sepolia_event_name__UsdBurned.82b5e1f839", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdBurned'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.112756Z", "completed_at": "2025-03-04T12:52:53.126750Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.129695Z", "completed_at": "2025-03-04T12:52:53.129706Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025596141815185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_arbitrum_sepolia_account_id__True__0.2bc68923f9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.120316Z", "completed_at": "2025-03-04T12:52:53.129099Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.131846Z", "completed_at": "2025-03-04T12:52:53.131855Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02640700340270996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_arbitrum_sepolia_amount__True__0.048d31e429", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.133397Z", "completed_at": "2025-03-04T12:52:53.141515Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.148046Z", "completed_at": "2025-03-04T12:52:53.148058Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020705223083496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_arbitrum_sepolia_pool_id__True__0.d19a9e58b9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.143307Z", "completed_at": "2025-03-04T12:52:53.159857Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.162034Z", "completed_at": "2025-03-04T12:52:53.162047Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02361774444580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_account_id.620cecde52", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.149796Z", "completed_at": "2025-03-04T12:52:53.161272Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.164139Z", "completed_at": "2025-03-04T12:52:53.164147Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02417302131652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_amount.6baf89b24c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.155328Z", "completed_at": "2025-03-04T12:52:53.162994Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.165753Z", "completed_at": "2025-03-04T12:52:53.165761Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02378058433532715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_block_number.a36a988eb1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.166646Z", "completed_at": "2025-03-04T12:52:53.176826Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.183647Z", "completed_at": "2025-03-04T12:52:53.183660Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023170948028564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_block_timestamp.5bcc977f3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.178700Z", "completed_at": "2025-03-04T12:52:53.190912Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.197523Z", "completed_at": "2025-03-04T12:52:53.197537Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023569822311401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_collateral_type.9bcf375dc5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.185350Z", "completed_at": "2025-03-04T12:52:53.196929Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.199725Z", "completed_at": "2025-03-04T12:52:53.199734Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02425360679626465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_contract.91add9f346", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.191498Z", "completed_at": "2025-03-04T12:52:53.199111Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.206324Z", "completed_at": "2025-03-04T12:52:53.206335Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029072999954223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_event_name.2334208293", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.201317Z", "completed_at": "2025-03-04T12:52:53.210183Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.212605Z", "completed_at": "2025-03-04T12:52:53.212615Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016532182693481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_id.a9d148b478", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.213502Z", "completed_at": "2025-03-04T12:52:53.231822Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.233854Z", "completed_at": "2025-03-04T12:52:53.233866Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025975465774536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_pool_id.7bf8dd6882", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.219016Z", "completed_at": "2025-03-04T12:52:53.232503Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.235327Z", "completed_at": "2025-03-04T12:52:53.235337Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025959491729736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_sender.e732504915", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.226561Z", "completed_at": "2025-03-04T12:52:53.234749Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.241563Z", "completed_at": "2025-03-04T12:52:53.241571Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030333518981933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_arbitrum_sepolia_transaction_hash.91ab5b1d0b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.236214Z", "completed_at": "2025-03-04T12:52:53.245207Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.247623Z", "completed_at": "2025-03-04T12:52:53.247631Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01669931411743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_burned_arbitrum_sepolia_id.65a6dbfca4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.248653Z", "completed_at": "2025-03-04T12:52:53.266255Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.268333Z", "completed_at": "2025-03-04T12:52:53.268346Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025232791900634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_burned_base_mainnet_event_name__UsdBurned.9df46c6616", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdBurned'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.254089Z", "completed_at": "2025-03-04T12:52:53.267711Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.270393Z", "completed_at": "2025-03-04T12:52:53.270400Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02594447135925293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_base_mainnet_account_id__True__0.40ca1a8133", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.259801Z", "completed_at": "2025-03-04T12:52:53.269216Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.272007Z", "completed_at": "2025-03-04T12:52:53.272015Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025720834732055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_base_mainnet_amount__True__0.27adfdbff9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.272897Z", "completed_at": "2025-03-04T12:52:53.281101Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.287450Z", "completed_at": "2025-03-04T12:52:53.287487Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020753145217895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_base_mainnet_pool_id__True__0.52120b282a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.282900Z", "completed_at": "2025-03-04T12:52:53.298954Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.301219Z", "completed_at": "2025-03-04T12:52:53.301231Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022958755493164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_account_id.b4f53ab613", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.289148Z", "completed_at": "2025-03-04T12:52:53.300531Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.303301Z", "completed_at": "2025-03-04T12:52:53.303308Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023536205291748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_amount.57fdbdea35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.294452Z", "completed_at": "2025-03-04T12:52:53.302161Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.304885Z", "completed_at": "2025-03-04T12:52:53.304893Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023288249969482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_block_number.6f683bcb34", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.305767Z", "completed_at": "2025-03-04T12:52:53.313280Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.315678Z", "completed_at": "2025-03-04T12:52:53.315691Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016039371490478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_block_timestamp.346c53ef95", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.316566Z", "completed_at": "2025-03-04T12:52:53.334590Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.337069Z", "completed_at": "2025-03-04T12:52:53.337081Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026028156280517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_collateral_type.e208105e0e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.323903Z", "completed_at": "2025-03-04T12:52:53.335147Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.337998Z", "completed_at": "2025-03-04T12:52:53.338006Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025454044342041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_contract.dba51aebb5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.329249Z", "completed_at": "2025-03-04T12:52:53.336516Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.343371Z", "completed_at": "2025-03-04T12:52:53.343381Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029064178466796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_event_name.0bb05d75cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.338888Z", "completed_at": "2025-03-04T12:52:53.347304Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.349762Z", "completed_at": "2025-03-04T12:52:53.349770Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016039609909057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_id.7d6df2e91f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.351811Z", "completed_at": "2025-03-04T12:52:53.369372Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.371752Z", "completed_at": "2025-03-04T12:52:53.371765Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025223255157470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_pool_id.abf28cfdf6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.357229Z", "completed_at": "2025-03-04T12:52:53.369945Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.372668Z", "completed_at": "2025-03-04T12:52:53.372676Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024864912033081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_sender.b813be6ecc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.361763Z", "completed_at": "2025-03-04T12:52:53.371143Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.378026Z", "completed_at": "2025-03-04T12:52:53.378035Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029600143432617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_mainnet_transaction_hash.d80af383d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.373545Z", "completed_at": "2025-03-04T12:52:53.381951Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.384370Z", "completed_at": "2025-03-04T12:52:53.384378Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01624011993408203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_burned_base_mainnet_id.5953435682", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.386402Z", "completed_at": "2025-03-04T12:52:53.409190Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.410533Z", "completed_at": "2025-03-04T12:52:53.410549Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029346227645874023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_burned_base_sepolia_event_name__UsdBurned.c736a2b5fd", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdBurned'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.392020Z", "completed_at": "2025-03-04T12:52:53.409848Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.412164Z", "completed_at": "2025-03-04T12:52:53.412172Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029749155044555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_base_sepolia_account_id__True__0.1c3ad25fc6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.396984Z", "completed_at": "2025-03-04T12:52:53.411419Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.414412Z", "completed_at": "2025-03-04T12:52:53.414421Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.031401634216308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_base_sepolia_amount__True__0.2ff0339bf6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.404097Z", "completed_at": "2025-03-04T12:52:53.413753Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.416701Z", "completed_at": "2025-03-04T12:52:53.416711Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014814138412475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_base_sepolia_pool_id__True__0.bdbba08629", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.421399Z", "completed_at": "2025-03-04T12:52:53.440221Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.445756Z", "completed_at": "2025-03-04T12:52:53.445771Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029926776885986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_account_id.8014155212", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.430118Z", "completed_at": "2025-03-04T12:52:53.446924Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.449530Z", "completed_at": "2025-03-04T12:52:53.449538Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03144359588623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_amount.d577462790", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.435644Z", "completed_at": "2025-03-04T12:52:53.448350Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.451065Z", "completed_at": "2025-03-04T12:52:53.451073Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03103327751159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_block_number.9acf3a65f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.440986Z", "completed_at": "2025-03-04T12:52:53.448923Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.451943Z", "completed_at": "2025-03-04T12:52:53.451951Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02325129508972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_block_timestamp.d6c5fafe43", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.456159Z", "completed_at": "2025-03-04T12:52:53.464630Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.482050Z", "completed_at": "2025-03-04T12:52:53.482068Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03182697296142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_collateral_type.1d7071aef1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.470013Z", "completed_at": "2025-03-04T12:52:53.483745Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.486265Z", "completed_at": "2025-03-04T12:52:53.486277Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02498602867126465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_event_name.2c789d8ccb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.465231Z", "completed_at": "2025-03-04T12:52:53.484326Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.487212Z", "completed_at": "2025-03-04T12:52:53.487220Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03187751770019531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_contract.559c9a6e92", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.476977Z", "completed_at": "2025-03-04T12:52:53.485608Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.488820Z", "completed_at": "2025-03-04T12:52:53.488828Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026844501495361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_id.9208a4e4a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.493665Z", "completed_at": "2025-03-04T12:52:53.501842Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.518116Z", "completed_at": "2025-03-04T12:52:53.518131Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03016948699951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_pool_id.8bd0f688e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.502413Z", "completed_at": "2025-03-04T12:52:53.519644Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.522207Z", "completed_at": "2025-03-04T12:52:53.522219Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030025959014892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_sender.d28854bdf2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.507705Z", "completed_at": "2025-03-04T12:52:53.520240Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.523167Z", "completed_at": "2025-03-04T12:52:53.523174Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03024768829345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_base_sepolia_transaction_hash.07cbe78bce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.512897Z", "completed_at": "2025-03-04T12:52:53.521549Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.524917Z", "completed_at": "2025-03-04T12:52:53.524925Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025943756103515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_burned_base_sepolia_id.3b90c11835", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.529804Z", "completed_at": "2025-03-04T12:52:53.545422Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.556021Z", "completed_at": "2025-03-04T12:52:53.556035Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03211498260498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_burned_eth_mainnet_event_name__UsdBurned.1eb7853972", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdBurned'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.540151Z", "completed_at": "2025-03-04T12:52:53.557317Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.560016Z", "completed_at": "2025-03-04T12:52:53.560024Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0317227840423584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_eth_mainnet_account_id__True__0.6d8f7f7d85", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.550990Z", "completed_at": "2025-03-04T12:52:53.558824Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.561618Z", "completed_at": "2025-03-04T12:52:53.561626Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024278879165649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_eth_mainnet_pool_id__True__0.cc44e47fc8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.546147Z", "completed_at": "2025-03-04T12:52:53.559379Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.562507Z", "completed_at": "2025-03-04T12:52:53.562515Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03347015380859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_burned_eth_mainnet_amount__True__0.7cba0ca593", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.566684Z", "completed_at": "2025-03-04T12:52:53.575249Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.592667Z", "completed_at": "2025-03-04T12:52:53.592682Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031896114349365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_account_id.fc5fb3a0e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.580728Z", "completed_at": "2025-03-04T12:52:53.594166Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.596205Z", "completed_at": "2025-03-04T12:52:53.596216Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02449941635131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_block_number.b5e8a371fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.587850Z", "completed_at": "2025-03-04T12:52:53.595532Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.598600Z", "completed_at": "2025-03-04T12:52:53.598608Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026188373565673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_block_timestamp.616215c03f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.575825Z", "completed_at": "2025-03-04T12:52:53.597206Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.600160Z", "completed_at": "2025-03-04T12:52:53.600168Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03424692153930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_amount.45ebd0ede8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.603642Z", "completed_at": "2025-03-04T12:52:53.616156Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.622156Z", "completed_at": "2025-03-04T12:52:53.622170Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024381160736083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_collateral_type.6dbc31d2ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.611413Z", "completed_at": "2025-03-04T12:52:53.623159Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.629929Z", "completed_at": "2025-03-04T12:52:53.629940Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027760982513427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_contract.f9009e6423", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.617420Z", "completed_at": "2025-03-04T12:52:53.629333Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.632218Z", "completed_at": "2025-03-04T12:52:53.632226Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023601293563842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_event_name.7f0fc644d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.623764Z", "completed_at": "2025-03-04T12:52:53.631629Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.634412Z", "completed_at": "2025-03-04T12:52:53.634422Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02449512481689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_id.161a49599f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.636653Z", "completed_at": "2025-03-04T12:52:53.646675Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.653214Z", "completed_at": "2025-03-04T12:52:53.653227Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022369861602783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_pool_id.e4d58d3b63", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.647839Z", "completed_at": "2025-03-04T12:52:53.664114Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.666489Z", "completed_at": "2025-03-04T12:52:53.666500Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030618906021118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_sender.62bbe0ad28", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.654152Z", "completed_at": "2025-03-04T12:52:53.665866Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.668578Z", "completed_at": "2025-03-04T12:52:53.668587Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02408123016357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_burned_eth_mainnet_transaction_hash.e57add79d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.658860Z", "completed_at": "2025-03-04T12:52:53.667367Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.670159Z", "completed_at": "2025-03-04T12:52:53.670167Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024250030517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_burned_eth_mainnet_id.482b04a60c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.671047Z", "completed_at": "2025-03-04T12:52:53.679744Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.686606Z", "completed_at": "2025-03-04T12:52:53.686618Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021596908569335938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_arbitrum_mainnet", "compiled": true, "compiled_code": "with burns as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        -1 * \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\n    order by\n        block_timestamp desc\n),\n\nmints as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\n    order by\n        block_timestamp desc\n)\n\nselect *\nfrom\n    burns\nunion all\nselect *\nfrom\n    mints\norder by\n    ts desc", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.680971Z", "completed_at": "2025-03-04T12:52:53.700983Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.703412Z", "completed_at": "2025-03-04T12:52:53.703426Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02724933624267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_minted_arbitrum_mainnet_event_name__UsdMinted.cb75bc5dc7", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdMinted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.687523Z", "completed_at": "2025-03-04T12:52:53.702697Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.705519Z", "completed_at": "2025-03-04T12:52:53.705526Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027794361114501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_arbitrum_mainnet_account_id__True__0.6487cbbb70", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.694384Z", "completed_at": "2025-03-04T12:52:53.704277Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.707098Z", "completed_at": "2025-03-04T12:52:53.707106Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02806687355041504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_arbitrum_mainnet_amount__True__0.9400183d7a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.708017Z", "completed_at": "2025-03-04T12:52:53.717167Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.724289Z", "completed_at": "2025-03-04T12:52:53.724304Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02246546745300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_arbitrum_mainnet_pool_id__True__0.5d700fe50b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.719149Z", "completed_at": "2025-03-04T12:52:53.737150Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.740317Z", "completed_at": "2025-03-04T12:52:53.740330Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026113033294677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_account_id.9ccf9039ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.726087Z", "completed_at": "2025-03-04T12:52:53.739730Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.742547Z", "completed_at": "2025-03-04T12:52:53.742555Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026788711547851562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_amount.f37a3a83d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.731975Z", "completed_at": "2025-03-04T12:52:53.741946Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.748741Z", "completed_at": "2025-03-04T12:52:53.748752Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03112959861755371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_block_number.2c3c8fc1e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.744120Z", "completed_at": "2025-03-04T12:52:53.752669Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.755087Z", "completed_at": "2025-03-04T12:52:53.755099Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016133546829223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_block_timestamp.8ca5480dbc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.755991Z", "completed_at": "2025-03-04T12:52:53.771334Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.773361Z", "completed_at": "2025-03-04T12:52:53.773373Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02308368682861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_collateral_type.0129f350e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.761252Z", "completed_at": "2025-03-04T12:52:53.772693Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.775483Z", "completed_at": "2025-03-04T12:52:53.775491Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02353358268737793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_contract.317c6e89d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.766764Z", "completed_at": "2025-03-04T12:52:53.774906Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.781593Z", "completed_at": "2025-03-04T12:52:53.781604Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0278322696685791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_event_name.8c280cde80", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.777032Z", "completed_at": "2025-03-04T12:52:53.785251Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.787720Z", "completed_at": "2025-03-04T12:52:53.787732Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01585984230041504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_id.3157330f1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.788639Z", "completed_at": "2025-03-04T12:52:53.806199Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.808277Z", "completed_at": "2025-03-04T12:52:53.808288Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025287389755249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_pool_id.4593996ffd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.796002Z", "completed_at": "2025-03-04T12:52:53.806857Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.809244Z", "completed_at": "2025-03-04T12:52:53.809252Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0246884822845459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_sender.829a4593b0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.801577Z", "completed_at": "2025-03-04T12:52:53.810126Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.812722Z", "completed_at": "2025-03-04T12:52:53.812730Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026311397552490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_mainnet_transaction_hash.74c68bc07e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.813654Z", "completed_at": "2025-03-04T12:52:53.821195Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.827243Z", "completed_at": "2025-03-04T12:52:53.827253Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01992011070251465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_minted_arbitrum_mainnet_id.557dbdade9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.823009Z", "completed_at": "2025-03-04T12:52:53.834407Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.843104Z", "completed_at": "2025-03-04T12:52:53.843115Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024871110916137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_arbitrum_sepolia", "compiled": true, "compiled_code": "with burns as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        -1 * \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\n    order by\n        block_timestamp desc\n),\n\nmints as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\n    order by\n        block_timestamp desc\n)\n\nselect *\nfrom\n    burns\nunion all\nselect *\nfrom\n    mints\norder by\n    ts desc", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.828165Z", "completed_at": "2025-03-04T12:52:53.842510Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.844792Z", "completed_at": "2025-03-04T12:52:53.844800Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02588629722595215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_minted_arbitrum_sepolia_event_name__UsdMinted.5fd40cc553", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdMinted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.835214Z", "completed_at": "2025-03-04T12:52:53.845643Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.852767Z", "completed_at": "2025-03-04T12:52:53.852776Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030518531799316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_arbitrum_sepolia_account_id__True__0.3ae041bf59", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.846996Z", "completed_at": "2025-03-04T12:52:53.856358Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.862980Z", "completed_at": "2025-03-04T12:52:53.862989Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021214962005615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_arbitrum_sepolia_amount__True__0.e93e8d1936", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.858158Z", "completed_at": "2025-03-04T12:52:53.869804Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.876375Z", "completed_at": "2025-03-04T12:52:53.876386Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022845983505249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_arbitrum_sepolia_pool_id__True__0.ae99bd6ea3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.863892Z", "completed_at": "2025-03-04T12:52:53.875762Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.878001Z", "completed_at": "2025-03-04T12:52:53.878009Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02368474006652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_account_id.e8dbb7db41", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.870546Z", "completed_at": "2025-03-04T12:52:53.879526Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.886116Z", "completed_at": "2025-03-04T12:52:53.886124Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028679609298706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_amount.cd18eb6390", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.880212Z", "completed_at": "2025-03-04T12:52:53.887760Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.890242Z", "completed_at": "2025-03-04T12:52:53.890252Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015409469604492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_block_number.3319b5e432", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.891139Z", "completed_at": "2025-03-04T12:52:53.904140Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.910536Z", "completed_at": "2025-03-04T12:52:53.910549Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025264739990234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_block_timestamp.baa0ed9288", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.898133Z", "completed_at": "2025-03-04T12:52:53.909761Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.912212Z", "completed_at": "2025-03-04T12:52:53.912222Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02521491050720215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_collateral_type.36a06f20c5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.905403Z", "completed_at": "2025-03-04T12:52:53.913155Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.919924Z", "completed_at": "2025-03-04T12:52:53.919934Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02254772186279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_contract.71d9365153", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.914458Z", "completed_at": "2025-03-04T12:52:53.922935Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.925582Z", "completed_at": "2025-03-04T12:52:53.925590Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020961999893188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_event_name.b210011389", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.926426Z", "completed_at": "2025-03-04T12:52:53.944750Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.947275Z", "completed_at": "2025-03-04T12:52:53.947290Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026546955108642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_id.07b94c915b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.931200Z", "completed_at": "2025-03-04T12:52:53.945330Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.948211Z", "completed_at": "2025-03-04T12:52:53.948219Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02664041519165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_pool_id.41123c7a06", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.937570Z", "completed_at": "2025-03-04T12:52:53.946694Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.953734Z", "completed_at": "2025-03-04T12:52:53.953743Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02892327308654785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_sender.b183e1c56f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.949084Z", "completed_at": "2025-03-04T12:52:53.956897Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.959476Z", "completed_at": "2025-03-04T12:52:53.959487Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015486955642700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_arbitrum_sepolia_transaction_hash.38f21551fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.967626Z", "completed_at": "2025-03-04T12:52:53.983506Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.984927Z", "completed_at": "2025-03-04T12:52:53.984943Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026865243911743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_base_mainnet", "compiled": true, "compiled_code": "with burns as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        -1 * \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\n    order by\n        block_timestamp desc\n),\n\nmints as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\n    order by\n        block_timestamp desc\n)\n\nselect *\nfrom\n    burns\nunion all\nselect *\nfrom\n    mints\norder by\n    ts desc", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.962821Z", "completed_at": "2025-03-04T12:52:53.984260Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.986488Z", "completed_at": "2025-03-04T12:52:53.986496Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029042482376098633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_minted_arbitrum_sepolia_id.d868aed363", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.971809Z", "completed_at": "2025-03-04T12:52:53.985836Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.988940Z", "completed_at": "2025-03-04T12:52:53.988948Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030216693878173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_minted_base_mainnet_event_name__UsdMinted.62f89abcc8", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdMinted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.978708Z", "completed_at": "2025-03-04T12:52:53.987999Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:53.991195Z", "completed_at": "2025-03-04T12:52:53.991205Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014650821685791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_base_mainnet_account_id__True__0.fd790b59ca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:53.995876Z", "completed_at": "2025-03-04T12:52:54.014760Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.020711Z", "completed_at": "2025-03-04T12:52:54.020727Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03037428855895996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_base_mainnet_amount__True__0.1d256007a1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.004386Z", "completed_at": "2025-03-04T12:52:54.019801Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.022396Z", "completed_at": "2025-03-04T12:52:54.022406Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029796361923217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_base_mainnet_pool_id__True__0.38a3f5fcf9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.010117Z", "completed_at": "2025-03-04T12:52:54.021665Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.024660Z", "completed_at": "2025-03-04T12:52:54.024668Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03014206886291504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_account_id.ccf3e769fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.015414Z", "completed_at": "2025-03-04T12:52:54.023343Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.026150Z", "completed_at": "2025-03-04T12:52:54.026160Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02314019203186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_amount.196acb6a64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.032113Z", "completed_at": "2025-03-04T12:52:54.049563Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.055338Z", "completed_at": "2025-03-04T12:52:54.055350Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028415441513061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_block_number.9528b63fbc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.037690Z", "completed_at": "2025-03-04T12:52:54.054513Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.057716Z", "completed_at": "2025-03-04T12:52:54.057726Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02947068214416504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_block_timestamp.a004821ccd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.042940Z", "completed_at": "2025-03-04T12:52:54.056481Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.059275Z", "completed_at": "2025-03-04T12:52:54.059284Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02911233901977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_collateral_type.f8bfd4628e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.050230Z", "completed_at": "2025-03-04T12:52:54.057141Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.060252Z", "completed_at": "2025-03-04T12:52:54.060263Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02886509895324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_contract.f56e539b17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.066859Z", "completed_at": "2025-03-04T12:52:54.082959Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.090347Z", "completed_at": "2025-03-04T12:52:54.090362Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02873682975769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_event_name.33ff07927a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.078225Z", "completed_at": "2025-03-04T12:52:54.091490Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.094052Z", "completed_at": "2025-03-04T12:52:54.094061Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029177427291870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_pool_id.ee8fc13465", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.073354Z", "completed_at": "2025-03-04T12:52:54.092019Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.094969Z", "completed_at": "2025-03-04T12:52:54.094977Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0312952995300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_id.9cb007fc5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.083568Z", "completed_at": "2025-03-04T12:52:54.093450Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.096503Z", "completed_at": "2025-03-04T12:52:54.096510Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030979156494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_sender.363a1c6bc9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.101451Z", "completed_at": "2025-03-04T12:52:54.109346Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.124355Z", "completed_at": "2025-03-04T12:52:54.124370Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02870345115661621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_mainnet_transaction_hash.c04da14c24", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.119389Z", "completed_at": "2025-03-04T12:52:54.127544Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.129970Z", "completed_at": "2025-03-04T12:52:54.129981Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02339649200439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_minted_base_sepolia_event_name__UsdMinted.d686f1f1af", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdMinted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.114841Z", "completed_at": "2025-03-04T12:52:54.128202Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.130904Z", "completed_at": "2025-03-04T12:52:54.130912Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030175447463989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_base_sepolia", "compiled": true, "compiled_code": "with burns as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        -1 * \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\n    order by\n        block_timestamp desc\n),\n\nmints as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\n    order by\n        block_timestamp desc\n)\n\nselect *\nfrom\n    burns\nunion all\nselect *\nfrom\n    mints\norder by\n    ts desc", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.109954Z", "completed_at": "2025-03-04T12:52:54.128778Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.131789Z", "completed_at": "2025-03-04T12:52:54.131796Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03171730041503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_minted_base_mainnet_id.476f2a0b45", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.132656Z", "completed_at": "2025-03-04T12:52:54.143215Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.152529Z", "completed_at": "2025-03-04T12:52:54.152544Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025996923446655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_base_sepolia_account_id__True__0.8d375d28dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.153593Z", "completed_at": "2025-03-04T12:52:54.164645Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.167210Z", "completed_at": "2025-03-04T12:52:54.167222Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02602696418762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_base_sepolia_pool_id__True__0.49903b0695", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.144985Z", "completed_at": "2025-03-04T12:52:54.166036Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.168754Z", "completed_at": "2025-03-04T12:52:54.168761Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028224945068359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_base_sepolia_amount__True__0.8db2f09ae2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.158631Z", "completed_at": "2025-03-04T12:52:54.166640Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.169638Z", "completed_at": "2025-03-04T12:52:54.169646Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027762889862060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_account_id.56f2a7acd7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.171146Z", "completed_at": "2025-03-04T12:52:54.180481Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.187191Z", "completed_at": "2025-03-04T12:52:54.187205Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021986007690429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_amount.c1ab51fea3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.182236Z", "completed_at": "2025-03-04T12:52:54.200729Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.203236Z", "completed_at": "2025-03-04T12:52:54.203249Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025555849075317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_block_number.37baa764ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.188324Z", "completed_at": "2025-03-04T12:52:54.201321Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.204170Z", "completed_at": "2025-03-04T12:52:54.204178Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02568840980529785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_block_timestamp.a33ebf4ef7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.192950Z", "completed_at": "2025-03-04T12:52:54.202654Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.205706Z", "completed_at": "2025-03-04T12:52:54.205714Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026584625244140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_collateral_type.028faf1711", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.207924Z", "completed_at": "2025-03-04T12:52:54.216862Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.227453Z", "completed_at": "2025-03-04T12:52:54.227487Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0256497859954834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_contract.ebf65a8472", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.218046Z", "completed_at": "2025-03-04T12:52:54.234169Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.236737Z", "completed_at": "2025-03-04T12:52:54.236748Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02326226234436035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_event_name.c1bfdffc84", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.222820Z", "completed_at": "2025-03-04T12:52:54.234744Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.237635Z", "completed_at": "2025-03-04T12:52:54.237643Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023494482040405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_id.3fd3162bcc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.228588Z", "completed_at": "2025-03-04T12:52:54.236155Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.239079Z", "completed_at": "2025-03-04T12:52:54.239087Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02417898178100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_pool_id.7dfafbe9ee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.241290Z", "completed_at": "2025-03-04T12:52:54.250237Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.262881Z", "completed_at": "2025-03-04T12:52:54.262896Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027571678161621094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_sender.5053739593", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.258386Z", "completed_at": "2025-03-04T12:52:54.269497Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.271668Z", "completed_at": "2025-03-04T12:52:54.271679Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024123430252075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_minted_base_sepolia_id.9cce972c7e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.251405Z", "completed_at": "2025-03-04T12:52:54.271022Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.273790Z", "completed_at": "2025-03-04T12:52:54.273799Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026942968368530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_base_sepolia_transaction_hash.04ae981572", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.263958Z", "completed_at": "2025-03-04T12:52:54.272607Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.275362Z", "completed_at": "2025-03-04T12:52:54.275370Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027112722396850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_eth_mainnet", "compiled": true, "compiled_code": "with burns as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        -1 * \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_burned_eth_mainnet\"\n    order by\n        block_timestamp desc\n),\n\nmints as (\n    select\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        pool_id,\n        collateral_type,\n        account_id,\n        \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\n    order by\n        block_timestamp desc\n)\n\nselect *\nfrom\n    burns\nunion all\nselect *\nfrom\n    mints\norder by\n    ts desc", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.276253Z", "completed_at": "2025-03-04T12:52:54.285215Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.292181Z", "completed_at": "2025-03-04T12:52:54.292193Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021944046020507812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_usd_minted_eth_mainnet_event_name__UsdMinted.c8d883ddfa", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'UsdMinted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.287055Z", "completed_at": "2025-03-04T12:52:54.305287Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.309002Z", "completed_at": "2025-03-04T12:52:54.309015Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027019262313842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_eth_mainnet_account_id__True__0.b6d81dac3d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.293902Z", "completed_at": "2025-03-04T12:52:54.309912Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.312595Z", "completed_at": "2025-03-04T12:52:54.312606Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028986692428588867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_eth_mainnet_amount__True__0.17e2d727c5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.300164Z", "completed_at": "2025-03-04T12:52:54.311851Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.319145Z", "completed_at": "2025-03-04T12:52:54.319154Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03342318534851074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_usd_minted_eth_mainnet_pool_id__True__0.2d561e9842", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.313498Z", "completed_at": "2025-03-04T12:52:54.322240Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.329022Z", "completed_at": "2025-03-04T12:52:54.329033Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020889997482299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_account_id.e32d9e9621", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.323530Z", "completed_at": "2025-03-04T12:52:54.336657Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.342878Z", "completed_at": "2025-03-04T12:52:54.342891Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024652481079101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_amount.d50e5f0da5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.331931Z", "completed_at": "2025-03-04T12:52:54.343843Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.346417Z", "completed_at": "2025-03-04T12:52:54.346428Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02366161346435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_block_number.8475901994", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.337412Z", "completed_at": "2025-03-04T12:52:54.345775Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.352842Z", "completed_at": "2025-03-04T12:52:54.352852Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024631738662719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_block_timestamp.e1477f67df", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.347325Z", "completed_at": "2025-03-04T12:52:54.355838Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.364984Z", "completed_at": "2025-03-04T12:52:54.364999Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02318572998046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_collateral_type.3bc61e56d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.357122Z", "completed_at": "2025-03-04T12:52:54.368148Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.379205Z", "completed_at": "2025-03-04T12:52:54.379218Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027172088623046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_contract.2287afa612", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.373693Z", "completed_at": "2025-03-04T12:52:54.381809Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.388947Z", "completed_at": "2025-03-04T12:52:54.388957Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02478170394897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_id.5b1199f72c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.368769Z", "completed_at": "2025-03-04T12:52:54.387485Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.390005Z", "completed_at": "2025-03-04T12:52:54.390016Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03362441062927246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_event_name.061c40bc0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.382473Z", "completed_at": "2025-03-04T12:52:54.390957Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.393544Z", "completed_at": "2025-03-04T12:52:54.393552Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015275239944458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_pool_id.dd8998f0f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.394417Z", "completed_at": "2025-03-04T12:52:54.403127Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.416489Z", "completed_at": "2025-03-04T12:52:54.416503Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02850937843322754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_sender.31025fd349", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.409454Z", "completed_at": "2025-03-04T12:52:54.424319Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.426362Z", "completed_at": "2025-03-04T12:52:54.426374Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02616286277770996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_usd_minted_eth_mainnet_id.ccad3381ec", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.404365Z", "completed_at": "2025-03-04T12:52:54.425647Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.428486Z", "completed_at": "2025-03-04T12:52:54.428494Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02892780303955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_usd_minted_eth_mainnet_transaction_hash.dba64c6cd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_usd_minted_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.419197Z", "completed_at": "2025-03-04T12:52:54.427889Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.435350Z", "completed_at": "2025-03-04T12:52:54.435362Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031818389892578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_arbitrum_mainnet_amount__True__0.b98dc30014", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.430057Z", "completed_at": "2025-03-04T12:52:54.439261Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.441718Z", "completed_at": "2025-03-04T12:52:54.441727Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01685190200805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_arbitrum_mainnet_collateral_value__True__0.9fa49aae71", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.448658Z", "completed_at": "2025-03-04T12:52:54.459690Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.462049Z", "completed_at": "2025-03-04T12:52:54.462061Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02353048324584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_mainnet_amount.0bdb85ef31", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.454159Z", "completed_at": "2025-03-04T12:52:54.460325Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.462974Z", "completed_at": "2025-03-04T12:52:54.462982Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02259540557861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_mainnet_block_number.5a68e5a2c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.442617Z", "completed_at": "2025-03-04T12:52:54.461450Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.470375Z", "completed_at": "2025-03-04T12:52:54.470384Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.033437490463256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_arbitrum_mainnet_pool_id__True__0.14e1d9edc3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.463877Z", "completed_at": "2025-03-04T12:52:54.473546Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.476050Z", "completed_at": "2025-03-04T12:52:54.476062Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01738882064819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_mainnet_collateral_type.50f0a76c9d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.479382Z", "completed_at": "2025-03-04T12:52:54.494887Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.497327Z", "completed_at": "2025-03-04T12:52:54.497339Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02335953712463379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_mainnet_collateral_value.09fcd07f3a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.489134Z", "completed_at": "2025-03-04T12:52:54.495475Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.498260Z", "completed_at": "2025-03-04T12:52:54.498268Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022969484329223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_mainnet_pool_id.4536274374", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.484379Z", "completed_at": "2025-03-04T12:52:54.496737Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.504098Z", "completed_at": "2025-03-04T12:52:54.504109Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029460906982421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_mainnet_contract_address.8cc08e1bbc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.499162Z", "completed_at": "2025-03-04T12:52:54.508079Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.510597Z", "completed_at": "2025-03-04T12:52:54.510606Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017147541046142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_mainnet_ts.d7d74011cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.512655Z", "completed_at": "2025-03-04T12:52:54.531287Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.533255Z", "completed_at": "2025-03-04T12:52:54.533268Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025984525680541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_arbitrum_sepolia_amount__True__0.ceaca21b1b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.525315Z", "completed_at": "2025-03-04T12:52:54.532647Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.539678Z", "completed_at": "2025-03-04T12:52:54.539690Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0305023193359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_arbitrum_sepolia_pool_id__True__0.99b4d66658", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.520437Z", "completed_at": "2025-03-04T12:52:54.534156Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.541457Z", "completed_at": "2025-03-04T12:52:54.541481Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0328824520111084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_arbitrum_sepolia_collateral_value__True__0.5e64981616", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.534765Z", "completed_at": "2025-03-04T12:52:54.543942Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.546508Z", "completed_at": "2025-03-04T12:52:54.546516Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016376018524169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_sepolia_amount.e85fb4a97b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.548616Z", "completed_at": "2025-03-04T12:52:54.559969Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.568442Z", "completed_at": "2025-03-04T12:52:54.568453Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02529311180114746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_sepolia_block_number.7c4c28bc6d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.554741Z", "completed_at": "2025-03-04T12:52:54.567865Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.574720Z", "completed_at": "2025-03-04T12:52:54.574729Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029672622680664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_sepolia_collateral_type.c23ed9827f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.560575Z", "completed_at": "2025-03-04T12:52:54.574123Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.576473Z", "completed_at": "2025-03-04T12:52:54.576484Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029212236404418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_sepolia_collateral_value.77882c9c22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.569498Z", "completed_at": "2025-03-04T12:52:54.577345Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.579935Z", "completed_at": "2025-03-04T12:52:54.579943Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020771503448486328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_sepolia_contract_address.d90d5e4d47", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.583886Z", "completed_at": "2025-03-04T12:52:54.598500Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.604050Z", "completed_at": "2025-03-04T12:52:54.604064Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025559663772583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_sepolia_pool_id.11828e6701", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.594377Z", "completed_at": "2025-03-04T12:52:54.604964Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.607083Z", "completed_at": "2025-03-04T12:52:54.607092Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025168657302856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_vault_collateral_base_mainnet", "compiled": true, "compiled_code": "select\n    ts,\n    block_number,\n    contract_address,\n    pool_id,\n    collateral_type,\n    amount,\n    collateral_value\nfrom\n    \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.589852Z", "completed_at": "2025-03-04T12:52:54.605575Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.608594Z", "completed_at": "2025-03-04T12:52:54.608604Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027880430221557617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_arbitrum_sepolia_ts.74e3fe431f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.599306Z", "completed_at": "2025-03-04T12:52:54.607930Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.610879Z", "completed_at": "2025-03-04T12:52:54.610888Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021801233291625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_base_mainnet_amount__True__0.9e07833bf5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.615162Z", "completed_at": "2025-03-04T12:52:54.628573Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.634577Z", "completed_at": "2025-03-04T12:52:54.634591Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02528095245361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_base_mainnet_collateral_value__True__0.7350cb66f7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.623936Z", "completed_at": "2025-03-04T12:52:54.640206Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.642405Z", "completed_at": "2025-03-04T12:52:54.642417Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029302597045898438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_base_mainnet_pool_id__True__0.c52772c114", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.629913Z", "completed_at": "2025-03-04T12:52:54.641623Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.644638Z", "completed_at": "2025-03-04T12:52:54.644647Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03019857406616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_base_sepolia_amount__True__0.6d9b6133f3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.635632Z", "completed_at": "2025-03-04T12:52:54.643998Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.646788Z", "completed_at": "2025-03-04T12:52:54.646798Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024301528930664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_base_sepolia_collateral_value__True__0.026e20a97f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.648996Z", "completed_at": "2025-03-04T12:52:54.657408Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.669496Z", "completed_at": "2025-03-04T12:52:54.669508Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026279449462890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_base_sepolia_pool_id__True__0.0047a9a52a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.658042Z", "completed_at": "2025-03-04T12:52:54.674953Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.677295Z", "completed_at": "2025-03-04T12:52:54.677307Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0290830135345459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_mainnet_amount.45536133a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.663230Z", "completed_at": "2025-03-04T12:52:54.676663Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.679409Z", "completed_at": "2025-03-04T12:52:54.679416Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024753332138061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_mainnet_block_number.6eaab21095", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.670557Z", "completed_at": "2025-03-04T12:52:54.678158Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.681025Z", "completed_at": "2025-03-04T12:52:54.681033Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02493429183959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_mainnet_collateral_type.bef58af2ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.684399Z", "completed_at": "2025-03-04T12:52:54.691934Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.702345Z", "completed_at": "2025-03-04T12:52:54.702363Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023760557174682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_mainnet_collateral_value.5805db9c59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.692557Z", "completed_at": "2025-03-04T12:52:54.708304Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.710542Z", "completed_at": "2025-03-04T12:52:54.710555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02752232551574707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_mainnet_contract_address.bc7a096c7d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.697801Z", "completed_at": "2025-03-04T12:52:54.709902Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.712727Z", "completed_at": "2025-03-04T12:52:54.712735Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023629188537597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_mainnet_pool_id.e1a826b5b2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.703634Z", "completed_at": "2025-03-04T12:52:54.711499Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.714265Z", "completed_at": "2025-03-04T12:52:54.714275Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023753881454467773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_mainnet_ts.a02f87cd0d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.717848Z", "completed_at": "2025-03-04T12:52:54.732362Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.738439Z", "completed_at": "2025-03-04T12:52:54.738454Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0265500545501709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_sepolia_amount.ff25c0c9a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.727759Z", "completed_at": "2025-03-04T12:52:54.739393Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.746092Z", "completed_at": "2025-03-04T12:52:54.746101Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029732942581176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_sepolia_block_number.3a3cfc3edf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.733795Z", "completed_at": "2025-03-04T12:52:54.745445Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.747923Z", "completed_at": "2025-03-04T12:52:54.747931Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023108720779418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_sepolia_collateral_type.8cfa2c8f99", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.740006Z", "completed_at": "2025-03-04T12:52:54.748785Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.751525Z", "completed_at": "2025-03-04T12:52:54.751533Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025322675704956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_sepolia_collateral_value.30cde60b22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.753031Z", "completed_at": "2025-03-04T12:52:54.761138Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.773197Z", "completed_at": "2025-03-04T12:52:54.773210Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026129961013793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_sepolia_contract_address.aa0f2cd57b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.761784Z", "completed_at": "2025-03-04T12:52:54.778964Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.781197Z", "completed_at": "2025-03-04T12:52:54.781208Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02893972396850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_sepolia_pool_id.3607d11df2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.766239Z", "completed_at": "2025-03-04T12:52:54.780483Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.783348Z", "completed_at": "2025-03-04T12:52:54.783356Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02573561668395996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_base_sepolia_ts.78a98d96c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.774424Z", "completed_at": "2025-03-04T12:52:54.782737Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.785548Z", "completed_at": "2025-03-04T12:52:54.785559Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02509760856628418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_eth_mainnet_amount__True__0.320b16493d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.787732Z", "completed_at": "2025-03-04T12:52:54.795575Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.802098Z", "completed_at": "2025-03-04T12:52:54.802108Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02009725570678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_eth_mainnet_collateral_value__True__0.17170969dc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.796759Z", "completed_at": "2025-03-04T12:52:54.811894Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.813740Z", "completed_at": "2025-03-04T12:52:54.813751Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026784658432006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_collateral_eth_mainnet_pool_id__True__0.509da6a489", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.803036Z", "completed_at": "2025-03-04T12:52:54.814662Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.817158Z", "completed_at": "2025-03-04T12:52:54.817169Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023908138275146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_eth_mainnet_amount.62dc926f36", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.807573Z", "completed_at": "2025-03-04T12:52:54.815247Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.818138Z", "completed_at": "2025-03-04T12:52:54.818146Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023345470428466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_eth_mainnet_block_number.68d8b02925", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.821666Z", "completed_at": "2025-03-04T12:52:54.836394Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.842357Z", "completed_at": "2025-03-04T12:52:54.842372Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026685476303100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_eth_mainnet_collateral_type.9ba1fda62f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.830973Z", "completed_at": "2025-03-04T12:52:54.843510Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.849777Z", "completed_at": "2025-03-04T12:52:54.849787Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030249834060668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_eth_mainnet_collateral_value.53d42edc8a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.837750Z", "completed_at": "2025-03-04T12:52:54.850659Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.853406Z", "completed_at": "2025-03-04T12:52:54.853415Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024048805236816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_eth_mainnet_contract_address.8b336867d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.844114Z", "completed_at": "2025-03-04T12:52:54.852748Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.855576Z", "completed_at": "2025-03-04T12:52:54.855587Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025532245635986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_eth_mainnet_pool_id.f31cb4b3e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.857137Z", "completed_at": "2025-03-04T12:52:54.867586Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.869631Z", "completed_at": "2025-03-04T12:52:54.869644Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018280982971191406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_collateral_eth_mainnet_ts.dc63e45225", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.864078Z", "completed_at": "2025-03-04T12:52:54.871154Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.882594Z", "completed_at": "2025-03-04T12:52:54.882609Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027820348739624023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_pnl_arbitrum_mainnet", "compiled": true, "compiled_code": "\nwith debt as (\n    select\n        ts,\n        2 as market_id,\n        debt * -1 as market_pnl\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\n)\n\nselect\n    ts,\n    market_id,\n    market_pnl\nfrom\n    debt\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_pnl_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.871758Z", "completed_at": "2025-03-04T12:52:54.884661Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.887330Z", "completed_at": "2025-03-04T12:52:54.887341Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024183273315429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_debt_arbitrum_mainnet", "compiled": true, "compiled_code": "select\n    ts,\n    block_number,\n    pool_id,\n    collateral_type,\n    debt\nfrom\n    \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.877913Z", "completed_at": "2025-03-04T12:52:54.885256Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.888261Z", "completed_at": "2025-03-04T12:52:54.888269Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020218849182128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_debt_arbitrum_mainnet_pool_id__True__0.8e3a2c72e9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.889839Z", "completed_at": "2025-03-04T12:52:54.903485Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.905659Z", "completed_at": "2025-03-04T12:52:54.905672Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0220794677734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_mainnet_block_number.3ef5dfaa45", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.898676Z", "completed_at": "2025-03-04T12:52:54.906565Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.917236Z", "completed_at": "2025-03-04T12:52:54.917248Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028188705444335938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_mainnet_collateral_type.f9fb1089d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.911822Z", "completed_at": "2025-03-04T12:52:54.919912Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.922391Z", "completed_at": "2025-03-04T12:52:54.922402Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02454376220703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_mainnet_debt.7a33d30f43", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.907152Z", "completed_at": "2025-03-04T12:52:54.920494Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.923298Z", "completed_at": "2025-03-04T12:52:54.923305Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026088237762451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_mainnet_contract_address.fee8a6440d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.924175Z", "completed_at": "2025-03-04T12:52:54.938132Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.940156Z", "completed_at": "2025-03-04T12:52:54.940167Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021837711334228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_mainnet_pool_id.8f94082342", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.933551Z", "completed_at": "2025-03-04T12:52:54.941682Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.947000Z", "completed_at": "2025-03-04T12:52:54.947010Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025362730026245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_mainnet_ts.d2363d0b7d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_debt_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.948017Z", "completed_at": "2025-03-04T12:52:54.953156Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.955534Z", "completed_at": "2025-03-04T12:52:54.955542Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016263723373413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_debt_arbitrum_sepolia", "compiled": true, "compiled_code": "select\n    ts,\n    block_number,\n    pool_id,\n    collateral_type,\n    debt\nfrom\n    \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.943508Z", "completed_at": "2025-03-04T12:52:54.953747Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.956387Z", "completed_at": "2025-03-04T12:52:54.956395Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017786502838134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_pnl_arbitrum_sepolia", "compiled": true, "compiled_code": "\nwith debt as (\n    select\n        ts,\n        2 as market_id,\n        debt * -1 as market_pnl\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\n)\n\nselect\n    ts,\n    market_id,\n    market_pnl\nfrom\n    debt\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_pnl_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.957252Z", "completed_at": "2025-03-04T12:52:54.969940Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.971956Z", "completed_at": "2025-03-04T12:52:54.971968Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020774126052856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_debt_arbitrum_sepolia_pool_id__True__0.6a7fea5bbc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.964699Z", "completed_at": "2025-03-04T12:52:54.972815Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.981335Z", "completed_at": "2025-03-04T12:52:54.981346Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0265958309173584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_sepolia_block_number.39b83b17e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.973984Z", "completed_at": "2025-03-04T12:52:54.987867Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.990593Z", "completed_at": "2025-03-04T12:52:54.990606Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021532297134399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_sepolia_collateral_type.c136eaeaa7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.982364Z", "completed_at": "2025-03-04T12:52:54.989989Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:54.997062Z", "completed_at": "2025-03-04T12:52:54.997072Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026633262634277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_sepolia_contract_address.7162b1bbad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:54.992152Z", "completed_at": "2025-03-04T12:52:55.000850Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.007797Z", "completed_at": "2025-03-04T12:52:55.007809Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02078080177307129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_sepolia_debt.13e23e52e8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.001438Z", "completed_at": "2025-03-04T12:52:55.009447Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.019197Z", "completed_at": "2025-03-04T12:52:55.019213Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02783656120300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_sepolia_pool_id.3d27f2e067", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.010081Z", "completed_at": "2025-03-04T12:52:55.021043Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.023121Z", "completed_at": "2025-03-04T12:52:55.023132Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023004770278930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_arbitrum_sepolia_ts.6259a43e83", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_debt_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.015780Z", "completed_at": "2025-03-04T12:52:55.024655Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.031918Z", "completed_at": "2025-03-04T12:52:55.031930Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025604963302612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_pnl_base_sepolia", "compiled": true, "compiled_code": "\nwith debt as (\n    select\n        ts,\n        2 as market_id,\n        debt * -1 as market_pnl\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\n)\n\nselect\n    ts,\n    market_id,\n    market_pnl\nfrom\n    debt\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_pnl_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.025256Z", "completed_at": "2025-03-04T12:52:55.038996Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.041265Z", "completed_at": "2025-03-04T12:52:55.041273Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020954370498657227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_debt_base_sepolia", "compiled": true, "compiled_code": "select\n    ts,\n    block_number,\n    pool_id,\n    collateral_type,\n    debt\nfrom\n    \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.033619Z", "completed_at": "2025-03-04T12:52:55.042103Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.048602Z", "completed_at": "2025-03-04T12:52:55.048613Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02467036247253418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_debt_base_sepolia_pool_id__True__0.908dbaecbc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.042754Z", "completed_at": "2025-03-04T12:52:55.054150Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.056300Z", "completed_at": "2025-03-04T12:52:55.056309Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023464679718017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_sepolia_block_number.f25dcd2c96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.049801Z", "completed_at": "2025-03-04T12:52:55.057875Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.064453Z", "completed_at": "2025-03-04T12:52:55.064481Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024013519287109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_sepolia_collateral_type.70a5498cf3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.059852Z", "completed_at": "2025-03-04T12:52:55.067503Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.073756Z", "completed_at": "2025-03-04T12:52:55.073765Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018976926803588867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_sepolia_contract_address.a9d7ef2e2d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.068111Z", "completed_at": "2025-03-04T12:52:55.081625Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.083699Z", "completed_at": "2025-03-04T12:52:55.083711Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025372028350830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_sepolia_debt.9b99714e7f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.074794Z", "completed_at": "2025-03-04T12:52:55.089423Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.091540Z", "completed_at": "2025-03-04T12:52:55.091550Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025638341903686523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_sepolia_pool_id.05a1d5275c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.084721Z", "completed_at": "2025-03-04T12:52:55.092525Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.095116Z", "completed_at": "2025-03-04T12:52:55.095125Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022137880325317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_sepolia_ts.d366714ec5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_debt_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.096013Z", "completed_at": "2025-03-04T12:52:55.107229Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.114350Z", "completed_at": "2025-03-04T12:52:55.114363Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02444934844970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_pnl_base_mainnet", "compiled": true, "compiled_code": "\nwith debt as (\n    select\n        ts,\n        2 as market_id,\n        debt * -1 as market_pnl\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\n)\n\nselect\n    ts,\n    market_id,\n    market_pnl\nfrom\n    debt\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_pnl_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.102105Z", "completed_at": "2025-03-04T12:52:55.113703Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.120571Z", "completed_at": "2025-03-04T12:52:55.120579Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026907682418823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_debt_base_mainnet", "compiled": true, "compiled_code": "select\n    ts,\n    block_number,\n    pool_id,\n    collateral_type,\n    debt\nfrom\n    \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.107963Z", "completed_at": "2025-03-04T12:52:55.119830Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.122360Z", "completed_at": "2025-03-04T12:52:55.122370Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021898984909057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_debt_base_mainnet_pool_id__True__0.583a0abe4f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.115402Z", "completed_at": "2025-03-04T12:52:55.123316Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.128318Z", "completed_at": "2025-03-04T12:52:55.128329Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021861553192138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_mainnet_block_number.bd4478b322", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.132376Z", "completed_at": "2025-03-04T12:52:55.147230Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.148797Z", "completed_at": "2025-03-04T12:52:55.148808Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023984909057617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_mainnet_collateral_type.e3f9b96478", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.138343Z", "completed_at": "2025-03-04T12:52:55.154116Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.156280Z", "completed_at": "2025-03-04T12:52:55.156290Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027135848999023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_mainnet_contract_address.f2b82344e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.142836Z", "completed_at": "2025-03-04T12:52:55.155610Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.158475Z", "completed_at": "2025-03-04T12:52:55.158486Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028055906295776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_mainnet_debt.922a67baf4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.149816Z", "completed_at": "2025-03-04T12:52:55.157867Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.160644Z", "completed_at": "2025-03-04T12:52:55.160652Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023125171661376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_mainnet_pool_id.e33ea26a56", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.162848Z", "completed_at": "2025-03-04T12:52:55.176064Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.182070Z", "completed_at": "2025-03-04T12:52:55.182085Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024985074996948242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_base_mainnet_ts.fc19d225e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_debt_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.170974Z", "completed_at": "2025-03-04T12:52:55.187722Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.190746Z", "completed_at": "2025-03-04T12:52:55.190758Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028717994689941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_debt_eth_mainnet", "compiled": true, "compiled_code": "select\n    ts,\n    block_number,\n    pool_id,\n    collateral_type,\n    debt\nfrom\n    \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"\norder by\n    ts", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.177538Z", "completed_at": "2025-03-04T12:52:55.189490Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.192312Z", "completed_at": "2025-03-04T12:52:55.192322Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02414870262145996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_debt_eth_mainnet_pool_id__True__0.55f388e287", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.183315Z", "completed_at": "2025-03-04T12:52:55.190112Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.193216Z", "completed_at": "2025-03-04T12:52:55.193223Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023634672164916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_eth_mainnet_block_number.930416e329", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.197624Z", "completed_at": "2025-03-04T12:52:55.204975Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.214970Z", "completed_at": "2025-03-04T12:52:55.214982Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023438453674316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_eth_mainnet_collateral_type.557a042f2b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.210647Z", "completed_at": "2025-03-04T12:52:55.224197Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.226133Z", "completed_at": "2025-03-04T12:52:55.226145Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024034500122070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_eth_mainnet_debt.a314c480fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.206153Z", "completed_at": "2025-03-04T12:52:55.225518Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.232125Z", "completed_at": "2025-03-04T12:52:55.232136Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.035279035568237305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_eth_mainnet_contract_address.d43dcb9614", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.216089Z", "completed_at": "2025-03-04T12:52:55.227076Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.234074Z", "completed_at": "2025-03-04T12:52:55.234082Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031175851821899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_eth_mainnet_pool_id.2f8f15549f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.227634Z", "completed_at": "2025-03-04T12:52:55.235892Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.238491Z", "completed_at": "2025-03-04T12:52:55.238499Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015017986297607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_debt_eth_mainnet_ts.3b5cb40175", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_debt_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.241943Z", "completed_at": "2025-03-04T12:52:55.258455Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.260611Z", "completed_at": "2025-03-04T12:52:55.260625Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02427363395690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_vault_liquidation_arbitrum_mainnet_event_name__VaultLiquidation.429345a118", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VaultLiquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.247622Z", "completed_at": "2025-03-04T12:52:55.259868Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.266874Z", "completed_at": "2025-03-04T12:52:55.266885Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029225826263427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_arbitrum_mainnet_liquidate_as_account_id__True__0.c9be297afd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.253419Z", "completed_at": "2025-03-04T12:52:55.261564Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.268730Z", "completed_at": "2025-03-04T12:52:55.268739Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02881312370300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_arbitrum_mainnet_pool_id__True__0.c4b79598cb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.262134Z", "completed_at": "2025-03-04T12:52:55.271136Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.273699Z", "completed_at": "2025-03-04T12:52:55.273707Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021330595016479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_block_number.1dc8ebaf67", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.275794Z", "completed_at": "2025-03-04T12:52:55.294581Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.296872Z", "completed_at": "2025-03-04T12:52:55.296885Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026485681533813477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_block_timestamp.3054b6aeaa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.284495Z", "completed_at": "2025-03-04T12:52:55.296207Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.302928Z", "completed_at": "2025-03-04T12:52:55.302939Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03066229820251465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_collateral_type.ba4823f6ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.290239Z", "completed_at": "2025-03-04T12:52:55.297769Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.304712Z", "completed_at": "2025-03-04T12:52:55.304720Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030254840850830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_contract.625029e21f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.298369Z", "completed_at": "2025-03-04T12:52:55.307145Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.309739Z", "completed_at": "2025-03-04T12:52:55.309747Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020500898361206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_event_name.fcb481b7e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.311834Z", "completed_at": "2025-03-04T12:52:55.328685Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.331683Z", "completed_at": "2025-03-04T12:52:55.331695Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025279521942138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_id.c7ac33a6c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.317918Z", "completed_at": "2025-03-04T12:52:55.332584Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.339068Z", "completed_at": "2025-03-04T12:52:55.339077Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030707597732543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_liquidate_as_account_id.5e1fa876a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.323588Z", "completed_at": "2025-03-04T12:52:55.337614Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.340202Z", "completed_at": "2025-03-04T12:52:55.340210Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029692649841308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_liquidation_data.2555b245ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidation_data\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere liquidation_data is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.333305Z", "completed_at": "2025-03-04T12:52:55.341101Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.343771Z", "completed_at": "2025-03-04T12:52:55.343782Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021137237548828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_pool_id.f9e6978af1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.347158Z", "completed_at": "2025-03-04T12:52:55.358442Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.364316Z", "completed_at": "2025-03-04T12:52:55.364328Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022765636444091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_sender.d35f8c0cc2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.353803Z", "completed_at": "2025-03-04T12:52:55.365399Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.371971Z", "completed_at": "2025-03-04T12:52:55.371979Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026842594146728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_mainnet_transaction_hash.5da9d8cd8f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.359052Z", "completed_at": "2025-03-04T12:52:55.371215Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.373684Z", "completed_at": "2025-03-04T12:52:55.373692Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02789616584777832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_vault_liquidation_arbitrum_mainnet_id.3f5a30c375", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_liquidation_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.366022Z", "completed_at": "2025-03-04T12:52:55.374539Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.377195Z", "completed_at": "2025-03-04T12:52:55.377202Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02433037757873535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_vault_liquidation_arbitrum_sepolia_event_name__VaultLiquidation.0c7e403f1c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VaultLiquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.378794Z", "completed_at": "2025-03-04T12:52:55.389213Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.399882Z", "completed_at": "2025-03-04T12:52:55.399901Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027066469192504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_arbitrum_sepolia_liquidate_as_account_id__True__0.8896409533", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.394717Z", "completed_at": "2025-03-04T12:52:55.406011Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.408045Z", "completed_at": "2025-03-04T12:52:55.408055Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022431135177612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_block_number.fbedd6aa28", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.389857Z", "completed_at": "2025-03-04T12:52:55.407234Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.410262Z", "completed_at": "2025-03-04T12:52:55.410271Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03223586082458496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_arbitrum_sepolia_pool_id__True__0.6022175c23", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.401246Z", "completed_at": "2025-03-04T12:52:55.409026Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.411884Z", "completed_at": "2025-03-04T12:52:55.411891Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023366451263427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_block_timestamp.3f8fcf20ee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.415304Z", "completed_at": "2025-03-04T12:52:55.427353Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.435066Z", "completed_at": "2025-03-04T12:52:55.435077Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025594711303710938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_collateral_type.0b2d659b09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.422925Z", "completed_at": "2025-03-04T12:52:55.440293Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.442847Z", "completed_at": "2025-03-04T12:52:55.442857Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028943777084350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_contract.2bb4203c78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.428727Z", "completed_at": "2025-03-04T12:52:55.442043Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.444998Z", "completed_at": "2025-03-04T12:52:55.445006Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02487015724182129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_event_name.6ee4c7edec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.436082Z", "completed_at": "2025-03-04T12:52:55.443730Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.446592Z", "completed_at": "2025-03-04T12:52:55.446600Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02518296241760254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_id.e478906cc0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.450107Z", "completed_at": "2025-03-04T12:52:55.462225Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.468044Z", "completed_at": "2025-03-04T12:52:55.468055Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023851871490478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_liquidate_as_account_id.557d546c5f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.457614Z", "completed_at": "2025-03-04T12:52:55.473297Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.475711Z", "completed_at": "2025-03-04T12:52:55.475721Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027055740356445312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_liquidation_data.0e7de46ea6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidation_data\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere liquidation_data is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.463526Z", "completed_at": "2025-03-04T12:52:55.474898Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.477878Z", "completed_at": "2025-03-04T12:52:55.477886Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02317643165588379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_pool_id.c0c0a011c4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.469032Z", "completed_at": "2025-03-04T12:52:55.477264Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.480164Z", "completed_at": "2025-03-04T12:52:55.480173Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024083852767944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_sender.e33149c915", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.482360Z", "completed_at": "2025-03-04T12:52:55.492584Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.502954Z", "completed_at": "2025-03-04T12:52:55.502966Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026415348052978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_arbitrum_sepolia_transaction_hash.6b1e45b06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.493178Z", "completed_at": "2025-03-04T12:52:55.508731Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.511012Z", "completed_at": "2025-03-04T12:52:55.511021Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02939438819885254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_vault_liquidation_arbitrum_sepolia_id.39f25ec5ad", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_liquidation_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.498291Z", "completed_at": "2025-03-04T12:52:55.510206Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.513248Z", "completed_at": "2025-03-04T12:52:55.513256Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023462772369384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_vault_liquidation_base_mainnet_event_name__VaultLiquidation.b8ea6a7925", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VaultLiquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.504043Z", "completed_at": "2025-03-04T12:52:55.512646Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.515432Z", "completed_at": "2025-03-04T12:52:55.515440Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02429676055908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_base_mainnet_liquidate_as_account_id__True__0.b04df95186", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.517654Z", "completed_at": "2025-03-04T12:52:55.526030Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.538259Z", "completed_at": "2025-03-04T12:52:55.538270Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02639484405517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_base_mainnet_pool_id__True__0.bfc340e4f6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.526635Z", "completed_at": "2025-03-04T12:52:55.543821Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.545997Z", "completed_at": "2025-03-04T12:52:55.546007Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029113054275512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_block_number.667cea546c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.531838Z", "completed_at": "2025-03-04T12:52:55.545177Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.548147Z", "completed_at": "2025-03-04T12:52:55.548157Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024863481521606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_block_timestamp.2dca047589", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.539332Z", "completed_at": "2025-03-04T12:52:55.546921Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.549692Z", "completed_at": "2025-03-04T12:52:55.549702Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025013208389282227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_collateral_type.e0c76340c5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.553198Z", "completed_at": "2025-03-04T12:52:55.560585Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.570746Z", "completed_at": "2025-03-04T12:52:55.570757Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0233609676361084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_contract.d5acf50762", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.561184Z", "completed_at": "2025-03-04T12:52:55.576539Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.578850Z", "completed_at": "2025-03-04T12:52:55.578859Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02709341049194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_event_name.1e10a7bb02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.566437Z", "completed_at": "2025-03-04T12:52:55.578048Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.581056Z", "completed_at": "2025-03-04T12:52:55.581067Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023349523544311523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_id.3054417f0f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.571955Z", "completed_at": "2025-03-04T12:52:55.579792Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.582665Z", "completed_at": "2025-03-04T12:52:55.582675Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023553848266601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_liquidate_as_account_id.042bc52396", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.586184Z", "completed_at": "2025-03-04T12:52:55.595758Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.605795Z", "completed_at": "2025-03-04T12:52:55.605808Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02556157112121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_liquidation_data.be698b5245", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidation_data\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere liquidation_data is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.596340Z", "completed_at": "2025-03-04T12:52:55.611340Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.613667Z", "completed_at": "2025-03-04T12:52:55.613677Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02889728546142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_pool_id.4a337176ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.601489Z", "completed_at": "2025-03-04T12:52:55.612952Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.615844Z", "completed_at": "2025-03-04T12:52:55.615855Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02297067642211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_sender.512fed362a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.607049Z", "completed_at": "2025-03-04T12:52:55.615229Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.618034Z", "completed_at": "2025-03-04T12:52:55.618041Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023740053176879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_mainnet_transaction_hash.063cc50ef6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.620246Z", "completed_at": "2025-03-04T12:52:55.628246Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.640678Z", "completed_at": "2025-03-04T12:52:55.640689Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026180505752563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_vault_liquidation_base_mainnet_id.74bcb7a076", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_liquidation_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.628863Z", "completed_at": "2025-03-04T12:52:55.646770Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.648886Z", "completed_at": "2025-03-04T12:52:55.648894Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02938389778137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_vault_liquidation_base_sepolia_event_name__VaultLiquidation.958e4fe8de", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VaultLiquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.634230Z", "completed_at": "2025-03-04T12:52:55.648104Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.651110Z", "completed_at": "2025-03-04T12:52:55.651120Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025679349899291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_base_sepolia_liquidate_as_account_id__True__0.ee3dd8dc1e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.641887Z", "completed_at": "2025-03-04T12:52:55.649855Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.652757Z", "completed_at": "2025-03-04T12:52:55.652766Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025864839553833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_base_sepolia_pool_id__True__0.5ea2ba7eab", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.656348Z", "completed_at": "2025-03-04T12:52:55.668647Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.674678Z", "completed_at": "2025-03-04T12:52:55.674694Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024410724639892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_block_number.72d5fcf75c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.664100Z", "completed_at": "2025-03-04T12:52:55.675678Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.681591Z", "completed_at": "2025-03-04T12:52:55.681599Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026674985885620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_block_timestamp.5c4fdcd348", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.670007Z", "completed_at": "2025-03-04T12:52:55.682480Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.685116Z", "completed_at": "2025-03-04T12:52:55.685124Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0239107608795166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_collateral_type.18870127b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.676271Z", "completed_at": "2025-03-04T12:52:55.684532Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.687276Z", "completed_at": "2025-03-04T12:52:55.687284Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024663686752319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_contract.58dafa50b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.688831Z", "completed_at": "2025-03-04T12:52:55.702440Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.704993Z", "completed_at": "2025-03-04T12:52:55.705002Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021930217742919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_event_name.04b05d8fa6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.697362Z", "completed_at": "2025-03-04T12:52:55.704387Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.715575Z", "completed_at": "2025-03-04T12:52:55.715587Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029057025909423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_id.08162ec8b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.710691Z", "completed_at": "2025-03-04T12:52:55.718309Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.721132Z", "completed_at": "2025-03-04T12:52:55.721142Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019470930099487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_liquidation_data.a5dc2b7337", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidation_data\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere liquidation_data is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.705915Z", "completed_at": "2025-03-04T12:52:55.719714Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.722676Z", "completed_at": "2025-03-04T12:52:55.722686Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026158809661865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_liquidate_as_account_id.b170dba1d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.724851Z", "completed_at": "2025-03-04T12:52:55.738111Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.740645Z", "completed_at": "2025-03-04T12:52:55.740658Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021785974502563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_pool_id.47e473f735", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.730341Z", "completed_at": "2025-03-04T12:52:55.739417Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.746016Z", "completed_at": "2025-03-04T12:52:55.746029Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025845766067504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_sender.2f502247e7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.741561Z", "completed_at": "2025-03-04T12:52:55.753147Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.755771Z", "completed_at": "2025-03-04T12:52:55.755783Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019335508346557617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_base_sepolia_transaction_hash.fcdcfcdcdd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.747127Z", "completed_at": "2025-03-04T12:52:55.755167Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.757864Z", "completed_at": "2025-03-04T12:52:55.757871Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02063274383544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_vault_liquidation_base_sepolia_id.5759c475e5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_liquidation_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.759382Z", "completed_at": "2025-03-04T12:52:55.771776Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.774223Z", "completed_at": "2025-03-04T12:52:55.774237Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02048039436340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_vault_liquidation_eth_mainnet_event_name__VaultLiquidation.8d1cb5eebf", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VaultLiquidation'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.764268Z", "completed_at": "2025-03-04T12:52:55.773068Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.780227Z", "completed_at": "2025-03-04T12:52:55.780241Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025794029235839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_eth_mainnet_liquidate_as_account_id__True__0.a9d184de0a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidate_as_account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.775175Z", "completed_at": "2025-03-04T12:52:55.789614Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.792102Z", "completed_at": "2025-03-04T12:52:55.792115Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022159576416015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_vault_liquidation_eth_mainnet_pool_id__True__0.cccb8c7cca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.781326Z", "completed_at": "2025-03-04T12:52:55.790220Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.793033Z", "completed_at": "2025-03-04T12:52:55.793041Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021992206573486328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_block_number.39193d7213", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.796398Z", "completed_at": "2025-03-04T12:52:55.808216Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.814616Z", "completed_at": "2025-03-04T12:52:55.814632Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0239717960357666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_block_timestamp.439cb16960", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.801341Z", "completed_at": "2025-03-04T12:52:55.808809Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.815687Z", "completed_at": "2025-03-04T12:52:55.815694Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02432417869567871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_collateral_type.22405706c4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.809995Z", "completed_at": "2025-03-04T12:52:55.822142Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.824241Z", "completed_at": "2025-03-04T12:52:55.824252Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018463850021362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_contract.65501d763b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.816590Z", "completed_at": "2025-03-04T12:52:55.825162Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:55.827720Z", "completed_at": "2025-03-04T12:52:55.827728Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021145105361938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_event_name.e6bd41012e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.829199Z", "completed_at": "2025-03-04T12:52:55.844267Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.072050Z", "completed_at": "2025-03-04T12:52:56.072063Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.24867486953735352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_id.11becd0eff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.835741Z", "completed_at": "2025-03-04T12:52:56.070638Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.073162Z", "completed_at": "2025-03-04T12:52:56.073170Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.24749445915222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_liquidate_as_account_id.978ffc7da9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidate_as_account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere liquidate_as_account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:55.845023Z", "completed_at": "2025-03-04T12:52:56.079003Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.081270Z", "completed_at": "2025-03-04T12:52:56.081283Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.24725794792175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_liquidation_data.485b65c6b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidation_data\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere liquidation_data is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.074162Z", "completed_at": "2025-03-04T12:52:56.082203Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.084785Z", "completed_at": "2025-03-04T12:52:56.084793Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.24124598503112793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_pool_id.ca9bfaf7f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.093094Z", "completed_at": "2025-03-04T12:52:56.104246Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.106312Z", "completed_at": "2025-03-04T12:52:56.106324Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023032665252685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_transaction_hash.5e22cb6ded", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.088078Z", "completed_at": "2025-03-04T12:52:56.104980Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.107304Z", "completed_at": "2025-03-04T12:52:56.107313Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024610042572021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_vault_liquidation_eth_mainnet_sender.03a447332b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.099571Z", "completed_at": "2025-03-04T12:52:56.108169Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.116840Z", "completed_at": "2025-03-04T12:52:56.116852Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030157804489135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_vault_liquidation_eth_mainnet_id.9b474978a9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_liquidation_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.108776Z", "completed_at": "2025-03-04T12:52:56.119276Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.121781Z", "completed_at": "2025-03-04T12:52:56.121791Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023390531539916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_activity_arbitrum_mainnet", "compiled": true, "compiled_code": "\n\nwith delegated as (\n    select distinct\n        block_timestamp,\n        account_id,\n        'Delegated' as account_action\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_delegation_updated_arbitrum_mainnet\"\n),\n\nwithdrawn as (\n    select\n        block_timestamp,\n        account_id,\n        'Withdrawn' as account_action\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\n),\n\nclaimed as (\n    select\n        block_timestamp,\n        account_id,\n        'Claimed' as account_action\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\n),\n\ncombined as (\n    select * from delegated\n    union all\n    select * from withdrawn\n    union all\n    select * from claimed\n)\n\nselect\n    block_timestamp,\n    account_action,\n    account_id\nfrom combined", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_activity_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.127836Z", "completed_at": "2025-03-04T12:52:56.135557Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.142249Z", "completed_at": "2025-03-04T12:52:56.142261Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02370905876159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_withdrawn_arbitrum_mainnet_event_name__Withdrawn.e5deebfa14", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Withdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.123260Z", "completed_at": "2025-03-04T12:52:56.136175Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.143196Z", "completed_at": "2025-03-04T12:52:56.143204Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025365352630615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_collateral_arbitrum_mainnet", "compiled": true, "compiled_code": "with events as (\n    select\n        block_timestamp,\n        \n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_deposited_arbitrum_mainnet\"\n    union all\n    select\n        block_timestamp,\n        -\n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\n),\n\nranked_events as (\n    select\n        *,\n        SUM(token_amount) over (\n            partition by collateral_type\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as amount_deposited\n    from\n        events\n)\n\nselect\n    block_timestamp as ts,\n    collateral_type,\n    amount_deposited\nfrom\n    ranked_events\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_collateral_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.136758Z", "completed_at": "2025-03-04T12:52:56.149851Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.152854Z", "completed_at": "2025-03-04T12:52:56.152863Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03030562400817871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_arbitrum_mainnet_account_id__True__0.8873db614c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.144290Z", "completed_at": "2025-03-04T12:52:56.152234Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.154961Z", "completed_at": "2025-03-04T12:52:56.154969Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02015519142150879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_arbitrum_mainnet_token_amount__True__0.0008eb5d09", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.157083Z", "completed_at": "2025-03-04T12:52:56.170039Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.172589Z", "completed_at": "2025-03-04T12:52:56.172599Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02130270004272461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_account_id.ccf8b71875", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.163134Z", "completed_at": "2025-03-04T12:52:56.172014Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.182268Z", "completed_at": "2025-03-04T12:52:56.182279Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028662681579589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_block_number.29891eb70b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.173490Z", "completed_at": "2025-03-04T12:52:56.185737Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.188147Z", "completed_at": "2025-03-04T12:52:56.188156Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025825977325439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_block_timestamp.0605d1994e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.177855Z", "completed_at": "2025-03-04T12:52:56.186306Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.189045Z", "completed_at": "2025-03-04T12:52:56.189055Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019822120666503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_collateral_type.772b018013", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.190516Z", "completed_at": "2025-03-04T12:52:56.202483Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.205007Z", "completed_at": "2025-03-04T12:52:56.205020Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020020484924316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_contract.a8c5968db3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.196452Z", "completed_at": "2025-03-04T12:52:56.204401Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.216342Z", "completed_at": "2025-03-04T12:52:56.216352Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029560089111328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_event_name.69a5a9a880", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.205926Z", "completed_at": "2025-03-04T12:52:56.218847Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.221419Z", "completed_at": "2025-03-04T12:52:56.221430Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020533084869384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_id.46c5fcd073", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.210368Z", "completed_at": "2025-03-04T12:52:56.220218Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.222888Z", "completed_at": "2025-03-04T12:52:56.222896Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021100282669067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_sender.665f4ade6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.224991Z", "completed_at": "2025-03-04T12:52:56.236651Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.242910Z", "completed_at": "2025-03-04T12:52:56.242921Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023502349853515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_token_amount.4bc0081148", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.230217Z", "completed_at": "2025-03-04T12:52:56.242175Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.248273Z", "completed_at": "2025-03-04T12:52:56.248281Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027585506439208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_mainnet_transaction_hash.492d634608", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.237898Z", "completed_at": "2025-03-04T12:52:56.249880Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.252694Z", "completed_at": "2025-03-04T12:52:56.252702Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018279552459716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_withdrawn_arbitrum_mainnet_id.9810244f0d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_withdrawn_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.243834Z", "completed_at": "2025-03-04T12:52:56.252120Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.254769Z", "completed_at": "2025-03-04T12:52:56.254777Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019602060317993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_activity_arbitrum_sepolia", "compiled": true, "compiled_code": "\n\nwith delegated as (\n    select distinct\n        block_timestamp,\n        account_id,\n        'Delegated' as account_action\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_delegation_updated_arbitrum_sepolia\"\n),\n\nwithdrawn as (\n    select\n        block_timestamp,\n        account_id,\n        'Withdrawn' as account_action\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\n),\n\nclaimed as (\n    select\n        block_timestamp,\n        account_id,\n        'Claimed' as account_action\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_claimed_arbitrum_sepolia\"\n),\n\ncombined as (\n    select * from delegated\n    union all\n    select * from withdrawn\n    union all\n    select * from claimed\n)\n\nselect\n    block_timestamp,\n    account_action,\n    account_id\nfrom combined", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_activity_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.256874Z", "completed_at": "2025-03-04T12:52:56.269717Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.272204Z", "completed_at": "2025-03-04T12:52:56.272214Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020920753479003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_collateral_arbitrum_sepolia", "compiled": true, "compiled_code": "with events as (\n    select\n        block_timestamp,\n        \n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_deposited_arbitrum_sepolia\"\n    union all\n    select\n        block_timestamp,\n        -\n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\n),\n\nranked_events as (\n    select\n        *,\n        SUM(token_amount) over (\n            partition by collateral_type\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as amount_deposited\n    from\n        events\n)\n\nselect\n    block_timestamp as ts,\n    collateral_type,\n    amount_deposited\nfrom\n    ranked_events\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_collateral_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.262692Z", "completed_at": "2025-03-04T12:52:56.271620Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.282323Z", "completed_at": "2025-03-04T12:52:56.282335Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028937816619873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_withdrawn_arbitrum_sepolia_event_name__Withdrawn.cd07ab25e2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Withdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.277738Z", "completed_at": "2025-03-04T12:52:56.285525Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.287988Z", "completed_at": "2025-03-04T12:52:56.287995Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019073009490966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_arbitrum_sepolia_token_amount__True__0.0301b264d6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.273102Z", "completed_at": "2025-03-04T12:52:56.286758Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.289446Z", "completed_at": "2025-03-04T12:52:56.289454Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02776479721069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_arbitrum_sepolia_account_id__True__0.d4050dde67", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.291606Z", "completed_at": "2025-03-04T12:52:56.303374Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.309540Z", "completed_at": "2025-03-04T12:52:56.309554Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023565292358398438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_account_id.93a7f1c6e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.296732Z", "completed_at": "2025-03-04T12:52:56.304628Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.316445Z", "completed_at": "2025-03-04T12:52:56.316456Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02925586700439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_block_number.fb2901f9b9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.305196Z", "completed_at": "2025-03-04T12:52:56.319167Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.321608Z", "completed_at": "2025-03-04T12:52:56.321617Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020633935928344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_block_timestamp.7fcd8e34b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.310570Z", "completed_at": "2025-03-04T12:52:56.319745Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.322441Z", "completed_at": "2025-03-04T12:52:56.322448Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020648717880249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_collateral_type.462d8e9d4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.330273Z", "completed_at": "2025-03-04T12:52:56.337612Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.347810Z", "completed_at": "2025-03-04T12:52:56.347822Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026959896087646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_event_name.6e275cf97d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.325778Z", "completed_at": "2025-03-04T12:52:56.338203Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.348744Z", "completed_at": "2025-03-04T12:52:56.348755Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028528928756713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_contract.7095f79cd5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.338803Z", "completed_at": "2025-03-04T12:52:56.350733Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.353192Z", "completed_at": "2025-03-04T12:52:56.353200Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01859426498413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_id.bdd65cec2b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.343159Z", "completed_at": "2025-03-04T12:52:56.351280Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.354081Z", "completed_at": "2025-03-04T12:52:56.354089Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018732547760009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_sender.b2d53e6596", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.358118Z", "completed_at": "2025-03-04T12:52:56.371282Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.381520Z", "completed_at": "2025-03-04T12:52:56.381532Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029108285903930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_token_amount.df20ce27b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.363949Z", "completed_at": "2025-03-04T12:52:56.380757Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.382744Z", "completed_at": "2025-03-04T12:52:56.382752Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027904987335205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_arbitrum_sepolia_transaction_hash.a4480fb9e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.371994Z", "completed_at": "2025-03-04T12:52:56.383613Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.386234Z", "completed_at": "2025-03-04T12:52:56.386241Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0236818790435791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_withdrawn_arbitrum_sepolia_id.3f0503a510", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_withdrawn_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.376266Z", "completed_at": "2025-03-04T12:52:56.384891Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.387802Z", "completed_at": "2025-03-04T12:52:56.387809Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024613380432128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_activity_base_mainnet", "compiled": true, "compiled_code": "\n\nwith delegated as (\n    select distinct\n        block_timestamp,\n        account_id,\n        'Delegated' as account_action\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_delegation_updated_base_mainnet\"\n),\n\nwithdrawn as (\n    select\n        block_timestamp,\n        account_id,\n        'Withdrawn' as account_action\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\n),\n\nclaimed as (\n    select\n        block_timestamp,\n        account_id,\n        'Claimed' as account_action\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\n),\n\ncombined as (\n    select * from delegated\n    union all\n    select * from withdrawn\n    union all\n    select * from claimed\n)\n\nselect\n    block_timestamp,\n    account_action,\n    account_id\nfrom combined", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_account_activity_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.397946Z", "completed_at": "2025-03-04T12:52:56.409005Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.416668Z", "completed_at": "2025-03-04T12:52:56.416681Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02813720703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_withdrawn_base_mainnet_event_name__Withdrawn.8eb5613297", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Withdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.392750Z", "completed_at": "2025-03-04T12:52:56.409583Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.418187Z", "completed_at": "2025-03-04T12:52:56.418198Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031177997589111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_collateral_base_mainnet", "compiled": true, "compiled_code": "with events as (\n    select\n        block_timestamp,\n        \n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_deposited_base_mainnet\"\n    union all\n    select\n        block_timestamp,\n        -\n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\n),\n\nranked_events as (\n    select\n        *,\n        SUM(token_amount) over (\n            partition by collateral_type\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as amount_deposited\n    from\n        events\n)\n\nselect\n    block_timestamp as ts,\n    collateral_type,\n    amount_deposited\nfrom\n    ranked_events\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_pool_collateral_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.404315Z", "completed_at": "2025-03-04T12:52:56.417619Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.420552Z", "completed_at": "2025-03-04T12:52:56.420560Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028582096099853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_base_mainnet_account_id__True__0.0bf8555841", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.410196Z", "completed_at": "2025-03-04T12:52:56.419943Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.422945Z", "completed_at": "2025-03-04T12:52:56.422952Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02576899528503418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_base_mainnet_token_amount__True__0.54af4bae82", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.427608Z", "completed_at": "2025-03-04T12:52:56.439187Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.450095Z", "completed_at": "2025-03-04T12:52:56.450108Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028102636337280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_account_id.ef84b5b40c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.433726Z", "completed_at": "2025-03-04T12:52:56.449380Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.451375Z", "completed_at": "2025-03-04T12:52:56.451383Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02707195281982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_block_number.03c7cebae3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.444811Z", "completed_at": "2025-03-04T12:52:56.452310Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.454996Z", "completed_at": "2025-03-04T12:52:56.455007Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022751569747924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_collateral_type.f32eb82738", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.439855Z", "completed_at": "2025-03-04T12:52:56.453600Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.456811Z", "completed_at": "2025-03-04T12:52:56.456821Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030598163604736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_block_timestamp.3b8ffa7210", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.467637Z", "completed_at": "2025-03-04T12:52:56.481270Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.487718Z", "completed_at": "2025-03-04T12:52:56.487732Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030148744583129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_event_name.f423143c4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.461679Z", "completed_at": "2025-03-04T12:52:56.486815Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.490076Z", "completed_at": "2025-03-04T12:52:56.490085Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03426337242126465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_contract.a8511fdb92", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.476127Z", "completed_at": "2025-03-04T12:52:56.488716Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.492326Z", "completed_at": "2025-03-04T12:52:56.492337Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03145480155944824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_id.8106f47c4d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.481947Z", "completed_at": "2025-03-04T12:52:56.490954Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.493951Z", "completed_at": "2025-03-04T12:52:56.493961Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02724003791809082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_sender.2f5cf91bdf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.499993Z", "completed_at": "2025-03-04T12:52:56.524940Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.526585Z", "completed_at": "2025-03-04T12:52:56.526598Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031903743743896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_token_amount.fbabce38ba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.506040Z", "completed_at": "2025-03-04T12:52:56.525648Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.528233Z", "completed_at": "2025-03-04T12:52:56.528242Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.032166481018066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_mainnet_transaction_hash.a3fda71b2a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.512056Z", "completed_at": "2025-03-04T12:52:56.527630Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.530513Z", "completed_at": "2025-03-04T12:52:56.530525Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0325014591217041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_withdrawn_base_mainnet_id.72a24b0786", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"core_withdrawn_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.517744Z", "completed_at": "2025-03-04T12:52:56.529134Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.532112Z", "completed_at": "2025-03-04T12:52:56.532123Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03288435935974121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_activity_base_sepolia", "compiled": true, "compiled_code": "\n\nwith delegated as (\n    select distinct\n        block_timestamp,\n        account_id,\n        'Delegated' as account_action\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_delegation_updated_base_sepolia\"\n),\n\nwithdrawn as (\n    select\n        block_timestamp,\n        account_id,\n        'Withdrawn' as account_action\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\n),\n\nclaimed as (\n    select\n        block_timestamp,\n        account_id,\n        'Claimed' as account_action\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_claimed_base_sepolia\"\n),\n\ncombined as (\n    select * from delegated\n    union all\n    select * from withdrawn\n    union all\n    select * from claimed\n)\n\nselect\n    block_timestamp,\n    account_action,\n    account_id\nfrom combined", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_account_activity_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.538340Z", "completed_at": "2025-03-04T12:52:56.554748Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.561545Z", "completed_at": "2025-03-04T12:52:56.561559Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028664588928222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_collateral_base_sepolia", "compiled": true, "compiled_code": "with events as (\n    select\n        block_timestamp,\n        \n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_deposited_base_sepolia\"\n    union all\n    select\n        block_timestamp,\n        -\n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\n),\n\nranked_events as (\n    select\n        *,\n        SUM(token_amount) over (\n            partition by collateral_type\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as amount_deposited\n    from\n        events\n)\n\nselect\n    block_timestamp as ts,\n    collateral_type,\n    amount_deposited\nfrom\n    ranked_events\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_pool_collateral_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.543913Z", "completed_at": "2025-03-04T12:52:56.560774Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.563179Z", "completed_at": "2025-03-04T12:52:56.563187Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028941631317138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_withdrawn_base_sepolia_event_name__Withdrawn.12079a5ee6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Withdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.549786Z", "completed_at": "2025-03-04T12:52:56.562471Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.565626Z", "completed_at": "2025-03-04T12:52:56.565634Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02924489974975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_base_sepolia_account_id__True__0.283560870b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.555641Z", "completed_at": "2025-03-04T12:52:56.564770Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.567839Z", "completed_at": "2025-03-04T12:52:56.567848Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030237674713134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_base_sepolia_token_amount__True__0.600b962701", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.572516Z", "completed_at": "2025-03-04T12:52:56.591504Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.598242Z", "completed_at": "2025-03-04T12:52:56.598255Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0312349796295166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_account_id.6536ec7b3c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.579037Z", "completed_at": "2025-03-04T12:52:56.597651Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.599490Z", "completed_at": "2025-03-04T12:52:56.599498Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030257463455200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_block_number.b38561efe3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.586743Z", "completed_at": "2025-03-04T12:52:56.600338Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.603070Z", "completed_at": "2025-03-04T12:52:56.603082Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03193044662475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_block_timestamp.276176a645", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.592318Z", "completed_at": "2025-03-04T12:52:56.602308Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.605315Z", "completed_at": "2025-03-04T12:52:56.605322Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02775287628173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_collateral_type.e4b3817245", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.609450Z", "completed_at": "2025-03-04T12:52:56.621352Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.628188Z", "completed_at": "2025-03-04T12:52:56.628201Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024326324462890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_contract.9a643890c5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.614731Z", "completed_at": "2025-03-04T12:52:56.627416Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.636062Z", "completed_at": "2025-03-04T12:52:56.636075Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031519412994384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_event_name.919fe4b5de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.622654Z", "completed_at": "2025-03-04T12:52:56.637754Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.640599Z", "completed_at": "2025-03-04T12:52:56.640609Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03190803527832031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_id.a4ef85d6dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.629157Z", "completed_at": "2025-03-04T12:52:56.639971Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.642717Z", "completed_at": "2025-03-04T12:52:56.642725Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02331376075744629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_sender.935071b6a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.645124Z", "completed_at": "2025-03-04T12:52:56.658368Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.665168Z", "completed_at": "2025-03-04T12:52:56.665181Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025984525680541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_token_amount.3582c76f95", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.651807Z", "completed_at": "2025-03-04T12:52:56.664442Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.671084Z", "completed_at": "2025-03-04T12:52:56.671096Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029739856719970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_base_sepolia_transaction_hash.ea6432763a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.659746Z", "completed_at": "2025-03-04T12:52:56.673070Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.675695Z", "completed_at": "2025-03-04T12:52:56.675704Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02471780776977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_withdrawn_base_sepolia_id.30c3b98bff", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"core_withdrawn_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.666137Z", "completed_at": "2025-03-04T12:52:56.675075Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.677800Z", "completed_at": "2025-03-04T12:52:56.677809Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02100992202758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_account_activity_eth_mainnet", "compiled": true, "compiled_code": "\n\nwith delegated as (\n    select distinct\n        block_timestamp,\n        account_id,\n        'Delegated' as account_action\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n),\n\nwithdrawn as (\n    select\n        block_timestamp,\n        account_id,\n        'Withdrawn' as account_action\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\n),\n\nclaimed as (\n    select\n        block_timestamp,\n        account_id,\n        'Claimed' as account_action\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\n),\n\ncombined as (\n    select * from delegated\n    union all\n    select * from withdrawn\n    union all\n    select * from claimed\n)\n\nselect\n    block_timestamp,\n    account_action,\n    account_id\nfrom combined", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_account_activity_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.679954Z", "completed_at": "2025-03-04T12:52:56.694220Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.696222Z", "completed_at": "2025-03-04T12:52:56.696236Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02192091941833496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_pool_collateral_eth_mainnet", "compiled": true, "compiled_code": "with events as (\n    select\n        block_timestamp,\n        \n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_deposited_eth_mainnet\"\n    union all\n    select\n        block_timestamp,\n        -\n    token_amount / 1e18\n as token_amount,\n        collateral_type\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\n),\n\nranked_events as (\n    select\n        *,\n        SUM(token_amount) over (\n            partition by collateral_type\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as amount_deposited\n    from\n        events\n)\n\nselect\n    block_timestamp as ts,\n    collateral_type,\n    amount_deposited\nfrom\n    ranked_events\norder by\n    block_timestamp,\n    collateral_type", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_collateral_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.688269Z", "completed_at": "2025-03-04T12:52:56.702169Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.709189Z", "completed_at": "2025-03-04T12:52:56.709202Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03275704383850098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_core_withdrawn_eth_mainnet_event_name__Withdrawn.cbf35f5a80", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Withdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.697183Z", "completed_at": "2025-03-04T12:52:56.710210Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.713231Z", "completed_at": "2025-03-04T12:52:56.713242Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02581000328063965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_eth_mainnet_account_id__True__0.cdf381b428", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.702982Z", "completed_at": "2025-03-04T12:52:56.711568Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.715051Z", "completed_at": "2025-03-04T12:52:56.715060Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02169036865234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_core_withdrawn_eth_mainnet_token_amount__True__0.8bd25add1c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not token_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.717864Z", "completed_at": "2025-03-04T12:52:56.731149Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.739314Z", "completed_at": "2025-03-04T12:52:56.739328Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02853536605834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_account_id.7846828c26", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.725812Z", "completed_at": "2025-03-04T12:52:56.740233Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.746393Z", "completed_at": "2025-03-04T12:52:56.746406Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03035283088684082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_block_number.74ee30eaa5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.732524Z", "completed_at": "2025-03-04T12:52:56.747312Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.750047Z", "completed_at": "2025-03-04T12:52:56.750057Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025824308395385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_block_timestamp.b6326ea438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.740852Z", "completed_at": "2025-03-04T12:52:56.748759Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.751561Z", "completed_at": "2025-03-04T12:52:56.751569Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026546001434326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_collateral_type.28458fb6de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.753744Z", "completed_at": "2025-03-04T12:52:56.766968Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.773519Z", "completed_at": "2025-03-04T12:52:56.773535Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025618553161621094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_contract.a4eb9c51f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.761687Z", "completed_at": "2025-03-04T12:52:56.772896Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.779169Z", "completed_at": "2025-03-04T12:52:56.779179Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026903390884399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_event_name.2d3b6771d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.768310Z", "completed_at": "2025-03-04T12:52:56.780313Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.782442Z", "completed_at": "2025-03-04T12:52:56.782450Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022361040115356445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_id.b0e6ed95b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.774540Z", "completed_at": "2025-03-04T12:52:56.783275Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.785857Z", "completed_at": "2025-03-04T12:52:56.785868Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024950027465820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_sender.b7bc5bdadc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.796293Z", "completed_at": "2025-03-04T12:52:56.807084Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.809261Z", "completed_at": "2025-03-04T12:52:56.809276Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024830341339111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_transaction_hash.6b6f75c74b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.789229Z", "completed_at": "2025-03-04T12:52:56.807857Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.810262Z", "completed_at": "2025-03-04T12:52:56.810270Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026467323303222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_core_withdrawn_eth_mainnet_token_amount.d3547c3837", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.802566Z", "completed_at": "2025-03-04T12:52:56.811106Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.818103Z", "completed_at": "2025-03-04T12:52:56.818128Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030355453491210938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_core_withdrawn_eth_mainnet_id.3d5210133c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_eth_mainnet\".\"core_withdrawn_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.811728Z", "completed_at": "2025-03-04T12:52:56.820265Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.823062Z", "completed_at": "2025-03-04T12:52:56.823071Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021721601486206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_gov_vote_recorded_snax_testnet_event_name__VoteRecorded.3107ed0913", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VoteRecorded'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.825439Z", "completed_at": "2025-03-04T12:52:56.837356Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.845591Z", "completed_at": "2025-03-04T12:52:56.845603Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02611684799194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_block_number.bf5384239a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.831190Z", "completed_at": "2025-03-04T12:52:56.844965Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.851076Z", "completed_at": "2025-03-04T12:52:56.851089Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030324459075927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_block_timestamp.8bff125b42", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.837988Z", "completed_at": "2025-03-04T12:52:56.851973Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.854806Z", "completed_at": "2025-03-04T12:52:56.854816Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030116558074951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_candidates.39ec698f83", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect candidates\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere candidates is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.846638Z", "completed_at": "2025-03-04T12:52:56.854151Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.856983Z", "completed_at": "2025-03-04T12:52:56.856993Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020517826080322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_chain_id.af02247585", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect chain_id\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere chain_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.861029Z", "completed_at": "2025-03-04T12:52:56.872636Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.882882Z", "completed_at": "2025-03-04T12:52:56.882898Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027318954467773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_contract.d372e887ba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.865866Z", "completed_at": "2025-03-04T12:52:56.873196Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.883842Z", "completed_at": "2025-03-04T12:52:56.883850Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027608156204223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_epoch_id.a4ace8d141", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect epoch_id\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere epoch_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.873792Z", "completed_at": "2025-03-04T12:52:56.884956Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.887564Z", "completed_at": "2025-03-04T12:52:56.887575Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027324438095092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_event_name.76babc2551", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.878354Z", "completed_at": "2025-03-04T12:52:56.886218Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.889086Z", "completed_at": "2025-03-04T12:52:56.889093Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019029855728149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_id.94c183a836", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.893978Z", "completed_at": "2025-03-04T12:52:56.911846Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.917551Z", "completed_at": "2025-03-04T12:52:56.917564Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029261112213134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_transaction_hash.32e2b72fab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.901210Z", "completed_at": "2025-03-04T12:52:56.916680Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.918731Z", "completed_at": "2025-03-04T12:52:56.918739Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028731584548950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_voter.32ab553729", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voter\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere voter is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.907272Z", "completed_at": "2025-03-04T12:52:56.919576Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.922141Z", "completed_at": "2025-03-04T12:52:56.922150Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02893972396850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_recorded_snax_testnet_voting_power.b8ee341c96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voting_power\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere voting_power is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.912414Z", "completed_at": "2025-03-04T12:52:56.920179Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.923074Z", "completed_at": "2025-03-04T12:52:56.923081Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02260589599609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_gov_vote_recorded_snax_testnet_id.077b70d622", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.933877Z", "completed_at": "2025-03-04T12:52:56.947246Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.953124Z", "completed_at": "2025-03-04T12:52:56.953138Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02869439125061035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_gov_vote_withdrawn_snax_testnet_event_name__VoteWithdrawn.f8bcefc8de", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VoteWithdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.928946Z", "completed_at": "2025-03-04T12:52:56.947835Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.954762Z", "completed_at": "2025-03-04T12:52:56.954772Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030936479568481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_gov_vote_recorded_snax_testnet_transaction_hash.2d1aaa8c7a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_hash as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_recorded_snax_testnet\"\nwhere transaction_hash is not null\ngroup by transaction_hash\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.940373Z", "completed_at": "2025-03-04T12:52:56.954187Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.957136Z", "completed_at": "2025-03-04T12:52:56.957144Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029539108276367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_block_number.c805901c73", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.948481Z", "completed_at": "2025-03-04T12:52:56.956586Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.959420Z", "completed_at": "2025-03-04T12:52:56.959428Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031244516372680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_block_timestamp.68f3ce7c19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.964049Z", "completed_at": "2025-03-04T12:52:56.980650Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.986270Z", "completed_at": "2025-03-04T12:52:56.986286Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027657032012939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_chain_id.cd86db7422", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect chain_id\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere chain_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.970506Z", "completed_at": "2025-03-04T12:52:56.987222Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.990008Z", "completed_at": "2025-03-04T12:52:56.990019Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02917957305908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_contract.4b45185581", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.975904Z", "completed_at": "2025-03-04T12:52:56.988810Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.991673Z", "completed_at": "2025-03-04T12:52:56.991681Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02892923355102539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_epoch_id.3f22d60c1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect epoch_id\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere epoch_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.981451Z", "completed_at": "2025-03-04T12:52:56.989358Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:56.992525Z", "completed_at": "2025-03-04T12:52:56.992536Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02347111701965332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_event_name.07b79bcefd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:56.996644Z", "completed_at": "2025-03-04T12:52:57.006354Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.016487Z", "completed_at": "2025-03-04T12:52:57.016499Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025621652603149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_id.ab7d5eed00", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.007517Z", "completed_at": "2025-03-04T12:52:57.022739Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.025484Z", "completed_at": "2025-03-04T12:52:57.025493Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02960991859436035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_transaction_hash.4d14f7c906", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.012026Z", "completed_at": "2025-03-04T12:52:57.023525Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.026374Z", "completed_at": "2025-03-04T12:52:57.026384Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022804975509643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_gov_vote_withdrawn_snax_testnet_voter.486c8024f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voter\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere voter is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.017407Z", "completed_at": "2025-03-04T12:52:57.024892Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.027883Z", "completed_at": "2025-03-04T12:52:57.027892Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02364492416381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_gov_vote_withdrawn_snax_testnet_id.014a1febf6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.030109Z", "completed_at": "2025-03-04T12:52:57.038089Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.043351Z", "completed_at": "2025-03-04T12:52:57.043362Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019310712814331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_gov_vote_withdrawn_snax_testnet_transaction_hash.2cda794480", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_hash as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_testnet\".\"gov_vote_withdrawn_snax_testnet\"\nwhere transaction_hash is not null\ngroup by transaction_hash\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.039849Z", "completed_at": "2025-03-04T12:52:57.056424Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.058817Z", "completed_at": "2025-03-04T12:52:57.058829Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023537874221801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_accounts_arbitrum_mainnet", "compiled": true, "compiled_code": "with arbitrum as (\n    select\n        block_timestamp as created_ts,\n        \"owner\",\n        CAST(\n            account_id as VARCHAR\n        ) as id\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\n)\n\nselect *\nfrom\n    arbitrum", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_accounts_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.051037Z", "completed_at": "2025-03-04T12:52:57.058171Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.060910Z", "completed_at": "2025-03-04T12:52:57.060918Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024113893508911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_created_arbitrum_mainnet_account_id__True__0.976edf0951", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.044442Z", "completed_at": "2025-03-04T12:52:57.059701Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.062444Z", "completed_at": "2025-03-04T12:52:57.062455Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026449203491210938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_account_created_arbitrum_mainnet_event_name__AccountCreated.e3b8716bf0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.063613Z", "completed_at": "2025-03-04T12:52:57.071293Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.073692Z", "completed_at": "2025-03-04T12:52:57.073704Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016367197036743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_mainnet_account_id.6064e6e85b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.074583Z", "completed_at": "2025-03-04T12:52:57.090573Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.093135Z", "completed_at": "2025-03-04T12:52:57.093148Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024079322814941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_mainnet_block_number.9d9960063c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.079804Z", "completed_at": "2025-03-04T12:52:57.091278Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.094085Z", "completed_at": "2025-03-04T12:52:57.094092Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023537635803222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_mainnet_block_timestamp.aa150ec309", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.085005Z", "completed_at": "2025-03-04T12:52:57.092543Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.101691Z", "completed_at": "2025-03-04T12:52:57.101700Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029311656951904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_mainnet_contract.afb3ec2b69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.094976Z", "completed_at": "2025-03-04T12:52:57.104867Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.107340Z", "completed_at": "2025-03-04T12:52:57.107348Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017889738082885742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_mainnet_event_name.9b0f514dfe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.119744Z", "completed_at": "2025-03-04T12:52:57.125489Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.127298Z", "completed_at": "2025-03-04T12:52:57.127310Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02071070671081543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_mainnet_transaction_hash.4458887a25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.115319Z", "completed_at": "2025-03-04T12:52:57.126645Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.133436Z", "completed_at": "2025-03-04T12:52:57.133446Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027537107467651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_mainnet_owner.d496ae59c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.110813Z", "completed_at": "2025-03-04T12:52:57.128192Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.135182Z", "completed_at": "2025-03-04T12:52:57.135191Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029876708984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_mainnet_id.6ebc461a9f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.128820Z", "completed_at": "2025-03-04T12:52:57.136970Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.139528Z", "completed_at": "2025-03-04T12:52:57.139539Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015386343002319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_account_created_arbitrum_mainnet_id.c50800d3e3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_created_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.142971Z", "completed_at": "2025-03-04T12:52:57.159825Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.161488Z", "completed_at": "2025-03-04T12:52:57.161499Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02405691146850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_accounts_arbitrum_sepolia", "compiled": true, "compiled_code": "with arbitrum as (\n    select\n        block_timestamp as created_ts,\n        \"owner\",\n        CAST(\n            account_id as VARCHAR\n        ) as id\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\n)\n\nselect *\nfrom\n    arbitrum", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_accounts_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.149317Z", "completed_at": "2025-03-04T12:52:57.162351Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.169022Z", "completed_at": "2025-03-04T12:52:57.169031Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030251026153564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_account_created_arbitrum_sepolia_event_name__AccountCreated.b75a805866", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.155024Z", "completed_at": "2025-03-04T12:52:57.167382Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.170125Z", "completed_at": "2025-03-04T12:52:57.170133Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02922368049621582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_created_arbitrum_sepolia_account_id__True__0.0141d8699d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.163025Z", "completed_at": "2025-03-04T12:52:57.171000Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.173691Z", "completed_at": "2025-03-04T12:52:57.173699Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019716978073120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_sepolia_account_id.6a6774d721", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.177063Z", "completed_at": "2025-03-04T12:52:57.193419Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.195644Z", "completed_at": "2025-03-04T12:52:57.195655Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024171829223632812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_sepolia_block_number.a0bf9a3f0f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.183876Z", "completed_at": "2025-03-04T12:52:57.196554Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.202847Z", "completed_at": "2025-03-04T12:52:57.202856Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027823686599731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_sepolia_block_timestamp.7330d8d33c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.188215Z", "completed_at": "2025-03-04T12:52:57.202152Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.204592Z", "completed_at": "2025-03-04T12:52:57.204602Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028903722763061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_sepolia_contract.fde67ea53e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.197255Z", "completed_at": "2025-03-04T12:52:57.205398Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.207962Z", "completed_at": "2025-03-04T12:52:57.207970Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024950265884399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_sepolia_event_name.7cdc353a34", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.209535Z", "completed_at": "2025-03-04T12:52:57.216710Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.226716Z", "completed_at": "2025-03-04T12:52:57.226731Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022977590560913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_sepolia_id.45c30d0895", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.217960Z", "completed_at": "2025-03-04T12:52:57.229376Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.235840Z", "completed_at": "2025-03-04T12:52:57.235850Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02712082862854004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_sepolia_owner.0774b6c4c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.222364Z", "completed_at": "2025-03-04T12:52:57.234550Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.236864Z", "completed_at": "2025-03-04T12:52:57.236873Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02299952507019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_arbitrum_sepolia_transaction_hash.f4dba09d54", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.230149Z", "completed_at": "2025-03-04T12:52:57.237766Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.240264Z", "completed_at": "2025-03-04T12:52:57.240271Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023056983947753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_account_created_arbitrum_sepolia_id.335484a5c5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_created_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.241171Z", "completed_at": "2025-03-04T12:52:57.249575Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.260015Z", "completed_at": "2025-03-04T12:52:57.260027Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02499556541442871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_accounts_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        block_timestamp as created_ts,\n        \"owner\",\n        CAST(\n            account_id as VARCHAR\n        ) as id\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_accounts_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.255373Z", "completed_at": "2025-03-04T12:52:57.262805Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.269313Z", "completed_at": "2025-03-04T12:52:57.269324Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02254939079284668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_created_base_mainnet_account_id__True__0.31cc3873de", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.250798Z", "completed_at": "2025-03-04T12:52:57.267863Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.270328Z", "completed_at": "2025-03-04T12:52:57.270339Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024234294891357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_account_created_base_mainnet_event_name__AccountCreated.c906cbec9d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.263575Z", "completed_at": "2025-03-04T12:52:57.271233Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.273766Z", "completed_at": "2025-03-04T12:52:57.273774Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02371525764465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_mainnet_account_id.2d9e573ba3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.274637Z", "completed_at": "2025-03-04T12:52:57.281229Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.283612Z", "completed_at": "2025-03-04T12:52:57.283620Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015048742294311523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_mainnet_block_number.089e467aa3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.284488Z", "completed_at": "2025-03-04T12:52:57.304095Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.306326Z", "completed_at": "2025-03-04T12:52:57.306339Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02742791175842285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_mainnet_block_timestamp.4e4344d68a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.288857Z", "completed_at": "2025-03-04T12:52:57.304891Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.307836Z", "completed_at": "2025-03-04T12:52:57.307844Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028133392333984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_mainnet_contract.d77785377c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.296663Z", "completed_at": "2025-03-04T12:52:57.307244Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.310011Z", "completed_at": "2025-03-04T12:52:57.310019Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027136802673339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_mainnet_event_name.0ab1553ed8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.311574Z", "completed_at": "2025-03-04T12:52:57.319100Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.325396Z", "completed_at": "2025-03-04T12:52:57.325411Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02005910873413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_mainnet_id.88dc5d9a3e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.320944Z", "completed_at": "2025-03-04T12:52:57.332394Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.338792Z", "completed_at": "2025-03-04T12:52:57.338801Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02265024185180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_mainnet_owner.1aca280221", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.327046Z", "completed_at": "2025-03-04T12:52:57.338142Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.340451Z", "completed_at": "2025-03-04T12:52:57.340480Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022823095321655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_mainnet_transaction_hash.0274c58381", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.333012Z", "completed_at": "2025-03-04T12:52:57.341277Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.348624Z", "completed_at": "2025-03-04T12:52:57.348634Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02902698516845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_account_created_base_mainnet_id.7e77a8a023", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_created_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.342576Z", "completed_at": "2025-03-04T12:52:57.351560Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.353992Z", "completed_at": "2025-03-04T12:52:57.354000Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016566753387451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_accounts_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        block_timestamp as created_ts,\n        \"owner\",\n        CAST(\n            account_id as VARCHAR\n        ) as id\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_accounts_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.354877Z", "completed_at": "2025-03-04T12:52:57.370773Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.372955Z", "completed_at": "2025-03-04T12:52:57.372968Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023554563522338867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_account_created_base_sepolia_event_name__AccountCreated.e5e94f342c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.359598Z", "completed_at": "2025-03-04T12:52:57.371437Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.374496Z", "completed_at": "2025-03-04T12:52:57.374503Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02434563636779785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_created_base_sepolia_account_id__True__0.72ab89cd5f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.366325Z", "completed_at": "2025-03-04T12:52:57.373913Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.376653Z", "completed_at": "2025-03-04T12:52:57.376661Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023418426513671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_sepolia_account_id.e2509a45ab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.378144Z", "completed_at": "2025-03-04T12:52:57.386103Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.392379Z", "completed_at": "2025-03-04T12:52:57.392389Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020482301712036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_sepolia_block_number.b9729c0627", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.387263Z", "completed_at": "2025-03-04T12:52:57.403947Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.405628Z", "completed_at": "2025-03-04T12:52:57.405638Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023062467575073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_sepolia_block_timestamp.1f03770bcc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.393291Z", "completed_at": "2025-03-04T12:52:57.406514Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.409045Z", "completed_at": "2025-03-04T12:52:57.409053Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0250394344329834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_sepolia_contract.1b1ec25344", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.399610Z", "completed_at": "2025-03-04T12:52:57.408382Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.411149Z", "completed_at": "2025-03-04T12:52:57.411159Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02574920654296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_sepolia_event_name.d7deee96b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.412706Z", "completed_at": "2025-03-04T12:52:57.423765Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.425701Z", "completed_at": "2025-03-04T12:52:57.425710Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018700838088989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_sepolia_id.7da01b5642", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.419299Z", "completed_at": "2025-03-04T12:52:57.427169Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.437244Z", "completed_at": "2025-03-04T12:52:57.437254Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026849985122680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_sepolia_owner.31f8eb801c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.427785Z", "completed_at": "2025-03-04T12:52:57.438446Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.440532Z", "completed_at": "2025-03-04T12:52:57.440541Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022145509719848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_created_base_sepolia_transaction_hash.6324af1adb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.433024Z", "completed_at": "2025-03-04T12:52:57.441375Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.443869Z", "completed_at": "2025-03-04T12:52:57.443876Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019652843475341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_account_created_base_sepolia_id.d2b0023315", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_created_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.444740Z", "completed_at": "2025-03-04T12:52:57.457134Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.459309Z", "completed_at": "2025-03-04T12:52:57.459319Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020396947860717773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_liq_account_arbitrum_mainnet", "compiled": true, "compiled_code": "with liquidation_events as (\n    select\n        account_id,\n        reward,\n        block_timestamp,\n        full_liquidation,\n        SUM(\n            case\n                when full_liquidation then 1\n                else 0\n            end\n        ) over (\n            partition by account_id\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as liquidation_id\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\n),\n\ncumulative_rewards as (\n    select\n        block_timestamp,\n        reward,\n        full_liquidation,\n        liquidation_id,\n        CAST(\n            account_id as text\n        ) as account_id,\n        SUM(\n    reward / 1e18\n) over (\n            partition by\n                account_id,\n                liquidation_id\n            order by\n                block_timestamp\n        ) as cumulative_reward,\n        ROW_NUMBER() over (\n            partition by\n                account_id,\n                liquidation_id\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        liquidation_events\n    order by\n        block_timestamp\n)\n\nselect\n    account_id,\n    block_timestamp as ts,\n    cumulative_reward as total_reward\nfrom\n    cumulative_rewards\nwhere\n    rn = 1", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_account_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.452541Z", "completed_at": "2025-03-04T12:52:57.460198Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.467027Z", "completed_at": "2025-03-04T12:52:57.467035Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024573802947998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_account_liquidation_attempt_arbitrum_mainnet_event_name__AccountLiquidationAttempt.d77be155b7", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountLiquidationAttempt'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.460812Z", "completed_at": "2025-03-04T12:52:57.472804Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.474894Z", "completed_at": "2025-03-04T12:52:57.474903Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024003028869628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_liquidation_attempt_arbitrum_mainnet_account_id__True__0.69e5c1f239", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.468125Z", "completed_at": "2025-03-04T12:52:57.475801Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.478294Z", "completed_at": "2025-03-04T12:52:57.478302Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019881725311279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_liquidation_attempt_arbitrum_mainnet_reward__True__0.0687f26a19", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.479173Z", "completed_at": "2025-03-04T12:52:57.491081Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.499682Z", "completed_at": "2025-03-04T12:52:57.499694Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026421546936035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_account_id.e5775f05d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.485944Z", "completed_at": "2025-03-04T12:52:57.497721Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.501182Z", "completed_at": "2025-03-04T12:52:57.501193Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024335145950317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_block_number.cce38fccf5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.492549Z", "completed_at": "2025-03-04T12:52:57.507446Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.509798Z", "completed_at": "2025-03-04T12:52:57.509809Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0254361629486084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_block_timestamp.384d202b30", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.502976Z", "completed_at": "2025-03-04T12:52:57.510678Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.513129Z", "completed_at": "2025-03-04T12:52:57.513137Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02144765853881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_contract.34132d3a0f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.514603Z", "completed_at": "2025-03-04T12:52:57.526541Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.532849Z", "completed_at": "2025-03-04T12:52:57.532862Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02396106719970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_event_name.03d3da6f51", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.520558Z", "completed_at": "2025-03-04T12:52:57.531593Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.533907Z", "completed_at": "2025-03-04T12:52:57.533914Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022756099700927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_full_liquidation.bca773a7d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect full_liquidation\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere full_liquidation is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.527244Z", "completed_at": "2025-03-04T12:52:57.534793Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.541374Z", "completed_at": "2025-03-04T12:52:57.541382Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02231574058532715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_id.3b273ee7cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.535362Z", "completed_at": "2025-03-04T12:52:57.543042Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.545583Z", "completed_at": "2025-03-04T12:52:57.545591Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019831180572509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_reward.db84ec60c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reward\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.547660Z", "completed_at": "2025-03-04T12:52:57.564589Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.566737Z", "completed_at": "2025-03-04T12:52:57.566750Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024470090866088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_mainnet_transaction_hash.8082a939fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.555037Z", "completed_at": "2025-03-04T12:52:57.566004Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.573024Z", "completed_at": "2025-03-04T12:52:57.573034Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029514551162719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_account_liquidation_attempt_arbitrum_mainnet_id.36625245e5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.561067Z", "completed_at": "2025-03-04T12:52:57.567686Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.574764Z", "completed_at": "2025-03-04T12:52:57.574771Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027836322784423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_liq_account_arbitrum_sepolia", "compiled": true, "compiled_code": "with liquidation_events as (\n    select\n        account_id,\n        reward,\n        block_timestamp,\n        full_liquidation,\n        SUM(\n            case\n                when full_liquidation then 1\n                else 0\n            end\n        ) over (\n            partition by account_id\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as liquidation_id\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\n),\n\ncumulative_rewards as (\n    select\n        block_timestamp,\n        reward,\n        full_liquidation,\n        liquidation_id,\n        CAST(\n            account_id as text\n        ) as account_id,\n        SUM(\n    reward / 1e18\n) over (\n            partition by\n                account_id,\n                liquidation_id\n            order by\n                block_timestamp\n        ) as cumulative_reward,\n        ROW_NUMBER() over (\n            partition by\n                account_id,\n                liquidation_id\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        liquidation_events\n    order by\n        block_timestamp\n)\n\nselect\n    account_id,\n    block_timestamp as ts,\n    cumulative_reward as total_reward\nfrom\n    cumulative_rewards\nwhere\n    rn = 1", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_account_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.568247Z", "completed_at": "2025-03-04T12:52:57.577132Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.579865Z", "completed_at": "2025-03-04T12:52:57.579873Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019858837127685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_account_liquidation_attempt_arbitrum_sepolia_event_name__AccountLiquidationAttempt.a9fed061a2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountLiquidationAttempt'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.581963Z", "completed_at": "2025-03-04T12:52:57.593920Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.602550Z", "completed_at": "2025-03-04T12:52:57.602561Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02619194984436035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_liquidation_attempt_arbitrum_sepolia_account_id__True__0.911c056a18", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.588200Z", "completed_at": "2025-03-04T12:52:57.601924Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.608856Z", "completed_at": "2025-03-04T12:52:57.608864Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030519962310791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_liquidation_attempt_arbitrum_sepolia_reward__True__0.70c89658c8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.594497Z", "completed_at": "2025-03-04T12:52:57.608223Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.610625Z", "completed_at": "2025-03-04T12:52:57.610633Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029983997344970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_account_id.d617ede5c8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.603604Z", "completed_at": "2025-03-04T12:52:57.611528Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.614144Z", "completed_at": "2025-03-04T12:52:57.614155Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021161556243896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_block_number.14f09936e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.618444Z", "completed_at": "2025-03-04T12:52:57.634758Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.636297Z", "completed_at": "2025-03-04T12:52:57.636309Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02358412742614746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_block_timestamp.070792744c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.624925Z", "completed_at": "2025-03-04T12:52:57.637254Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.645686Z", "completed_at": "2025-03-04T12:52:57.645696Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0307157039642334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_contract.4fee3320ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.629832Z", "completed_at": "2025-03-04T12:52:57.643069Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.646683Z", "completed_at": "2025-03-04T12:52:57.646690Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030260086059570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_event_name.531495d577", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.637897Z", "completed_at": "2025-03-04T12:52:57.648982Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.651560Z", "completed_at": "2025-03-04T12:52:57.651568Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027520179748535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_full_liquidation.06f23e5311", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect full_liquidation\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere full_liquidation is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.653051Z", "completed_at": "2025-03-04T12:52:57.664397Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.670428Z", "completed_at": "2025-03-04T12:52:57.670439Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022899866104125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_id.16e1d1d778", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.659837Z", "completed_at": "2025-03-04T12:52:57.671997Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.678699Z", "completed_at": "2025-03-04T12:52:57.678708Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027910709381103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_reward.22a482d5b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reward\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.665809Z", "completed_at": "2025-03-04T12:52:57.677925Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.680422Z", "completed_at": "2025-03-04T12:52:57.680430Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028136491775512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_arbitrum_sepolia_transaction_hash.e3f511ad1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.673553Z", "completed_at": "2025-03-04T12:52:57.681255Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.683874Z", "completed_at": "2025-03-04T12:52:57.683884Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01884746551513672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_account_liquidation_attempt_arbitrum_sepolia_id.2e20bbf35e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.685409Z", "completed_at": "2025-03-04T12:52:57.691790Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.704223Z", "completed_at": "2025-03-04T12:52:57.704235Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024689912796020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_liq_account_base_mainnet", "compiled": true, "compiled_code": "with liquidation_events as (\n    select\n        account_id,\n        reward,\n        block_timestamp,\n        full_liquidation,\n        SUM(\n            case\n                when full_liquidation then 1\n                else 0\n            end\n        ) over (\n            partition by account_id\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as liquidation_id\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\n),\n\ncumulative_rewards as (\n    select\n        block_timestamp,\n        reward,\n        full_liquidation,\n        liquidation_id,\n        CAST(\n            account_id as text\n        ) as account_id,\n        SUM(\n    reward / 1e18\n) over (\n            partition by\n                account_id,\n                liquidation_id\n            order by\n                block_timestamp\n        ) as cumulative_reward,\n        ROW_NUMBER() over (\n            partition by\n                account_id,\n                liquidation_id\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        liquidation_events\n    order by\n        block_timestamp\n)\n\nselect\n    account_id,\n    block_timestamp as ts,\n    cumulative_reward as total_reward\nfrom\n    cumulative_rewards\nwhere\n    rn = 1", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_account_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.693013Z", "completed_at": "2025-03-04T12:52:57.711782Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.713792Z", "completed_at": "2025-03-04T12:52:57.713804Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029117107391357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_account_liquidation_attempt_base_mainnet_event_name__AccountLiquidationAttempt.aeb7d6db9c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountLiquidationAttempt'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.699593Z", "completed_at": "2025-03-04T12:52:57.713055Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.715883Z", "completed_at": "2025-03-04T12:52:57.715890Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02691030502319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_liquidation_attempt_base_mainnet_account_id__True__0.1b7d106a7e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.706863Z", "completed_at": "2025-03-04T12:52:57.714707Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.717444Z", "completed_at": "2025-03-04T12:52:57.717451Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0252077579498291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_liquidation_attempt_base_mainnet_reward__True__0.cb285aadec", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.718363Z", "completed_at": "2025-03-04T12:52:57.726046Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.728490Z", "completed_at": "2025-03-04T12:52:57.728501Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016194581985473633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_account_id.b9af0ad259", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.729372Z", "completed_at": "2025-03-04T12:52:57.746765Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.748860Z", "completed_at": "2025-03-04T12:52:57.748873Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02504134178161621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_block_number.eb82068b1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.734928Z", "completed_at": "2025-03-04T12:52:57.748242Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.750926Z", "completed_at": "2025-03-04T12:52:57.750933Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025655269622802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_block_timestamp.8bb23c25bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.740487Z", "completed_at": "2025-03-04T12:52:57.749759Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.752437Z", "completed_at": "2025-03-04T12:52:57.752445Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02531123161315918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_contract.52c72e7f83", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.753389Z", "completed_at": "2025-03-04T12:52:57.761589Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.767979Z", "completed_at": "2025-03-04T12:52:57.767988Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020656824111938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_event_name.bdd4a2d793", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.763365Z", "completed_at": "2025-03-04T12:52:57.779289Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.781602Z", "completed_at": "2025-03-04T12:52:57.781614Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022856950759887695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_full_liquidation.13fc102881", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect full_liquidation\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere full_liquidation is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.769528Z", "completed_at": "2025-03-04T12:52:57.780976Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.783695Z", "completed_at": "2025-03-04T12:52:57.783703Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023505449295043945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_id.f0a38fed0b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.774937Z", "completed_at": "2025-03-04T12:52:57.782529Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.785240Z", "completed_at": "2025-03-04T12:52:57.785247Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02318406105041504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_reward.c18396dc96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reward\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.786183Z", "completed_at": "2025-03-04T12:52:57.793883Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.796286Z", "completed_at": "2025-03-04T12:52:57.796298Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01623988151550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_mainnet_transaction_hash.70575855b6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.797188Z", "completed_at": "2025-03-04T12:52:57.813931Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.815895Z", "completed_at": "2025-03-04T12:52:57.815905Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02425551414489746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_account_liquidation_attempt_base_mainnet_id.4ca8a36246", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.804109Z", "completed_at": "2025-03-04T12:52:57.814496Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.817377Z", "completed_at": "2025-03-04T12:52:57.817384Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024272680282592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_liq_account_base_sepolia", "compiled": true, "compiled_code": "with liquidation_events as (\n    select\n        account_id,\n        reward,\n        block_timestamp,\n        full_liquidation,\n        SUM(\n            case\n                when full_liquidation then 1\n                else 0\n            end\n        ) over (\n            partition by account_id\n            order by\n                block_timestamp\n            rows between unbounded preceding\n            and current row\n        ) as liquidation_id\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\n),\n\ncumulative_rewards as (\n    select\n        block_timestamp,\n        reward,\n        full_liquidation,\n        liquidation_id,\n        CAST(\n            account_id as text\n        ) as account_id,\n        SUM(\n    reward / 1e18\n) over (\n            partition by\n                account_id,\n                liquidation_id\n            order by\n                block_timestamp\n        ) as cumulative_reward,\n        ROW_NUMBER() over (\n            partition by\n                account_id,\n                liquidation_id\n            order by\n                block_timestamp desc\n        ) as rn\n    from\n        liquidation_events\n    order by\n        block_timestamp\n)\n\nselect\n    account_id,\n    block_timestamp as ts,\n    cumulative_reward as total_reward\nfrom\n    cumulative_rewards\nwhere\n    rn = 1", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_account_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.808515Z", "completed_at": "2025-03-04T12:52:57.816767Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.823772Z", "completed_at": "2025-03-04T12:52:57.823785Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028833627700805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_account_liquidation_attempt_base_sepolia_event_name__AccountLiquidationAttempt.7e035fbfbd", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AccountLiquidationAttempt'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.818298Z", "completed_at": "2025-03-04T12:52:57.827049Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.829637Z", "completed_at": "2025-03-04T12:52:57.829645Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016545772552490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_liquidation_attempt_base_sepolia_account_id__True__0.d9d7f88802", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.831088Z", "completed_at": "2025-03-04T12:52:57.849475Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.852159Z", "completed_at": "2025-03-04T12:52:57.852169Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026666879653930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_account_liquidation_attempt_base_sepolia_reward__True__0.d1fe263182", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.837329Z", "completed_at": "2025-03-04T12:52:57.850384Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.853068Z", "completed_at": "2025-03-04T12:52:57.853076Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02546381950378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_account_id.72dba0b474", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.842140Z", "completed_at": "2025-03-04T12:52:57.851576Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.858588Z", "completed_at": "2025-03-04T12:52:57.858597Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02976369857788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_block_number.c00ff06028", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.853957Z", "completed_at": "2025-03-04T12:52:57.861811Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.864342Z", "completed_at": "2025-03-04T12:52:57.864353Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01562786102294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_block_timestamp.b212643602", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.872210Z", "completed_at": "2025-03-04T12:52:57.882623Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.884557Z", "completed_at": "2025-03-04T12:52:57.884566Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021596193313598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_event_name.5a524744d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.867700Z", "completed_at": "2025-03-04T12:52:57.883180Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.886036Z", "completed_at": "2025-03-04T12:52:57.886046Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0237274169921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_contract.5a7ac10d9d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.876958Z", "completed_at": "2025-03-04T12:52:57.885484Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.892256Z", "completed_at": "2025-03-04T12:52:57.892264Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028637409210205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_full_liquidation.4544a98926", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect full_liquidation\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere full_liquidation is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.886941Z", "completed_at": "2025-03-04T12:52:57.894668Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.897163Z", "completed_at": "2025-03-04T12:52:57.897171Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01574087142944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_id.fa21a229e8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.899262Z", "completed_at": "2025-03-04T12:52:57.917167Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.919207Z", "completed_at": "2025-03-04T12:52:57.919222Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025352001190185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_reward.41da25d087", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reward\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.907060Z", "completed_at": "2025-03-04T12:52:57.918570Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.925569Z", "completed_at": "2025-03-04T12:52:57.925581Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029825687408447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_account_liquidation_attempt_base_sepolia_transaction_hash.18ed9c33a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.912650Z", "completed_at": "2025-03-04T12:52:57.920107Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.927262Z", "completed_at": "2025-03-04T12:52:57.927269Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0293276309967041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_account_liquidation_attempt_base_sepolia_id.64895ed40b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.920718Z", "completed_at": "2025-03-04T12:52:57.930353Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.932895Z", "completed_at": "2025-03-04T12:52:57.932904Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021114587783813477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_collateral_modified_arbitrum_mainnet_event_name__CollateralModified.ce058b817d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'CollateralModified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.934342Z", "completed_at": "2025-03-04T12:52:57.953254Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.955969Z", "completed_at": "2025-03-04T12:52:57.955980Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027060508728027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_collateral_modified_arbitrum_mainnet_account_id__True__0.f432eac521", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.940732Z", "completed_at": "2025-03-04T12:52:57.954150Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.956908Z", "completed_at": "2025-03-04T12:52:57.956918Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025986909866333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_collateral_modified_arbitrum_mainnet_collateral_id__True__0.d504bf8da4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.945800Z", "completed_at": "2025-03-04T12:52:57.954790Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.957816Z", "completed_at": "2025-03-04T12:52:57.957824Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025666475296020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_account_id.8fb1349af5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.958696Z", "completed_at": "2025-03-04T12:52:57.967103Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.969518Z", "completed_at": "2025-03-04T12:52:57.969528Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01703166961669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_block_number.553bfecd04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.970974Z", "completed_at": "2025-03-04T12:52:57.986930Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.989530Z", "completed_at": "2025-03-04T12:52:57.989544Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023921489715576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_block_timestamp.3959a198d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.975980Z", "completed_at": "2025-03-04T12:52:57.988335Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.994863Z", "completed_at": "2025-03-04T12:52:57.994876Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028582096099853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_collateral_id.b111831174", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere collateral_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.981570Z", "completed_at": "2025-03-04T12:52:57.988941Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:57.995884Z", "completed_at": "2025-03-04T12:52:57.995891Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028305768966674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_contract.4c9655d0d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:57.990430Z", "completed_at": "2025-03-04T12:52:57.998267Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.000822Z", "completed_at": "2025-03-04T12:52:58.000830Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014678478240966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_event_name.e165b98af5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.004735Z", "completed_at": "2025-03-04T12:52:58.022080Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.028358Z", "completed_at": "2025-03-04T12:52:58.028371Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028959274291992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_id.b7548d2e89", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.016508Z", "completed_at": "2025-03-04T12:52:58.027081Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.029413Z", "completed_at": "2025-03-04T12:52:58.029423Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027852773666381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_transaction_hash.db6cc05c85", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.011273Z", "completed_at": "2025-03-04T12:52:58.027809Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.030340Z", "completed_at": "2025-03-04T12:52:58.030348Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030256986618041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_mainnet_sender.8b5f369cc9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.022841Z", "completed_at": "2025-03-04T12:52:58.031151Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.033799Z", "completed_at": "2025-03-04T12:52:58.033806Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018201112747192383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_collateral_modified_arbitrum_mainnet_id.52f69df109", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.039625Z", "completed_at": "2025-03-04T12:52:58.057838Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.064288Z", "completed_at": "2025-03-04T12:52:58.064301Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0298311710357666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_collateral_modified_arbitrum_sepolia_event_name__CollateralModified.323c4011f3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'CollateralModified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.044766Z", "completed_at": "2025-03-04T12:52:58.058403Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.065307Z", "completed_at": "2025-03-04T12:52:58.065315Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030115604400634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_collateral_modified_arbitrum_sepolia_account_id__True__0.57dea412fc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.049812Z", "completed_at": "2025-03-04T12:52:58.063574Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.066316Z", "completed_at": "2025-03-04T12:52:58.066325Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030498027801513672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_collateral_modified_arbitrum_sepolia_collateral_id__True__0.186c371865", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.059111Z", "completed_at": "2025-03-04T12:52:58.067889Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.070629Z", "completed_at": "2025-03-04T12:52:58.070637Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03173518180847168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_account_id.c371b3cb29", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.075194Z", "completed_at": "2025-03-04T12:52:58.097897Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.100382Z", "completed_at": "2025-03-04T12:52:58.100396Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030605792999267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_block_number.c21551e453", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.080810Z", "completed_at": "2025-03-04T12:52:58.098497Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.101345Z", "completed_at": "2025-03-04T12:52:58.101353Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029963970184326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_block_timestamp.04b9f9b01a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.091594Z", "completed_at": "2025-03-04T12:52:58.099256Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.102236Z", "completed_at": "2025-03-04T12:52:58.102247Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0222780704498291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_contract.ee416b6a9d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.085657Z", "completed_at": "2025-03-04T12:52:58.099840Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.103155Z", "completed_at": "2025-03-04T12:52:58.103162Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031162261962890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_collateral_id.49ab2aa3b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere collateral_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.111591Z", "completed_at": "2025-03-04T12:52:58.130702Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.132920Z", "completed_at": "2025-03-04T12:52:58.132932Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02630615234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_event_name.ce95828591", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.116502Z", "completed_at": "2025-03-04T12:52:58.131597Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.133927Z", "completed_at": "2025-03-04T12:52:58.133936Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026663541793823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_id.f31b903360", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.121099Z", "completed_at": "2025-03-04T12:52:58.132230Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.135398Z", "completed_at": "2025-03-04T12:52:58.135409Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027530193328857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_sender.a1f5df03f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.125603Z", "completed_at": "2025-03-04T12:52:58.134819Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.137741Z", "completed_at": "2025-03-04T12:52:58.137749Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02920675277709961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_arbitrum_sepolia_transaction_hash.bdc432f4e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.149204Z", "completed_at": "2025-03-04T12:52:58.166123Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.168289Z", "completed_at": "2025-03-04T12:52:58.168301Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028468608856201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_collateral_modified_base_mainnet_event_name__CollateralModified.a5e57f2d75", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'CollateralModified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.156504Z", "completed_at": "2025-03-04T12:52:58.167000Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.169823Z", "completed_at": "2025-03-04T12:52:58.169834Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028661727905273438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_collateral_modified_base_mainnet_account_id__True__0.9f7c28c3fd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.144311Z", "completed_at": "2025-03-04T12:52:58.167703Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.170741Z", "completed_at": "2025-03-04T12:52:58.170748Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03154349327087402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_collateral_modified_arbitrum_sepolia_id.21db106d40", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.161377Z", "completed_at": "2025-03-04T12:52:58.169214Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.172311Z", "completed_at": "2025-03-04T12:52:58.172319Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029318809509277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_collateral_modified_base_mainnet_synth_market_id__True__0.d556e7848d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.179696Z", "completed_at": "2025-03-04T12:52:58.199507Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.201525Z", "completed_at": "2025-03-04T12:52:58.201538Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026953935623168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_account_id.cdccf3f2af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.189744Z", "completed_at": "2025-03-04T12:52:58.202634Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.205296Z", "completed_at": "2025-03-04T12:52:58.205305Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028719186782836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_block_timestamp.dba3f4ea26", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.185160Z", "completed_at": "2025-03-04T12:52:58.203201Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.206237Z", "completed_at": "2025-03-04T12:52:58.206245Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030286312103271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_block_number.9a27b3b231", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.194231Z", "completed_at": "2025-03-04T12:52:58.204629Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.207797Z", "completed_at": "2025-03-04T12:52:58.207805Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029995203018188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_contract.c11139c863", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.212608Z", "completed_at": "2025-03-04T12:52:58.225147Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.235195Z", "completed_at": "2025-03-04T12:52:58.235209Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02821803092956543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_event_name.ea66af17fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.220354Z", "completed_at": "2025-03-04T12:52:58.236310Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.239062Z", "completed_at": "2025-03-04T12:52:58.239074Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02788543701171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_id.f24bcc6b1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.225889Z", "completed_at": "2025-03-04T12:52:58.237119Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.240003Z", "completed_at": "2025-03-04T12:52:58.240010Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02814030647277832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_sender.b40c55b7ee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.230382Z", "completed_at": "2025-03-04T12:52:58.238477Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.241568Z", "completed_at": "2025-03-04T12:52:58.241576Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024023771286010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_synth_market_id.d41b8065af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.246381Z", "completed_at": "2025-03-04T12:52:58.254051Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.271581Z", "completed_at": "2025-03-04T12:52:58.271596Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03082752227783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_mainnet_transaction_hash.3d3881c53b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.266547Z", "completed_at": "2025-03-04T12:52:58.273151Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.275680Z", "completed_at": "2025-03-04T12:52:58.275691Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024394512176513672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_collateral_modified_base_sepolia_account_id__True__0.4061e8095e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.261663Z", "completed_at": "2025-03-04T12:52:58.274383Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.277237Z", "completed_at": "2025-03-04T12:52:58.277247Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03159523010253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_collateral_modified_base_sepolia_event_name__CollateralModified.35bbd5a11f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'CollateralModified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.254625Z", "completed_at": "2025-03-04T12:52:58.274977Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.278161Z", "completed_at": "2025-03-04T12:52:58.278169Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03317761421203613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_collateral_modified_base_mainnet_id.311ce0d794", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.282331Z", "completed_at": "2025-03-04T12:52:58.290449Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.301188Z", "completed_at": "2025-03-04T12:52:58.301203Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024757862091064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_collateral_modified_base_sepolia_synth_market_id__True__0.e6426004ec", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.291645Z", "completed_at": "2025-03-04T12:52:58.310005Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.311665Z", "completed_at": "2025-03-04T12:52:58.311678Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030081748962402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_account_id.41a4ca06b6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.296525Z", "completed_at": "2025-03-04T12:52:58.312632Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.315089Z", "completed_at": "2025-03-04T12:52:58.315099Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027391910552978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_block_number.5818313783", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.302294Z", "completed_at": "2025-03-04T12:52:58.313202Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.316020Z", "completed_at": "2025-03-04T12:52:58.316027Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027615070343017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_block_timestamp.a0b63e8833", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.316899Z", "completed_at": "2025-03-04T12:52:58.326030Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.332696Z", "completed_at": "2025-03-04T12:52:58.332710Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021932601928710938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_contract.c669409e90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.326663Z", "completed_at": "2025-03-04T12:52:58.342721Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.344590Z", "completed_at": "2025-03-04T12:52:58.344602Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022856473922729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_event_name.05505fea35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.333746Z", "completed_at": "2025-03-04T12:52:58.346245Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.348744Z", "completed_at": "2025-03-04T12:52:58.348755Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024071455001831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_id.0306c59b13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.338379Z", "completed_at": "2025-03-04T12:52:58.346859Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.349652Z", "completed_at": "2025-03-04T12:52:58.349660Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024319887161254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_sender.c5a5dbc794", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.351317Z", "completed_at": "2025-03-04T12:52:58.359533Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.367932Z", "completed_at": "2025-03-04T12:52:58.367944Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02240753173828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_synth_market_id.6b585142fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.360147Z", "completed_at": "2025-03-04T12:52:58.376760Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.379048Z", "completed_at": "2025-03-04T12:52:58.379060Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028679609298706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_collateral_modified_base_sepolia_transaction_hash.ccfe215417", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.368980Z", "completed_at": "2025-03-04T12:52:58.378477Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.381219Z", "completed_at": "2025-03-04T12:52:58.381226Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02307724952697754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_collateral_modified_base_sepolia_id.df76a33926", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.373337Z", "completed_at": "2025-03-04T12:52:58.380007Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.382825Z", "completed_at": "2025-03-04T12:52:58.382834Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023985624313354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_interest_charged_arbitrum_mainnet", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp,\n    block_number,\n    transaction_hash,\n    contract,\n    event_name,\n    account_id,\n    \n    interest / 1e18\n as interest\nfrom\n    \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.386244Z", "completed_at": "2025-03-04T12:52:58.394386Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.404786Z", "completed_at": "2025-03-04T12:52:58.404799Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024357080459594727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_interest_charged_arbitrum_mainnet_event_name__InterestCharged.5bdeefd72e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestCharged'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.400416Z", "completed_at": "2025-03-04T12:52:58.413253Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.415864Z", "completed_at": "2025-03-04T12:52:58.415874Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02422475814819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_mainnet_account_id.0fea13802b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.395004Z", "completed_at": "2025-03-04T12:52:58.413821Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.416756Z", "completed_at": "2025-03-04T12:52:58.416763Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03188276290893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_charged_arbitrum_mainnet_account_id__True__0.7c883f5e3f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.405918Z", "completed_at": "2025-03-04T12:52:58.415261Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.418217Z", "completed_at": "2025-03-04T12:52:58.418224Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02524590492248535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_mainnet_block_number.0461f85304", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.420359Z", "completed_at": "2025-03-04T12:52:58.428365Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.434607Z", "completed_at": "2025-03-04T12:52:58.434617Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020102500915527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_mainnet_block_timestamp.c72b9e433c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.430123Z", "completed_at": "2025-03-04T12:52:58.445282Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.448054Z", "completed_at": "2025-03-04T12:52:58.448063Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022422313690185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_mainnet_contract.0558bb2329", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.435514Z", "completed_at": "2025-03-04T12:52:58.446869Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.449551Z", "completed_at": "2025-03-04T12:52:58.449558Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023283004760742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_mainnet_event_name.a2ddfe6aab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.439857Z", "completed_at": "2025-03-04T12:52:58.447492Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.450399Z", "completed_at": "2025-03-04T12:52:58.450410Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02341461181640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_mainnet_id.0336fb1845", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.451985Z", "completed_at": "2025-03-04T12:52:58.460351Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.462775Z", "completed_at": "2025-03-04T12:52:58.462787Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01676774024963379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_mainnet_transaction_hash.c6a422f072", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.474487Z", "completed_at": "2025-03-04T12:52:58.480598Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.483065Z", "completed_at": "2025-03-04T12:52:58.483076Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02345585823059082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_interest_charged_arbitrum_sepolia_event_name__InterestCharged.bec7912ee9", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestCharged'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.470935Z", "completed_at": "2025-03-04T12:52:58.481903Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.484602Z", "completed_at": "2025-03-04T12:52:58.484610Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025693178176879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_interest_charged_arbitrum_sepolia", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp,\n    block_number,\n    transaction_hash,\n    contract,\n    event_name,\n    account_id,\n    \n    interest / 1e18\n as interest\nfrom\n    \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.463702Z", "completed_at": "2025-03-04T12:52:58.482457Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.485482Z", "completed_at": "2025-03-04T12:52:58.485492Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02742791175842285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_interest_charged_arbitrum_mainnet_id.25564fae9f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_charged_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.487061Z", "completed_at": "2025-03-04T12:52:58.496742Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.503213Z", "completed_at": "2025-03-04T12:52:58.503229Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022124290466308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_charged_arbitrum_sepolia_account_id__True__0.cc700c2056", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.498531Z", "completed_at": "2025-03-04T12:52:58.516115Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.518295Z", "completed_at": "2025-03-04T12:52:58.518307Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024493694305419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_sepolia_account_id.a1ec08f106", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.510768Z", "completed_at": "2025-03-04T12:52:58.517003Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.519782Z", "completed_at": "2025-03-04T12:52:58.519790Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02437591552734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_sepolia_block_timestamp.9b89e6d1ae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.504354Z", "completed_at": "2025-03-04T12:52:58.519171Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.521968Z", "completed_at": "2025-03-04T12:52:58.521976Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02721858024597168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_sepolia_block_number.78e1c8865d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.523451Z", "completed_at": "2025-03-04T12:52:58.532352Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.542687Z", "completed_at": "2025-03-04T12:52:58.542700Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025264978408813477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_sepolia_contract.7ba1d62fc1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.532966Z", "completed_at": "2025-03-04T12:52:58.549394Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.552041Z", "completed_at": "2025-03-04T12:52:58.552050Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023865461349487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_sepolia_event_name.47398c58cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.538241Z", "completed_at": "2025-03-04T12:52:58.550097Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.552961Z", "completed_at": "2025-03-04T12:52:58.552970Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023309707641601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_sepolia_id.1c700fc86b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.543851Z", "completed_at": "2025-03-04T12:52:58.550820Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.553851Z", "completed_at": "2025-03-04T12:52:58.553861Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022830724716186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_arbitrum_sepolia_transaction_hash.b7c3eef8f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.557278Z", "completed_at": "2025-03-04T12:52:58.567618Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.577054Z", "completed_at": "2025-03-04T12:52:58.577071Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02584671974182129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_interest_charged_arbitrum_sepolia_id.cba3f293a0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_charged_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.568842Z", "completed_at": "2025-03-04T12:52:58.583815Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.586387Z", "completed_at": "2025-03-04T12:52:58.586399Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022325754165649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_interest_charged_base_mainnet", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp,\n    block_number,\n    transaction_hash,\n    contract,\n    event_name,\n    account_id,\n    \n    interest / 1e18\n as interest\nfrom\n    \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.572533Z", "completed_at": "2025-03-04T12:52:58.584381Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.587310Z", "completed_at": "2025-03-04T12:52:58.587317Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0224301815032959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_interest_charged_base_mainnet_event_name__InterestCharged.92bd4d647b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestCharged'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.578079Z", "completed_at": "2025-03-04T12:52:58.585806Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.588803Z", "completed_at": "2025-03-04T12:52:58.588811Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023248910903930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_charged_base_mainnet_account_id__True__0.a3ec3de479", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.591335Z", "completed_at": "2025-03-04T12:52:58.599308Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.605600Z", "completed_at": "2025-03-04T12:52:58.605612Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020619630813598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_mainnet_account_id.9cea8c57e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.601087Z", "completed_at": "2025-03-04T12:52:58.618079Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.620366Z", "completed_at": "2025-03-04T12:52:58.620376Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02384328842163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_mainnet_block_number.634b5a2ca3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.606683Z", "completed_at": "2025-03-04T12:52:58.619810Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.622437Z", "completed_at": "2025-03-04T12:52:58.622447Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02526712417602539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_mainnet_block_timestamp.c006ab16a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.612891Z", "completed_at": "2025-03-04T12:52:58.621231Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.624019Z", "completed_at": "2025-03-04T12:52:58.624029Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026075363159179688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_mainnet_contract.637ff31ac5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.624922Z", "completed_at": "2025-03-04T12:52:58.632504Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.634897Z", "completed_at": "2025-03-04T12:52:58.634906Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016065359115600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_mainnet_event_name.d0c6828a2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.635782Z", "completed_at": "2025-03-04T12:52:58.651701Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.653876Z", "completed_at": "2025-03-04T12:52:58.653888Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023808717727661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_mainnet_id.a4394853e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.641136Z", "completed_at": "2025-03-04T12:52:58.653117Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.656024Z", "completed_at": "2025-03-04T12:52:58.656031Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02431344985961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_mainnet_transaction_hash.82d6f4539b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.646948Z", "completed_at": "2025-03-04T12:52:58.655407Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.664318Z", "completed_at": "2025-03-04T12:52:58.664330Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030791282653808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_interest_charged_base_mainnet_id.849ecb5e38", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_charged_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.658110Z", "completed_at": "2025-03-04T12:52:58.668072Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.670499Z", "completed_at": "2025-03-04T12:52:58.670508Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018136262893676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_interest_charged_base_sepolia", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp,\n    block_number,\n    transaction_hash,\n    contract,\n    event_name,\n    account_id,\n    \n    interest / 1e18\n as interest\nfrom\n    \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.671360Z", "completed_at": "2025-03-04T12:52:58.688187Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.690792Z", "completed_at": "2025-03-04T12:52:58.690806Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024958133697509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_interest_charged_base_sepolia_event_name__InterestCharged.b607f55a72", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestCharged'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.682573Z", "completed_at": "2025-03-04T12:52:58.689013Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.691721Z", "completed_at": "2025-03-04T12:52:58.691729Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022565841674804688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_sepolia_account_id.ec1ea115af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.676939Z", "completed_at": "2025-03-04T12:52:58.689594Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.692613Z", "completed_at": "2025-03-04T12:52:58.692624Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025359630584716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_charged_base_sepolia_account_id__True__0.7595935b71", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.693487Z", "completed_at": "2025-03-04T12:52:58.701116Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.703622Z", "completed_at": "2025-03-04T12:52:58.703633Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01629042625427246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_sepolia_block_number.e9b7b9cd80", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.705700Z", "completed_at": "2025-03-04T12:52:58.722703Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.725679Z", "completed_at": "2025-03-04T12:52:58.725693Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025294065475463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_sepolia_block_timestamp.6723ccf2f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.711147Z", "completed_at": "2025-03-04T12:52:58.723622Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.726620Z", "completed_at": "2025-03-04T12:52:58.726627Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024989604949951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_sepolia_contract.ad4bd5bb4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.717492Z", "completed_at": "2025-03-04T12:52:58.725052Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.732425Z", "completed_at": "2025-03-04T12:52:58.732438Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030228853225708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_sepolia_event_name.7088270e38", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.727520Z", "completed_at": "2025-03-04T12:52:58.736254Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.738705Z", "completed_at": "2025-03-04T12:52:58.738713Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016987085342407227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_sepolia_id.a8d5a81503", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.740758Z", "completed_at": "2025-03-04T12:52:58.756037Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.758690Z", "completed_at": "2025-03-04T12:52:58.758701Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023164033889770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_charged_base_sepolia_transaction_hash.7d20550a93", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.746113Z", "completed_at": "2025-03-04T12:52:58.757454Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.767023Z", "completed_at": "2025-03-04T12:52:58.767035Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030286550521850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_interest_charged_base_sepolia_id.7023b7407d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_charged_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.750402Z", "completed_at": "2025-03-04T12:52:58.758078Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.767983Z", "completed_at": "2025-03-04T12:52:58.767992Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030600547790527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_interest_rate_updated_arbitrum_mainnet_event_name__InterestRateUpdated.e279adef88", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestRateUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.759620Z", "completed_at": "2025-03-04T12:52:58.770451Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.773153Z", "completed_at": "2025-03-04T12:52:58.773162Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018065690994262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_rate_updated_arbitrum_mainnet_interest_rate__True__0.85f9532793", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest_rate >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.782511Z", "completed_at": "2025-03-04T12:52:58.794387Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.801374Z", "completed_at": "2025-03-04T12:52:58.801391Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029070377349853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_mainnet_block_number.f1b7f275c8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.777105Z", "completed_at": "2025-03-04T12:52:58.794997Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.802478Z", "completed_at": "2025-03-04T12:52:58.802487Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030748844146728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_rate_updated_arbitrum_mainnet_super_market_id__True__0.345c2bacf1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not super_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.788152Z", "completed_at": "2025-03-04T12:52:58.795645Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.803371Z", "completed_at": "2025-03-04T12:52:58.803381Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029476165771484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_mainnet_block_timestamp.b38866df62", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.796229Z", "completed_at": "2025-03-04T12:52:58.805771Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.808483Z", "completed_at": "2025-03-04T12:52:58.808494Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02115941047668457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_mainnet_contract.53bd3e715f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.812617Z", "completed_at": "2025-03-04T12:52:58.830834Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.837033Z", "completed_at": "2025-03-04T12:52:58.837046Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030000686645507812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_mainnet_event_name.527da57e0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.817717Z", "completed_at": "2025-03-04T12:52:58.836248Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.838825Z", "completed_at": "2025-03-04T12:52:58.838836Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031085729598999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_mainnet_id.4d8f77e23f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.825155Z", "completed_at": "2025-03-04T12:52:58.838141Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.840991Z", "completed_at": "2025-03-04T12:52:58.840998Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03175711631774902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_mainnet_interest_rate.4a70cee831", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.831626Z", "completed_at": "2025-03-04T12:52:58.839680Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.842582Z", "completed_at": "2025-03-04T12:52:58.842589Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018237590789794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_mainnet_super_market_id.0209c885e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect super_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere super_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.848433Z", "completed_at": "2025-03-04T12:52:58.863940Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.871667Z", "completed_at": "2025-03-04T12:52:58.871679Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028386354446411133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_mainnet_transaction_hash.881fd09199", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.854338Z", "completed_at": "2025-03-04T12:52:58.872584Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.875160Z", "completed_at": "2025-03-04T12:52:58.875168Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03055572509765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_interest_rate_updated_arbitrum_mainnet_id.c21a36f767", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_interest_rate_updated_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.859393Z", "completed_at": "2025-03-04T12:52:58.873185Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.876044Z", "completed_at": "2025-03-04T12:52:58.876054Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02950286865234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_interest_rate_updated_arbitrum_sepolia_event_name__InterestRateUpdated.80b23fe264", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestRateUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.864843Z", "completed_at": "2025-03-04T12:52:58.873895Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.876945Z", "completed_at": "2025-03-04T12:52:58.876952Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02920818328857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_rate_updated_arbitrum_sepolia_interest_rate__True__0.4bdf5b571d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest_rate >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.882975Z", "completed_at": "2025-03-04T12:52:58.904307Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.907392Z", "completed_at": "2025-03-04T12:52:58.907403Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029738426208496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_rate_updated_arbitrum_sepolia_super_market_id__True__0.04014a3a13", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not super_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.894915Z", "completed_at": "2025-03-04T12:52:58.905641Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.908358Z", "completed_at": "2025-03-04T12:52:58.908369Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02679157257080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_sepolia_block_timestamp.b58ae2ae86", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.899887Z", "completed_at": "2025-03-04T12:52:58.906216Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.909277Z", "completed_at": "2025-03-04T12:52:58.909284Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027052879333496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_sepolia_contract.42f86c5d97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.890074Z", "completed_at": "2025-03-04T12:52:58.906780Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.910164Z", "completed_at": "2025-03-04T12:52:58.910175Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029200077056884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_sepolia_block_number.e587994ace", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.923737Z", "completed_at": "2025-03-04T12:52:58.940405Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.942424Z", "completed_at": "2025-03-04T12:52:58.942435Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02816033363342285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_sepolia_id.4c2bfc9fe7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.918676Z", "completed_at": "2025-03-04T12:52:58.941171Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.943949Z", "completed_at": "2025-03-04T12:52:58.943956Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03025674819946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_sepolia_event_name.c050b16b14", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.930403Z", "completed_at": "2025-03-04T12:52:58.941772Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.944861Z", "completed_at": "2025-03-04T12:52:58.944872Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02989983558654785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_sepolia_interest_rate.2aa5f0de8e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.935039Z", "completed_at": "2025-03-04T12:52:58.943327Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.946514Z", "completed_at": "2025-03-04T12:52:58.946524Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030918359756469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_sepolia_super_market_id.3b90bcba60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect super_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere super_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.954070Z", "completed_at": "2025-03-04T12:52:58.976434Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.978920Z", "completed_at": "2025-03-04T12:52:58.978933Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03026413917541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_arbitrum_sepolia_transaction_hash.2ffe4c98dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.960211Z", "completed_at": "2025-03-04T12:52:58.977670Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.980411Z", "completed_at": "2025-03-04T12:52:58.980419Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030418872833251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_interest_rate_updated_arbitrum_sepolia_id.e47b087fd4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_interest_rate_updated_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.964737Z", "completed_at": "2025-03-04T12:52:58.978244Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.981301Z", "completed_at": "2025-03-04T12:52:58.981311Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030643224716186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_interest_rate_updated_base_mainnet_event_name__InterestRateUpdated.1f640e1a2e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestRateUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.971600Z", "completed_at": "2025-03-04T12:52:58.979819Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:58.982956Z", "completed_at": "2025-03-04T12:52:58.982966Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030821800231933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_rate_updated_base_mainnet_interest_rate__True__0.9e368f0a36", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest_rate >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.990186Z", "completed_at": "2025-03-04T12:52:59.010270Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.012876Z", "completed_at": "2025-03-04T12:52:59.012890Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027866601943969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_rate_updated_base_mainnet_super_market_id__True__0.4d69e0aece", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not super_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.000810Z", "completed_at": "2025-03-04T12:52:59.011638Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.014391Z", "completed_at": "2025-03-04T12:52:59.014399Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027347803115844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_mainnet_block_timestamp.0d665a1669", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.005799Z", "completed_at": "2025-03-04T12:52:59.012231Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.015277Z", "completed_at": "2025-03-04T12:52:59.015284Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0269927978515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_mainnet_contract.79599300ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:58.996258Z", "completed_at": "2025-03-04T12:52:59.013799Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.016971Z", "completed_at": "2025-03-04T12:52:59.016979Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030517101287841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_mainnet_block_number.76213ff694", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.024056Z", "completed_at": "2025-03-04T12:52:59.046719Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.048332Z", "completed_at": "2025-03-04T12:52:59.048345Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029364585876464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_mainnet_event_name.36434bd8cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.032067Z", "completed_at": "2025-03-04T12:52:59.047529Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.050041Z", "completed_at": "2025-03-04T12:52:59.050050Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02965998649597168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_mainnet_id.e9a20cc82f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.036689Z", "completed_at": "2025-03-04T12:52:59.049430Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.052178Z", "completed_at": "2025-03-04T12:52:59.052186Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03118610382080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_mainnet_interest_rate.cfecf76356", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.041672Z", "completed_at": "2025-03-04T12:52:59.050919Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.053876Z", "completed_at": "2025-03-04T12:52:59.053884Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031684160232543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_mainnet_super_market_id.234f62d024", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect super_market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere super_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.060035Z", "completed_at": "2025-03-04T12:52:59.078486Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.084703Z", "completed_at": "2025-03-04T12:52:59.084715Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030093908309936523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_mainnet_transaction_hash.84f20da856", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.066120Z", "completed_at": "2025-03-04T12:52:59.083971Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.085853Z", "completed_at": "2025-03-04T12:52:59.085860Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029793262481689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_interest_rate_updated_base_mainnet_id.bddddb2671", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_interest_rate_updated_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.071549Z", "completed_at": "2025-03-04T12:52:59.086749Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.089283Z", "completed_at": "2025-03-04T12:52:59.089291Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031229257583618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_interest_rate_updated_base_sepolia_event_name__InterestRateUpdated.5d317c53f3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestRateUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.079262Z", "completed_at": "2025-03-04T12:52:59.087335Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.090230Z", "completed_at": "2025-03-04T12:52:59.090238Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030952930450439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_rate_updated_base_sepolia_interest_rate__True__0.c114557661", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest_rate >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.101239Z", "completed_at": "2025-03-04T12:52:59.112174Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.118080Z", "completed_at": "2025-03-04T12:52:59.118095Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02646183967590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_sepolia_block_number.eeff2c078a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.096112Z", "completed_at": "2025-03-04T12:52:59.117164Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.119769Z", "completed_at": "2025-03-04T12:52:59.119776Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028768062591552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_interest_rate_updated_base_sepolia_super_market_id__True__0.cc3fb6ff17", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not super_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.107509Z", "completed_at": "2025-03-04T12:52:59.119076Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.122021Z", "completed_at": "2025-03-04T12:52:59.122031Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02722644805908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_sepolia_block_timestamp.609017baeb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.112891Z", "completed_at": "2025-03-04T12:52:59.120717Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.123578Z", "completed_at": "2025-03-04T12:52:59.123588Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028177976608276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_sepolia_contract.ccc079c59c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.129553Z", "completed_at": "2025-03-04T12:52:59.146572Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.152600Z", "completed_at": "2025-03-04T12:52:59.152615Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028293609619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_sepolia_event_name.30275ad446", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.136822Z", "completed_at": "2025-03-04T12:52:59.151683Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.154247Z", "completed_at": "2025-03-04T12:52:59.154255Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02856278419494629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_sepolia_id.24c18054e7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.141970Z", "completed_at": "2025-03-04T12:52:59.153559Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.156497Z", "completed_at": "2025-03-04T12:52:59.156505Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028906822204589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_sepolia_interest_rate.7f5f7342cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.147190Z", "completed_at": "2025-03-04T12:52:59.155834Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.158723Z", "completed_at": "2025-03-04T12:52:59.158734Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02991509437561035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_sepolia_super_market_id.68b732b580", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect super_market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere super_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.163414Z", "completed_at": "2025-03-04T12:52:59.175381Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.186302Z", "completed_at": "2025-03-04T12:52:59.186314Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028395414352416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_interest_rate_updated_base_sepolia_transaction_hash.3601647535", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.169931Z", "completed_at": "2025-03-04T12:52:59.187203Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.189486Z", "completed_at": "2025-03-04T12:52:59.189495Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029356956481933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_interest_rate_updated_base_sepolia_id.2295efc83a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_interest_rate_updated_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.175999Z", "completed_at": "2025-03-04T12:52:59.188839Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.191693Z", "completed_at": "2025-03-04T12:52:59.191701Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029628515243530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_markets_arbitrum_mainnet", "compiled": true, "compiled_code": "with arbitrum as (\n    select\n        perps_market_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        market_symbol,\n        market_name\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\n)\n\nselect *\nfrom\n    arbitrum", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.181533Z", "completed_at": "2025-03-04T12:52:59.190319Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.193228Z", "completed_at": "2025-03-04T12:52:59.193237Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024684667587280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_market_created_arbitrum_mainnet_event_name__MarketCreated.95d2e513a2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.196997Z", "completed_at": "2025-03-04T12:52:59.209308Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.215106Z", "completed_at": "2025-03-04T12:52:59.215118Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02421116828918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_created_arbitrum_mainnet_perps_market_id__True__0.48f88f8963", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not perps_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.204823Z", "completed_at": "2025-03-04T12:52:59.220393Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.222899Z", "completed_at": "2025-03-04T12:52:59.222908Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02759695053100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_block_number.398ad31e3c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.210533Z", "completed_at": "2025-03-04T12:52:59.222159Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.225099Z", "completed_at": "2025-03-04T12:52:59.225109Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023093700408935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_block_timestamp.30d302d69e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.216098Z", "completed_at": "2025-03-04T12:52:59.224519Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.227278Z", "completed_at": "2025-03-04T12:52:59.227286Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023938894271850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_contract.21d3d73e97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.229501Z", "completed_at": "2025-03-04T12:52:59.239765Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.249952Z", "completed_at": "2025-03-04T12:52:59.249965Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026236295700073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_event_name.7c033fc995", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.240351Z", "completed_at": "2025-03-04T12:52:59.255559Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.257887Z", "completed_at": "2025-03-04T12:52:59.257897Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029162883758544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_id.51befad80c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.245547Z", "completed_at": "2025-03-04T12:52:59.257143Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.260043Z", "completed_at": "2025-03-04T12:52:59.260054Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023000001907348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_market_name.b6c0825a0f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere market_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.251148Z", "completed_at": "2025-03-04T12:52:59.258768Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.261591Z", "completed_at": "2025-03-04T12:52:59.261599Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023163318634033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_market_symbol.cac52e1baa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.265024Z", "completed_at": "2025-03-04T12:52:59.272491Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.284850Z", "completed_at": "2025-03-04T12:52:59.284864Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02561473846435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_perps_market_id.adbc877d76", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect perps_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere perps_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.273096Z", "completed_at": "2025-03-04T12:52:59.289204Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.290933Z", "completed_at": "2025-03-04T12:52:59.290945Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027307987213134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_mainnet_transaction_hash.486a46d989", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.278391Z", "completed_at": "2025-03-04T12:52:59.291874Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.294345Z", "completed_at": "2025-03-04T12:52:59.294353Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024584531784057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_market_created_arbitrum_mainnet_id.ccdc9b7755", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_created_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.285925Z", "completed_at": "2025-03-04T12:52:59.293102Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.295886Z", "completed_at": "2025-03-04T12:52:59.295894Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02486705780029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_markets_arbitrum_sepolia", "compiled": true, "compiled_code": "with arbitrum as (\n    select\n        perps_market_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        market_symbol,\n        market_name\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\n)\n\nselect *\nfrom\n    arbitrum", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.298057Z", "completed_at": "2025-03-04T12:52:59.306310Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.313027Z", "completed_at": "2025-03-04T12:52:59.313040Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02063298225402832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_market_created_arbitrum_sepolia_event_name__MarketCreated.ef5c6685e4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.306963Z", "completed_at": "2025-03-04T12:52:59.323041Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.324887Z", "completed_at": "2025-03-04T12:52:59.324899Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028266429901123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_created_arbitrum_sepolia_perps_market_id__True__0.257f31ec2b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not perps_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.318658Z", "completed_at": "2025-03-04T12:52:59.325879Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.328379Z", "completed_at": "2025-03-04T12:52:59.328390Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02281475067138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_block_timestamp.22256d5ced", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.314072Z", "completed_at": "2025-03-04T12:52:59.326486Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.329350Z", "completed_at": "2025-03-04T12:52:59.329357Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024552583694458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_block_number.8b50cb58ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.332821Z", "completed_at": "2025-03-04T12:52:59.347140Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.352852Z", "completed_at": "2025-03-04T12:52:59.352865Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025945186614990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_contract.dd490d10f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.342019Z", "completed_at": "2025-03-04T12:52:59.353971Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.360635Z", "completed_at": "2025-03-04T12:52:59.360644Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029915332794189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_event_name.d7dd655280", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.348428Z", "completed_at": "2025-03-04T12:52:59.359950Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.362318Z", "completed_at": "2025-03-04T12:52:59.362325Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021882057189941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_id.fad8f3147a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.354589Z", "completed_at": "2025-03-04T12:52:59.363180Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.365757Z", "completed_at": "2025-03-04T12:52:59.365765Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024607181549072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_market_name.c93aa611fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere market_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.367259Z", "completed_at": "2025-03-04T12:52:59.375406Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.387671Z", "completed_at": "2025-03-04T12:52:59.387684Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0261685848236084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_market_symbol.9afbd894dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.376016Z", "completed_at": "2025-03-04T12:52:59.393088Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.395221Z", "completed_at": "2025-03-04T12:52:59.395232Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028702974319458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_perps_market_id.6c72e612a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect perps_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere perps_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.380477Z", "completed_at": "2025-03-04T12:52:59.393679Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.396717Z", "completed_at": "2025-03-04T12:52:59.396728Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024966716766357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_arbitrum_sepolia_transaction_hash.0466ce137d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.388850Z", "completed_at": "2025-03-04T12:52:59.396108Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.398920Z", "completed_at": "2025-03-04T12:52:59.398928Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02421283721923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_market_created_arbitrum_sepolia_id.bff5e22d8a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_created_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.403008Z", "completed_at": "2025-03-04T12:52:59.413846Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.424273Z", "completed_at": "2025-03-04T12:52:59.424287Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02680373191833496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_markets_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        perps_market_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        market_symbol,\n        market_name\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.408605Z", "completed_at": "2025-03-04T12:52:59.423686Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.425548Z", "completed_at": "2025-03-04T12:52:59.425555Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024602174758911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_market_created_base_mainnet_event_name__MarketCreated.d9da845e2f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.414523Z", "completed_at": "2025-03-04T12:52:59.426381Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.429242Z", "completed_at": "2025-03-04T12:52:59.429250Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026993751525878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_created_base_mainnet_perps_market_id__True__0.7835f6c4e2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not perps_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.419301Z", "completed_at": "2025-03-04T12:52:59.427645Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.430832Z", "completed_at": "2025-03-04T12:52:59.430840Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02371048927307129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_block_number.31d8a749ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.435489Z", "completed_at": "2025-03-04T12:52:59.450123Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.460888Z", "completed_at": "2025-03-04T12:52:59.460906Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03089141845703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_block_timestamp.b13b8b381f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.443841Z", "completed_at": "2025-03-04T12:52:59.450730Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.462111Z", "completed_at": "2025-03-04T12:52:59.462120Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030536174774169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_contract.dd8ab60012", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.456063Z", "completed_at": "2025-03-04T12:52:59.464039Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.466736Z", "completed_at": "2025-03-04T12:52:59.466747Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023833513259887695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_id.eb84eb9821", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.451334Z", "completed_at": "2025-03-04T12:52:59.465403Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.468278Z", "completed_at": "2025-03-04T12:52:59.468285Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03353118896484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_event_name.f103b43404", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.477916Z", "completed_at": "2025-03-04T12:52:59.485061Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.498164Z", "completed_at": "2025-03-04T12:52:59.498179Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03066110610961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_market_symbol.06e88b6544", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.471746Z", "completed_at": "2025-03-04T12:52:59.485665Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.499320Z", "completed_at": "2025-03-04T12:52:59.499328Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03340625762939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_market_name.162fe82996", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere market_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.486273Z", "completed_at": "2025-03-04T12:52:59.501259Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.503862Z", "completed_at": "2025-03-04T12:52:59.503874Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026904582977294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_perps_market_id.d04a2adf66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect perps_market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere perps_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.493614Z", "completed_at": "2025-03-04T12:52:59.501875Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.504923Z", "completed_at": "2025-03-04T12:52:59.504930Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02225208282470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_mainnet_transaction_hash.005c8ea981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.509042Z", "completed_at": "2025-03-04T12:52:59.520603Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.533912Z", "completed_at": "2025-03-04T12:52:59.533925Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030889272689819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_market_created_base_mainnet_id.e1227e7e46", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_created_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.515600Z", "completed_at": "2025-03-04T12:52:59.526437Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.534970Z", "completed_at": "2025-03-04T12:52:59.534977Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029241323471069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_markets_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        perps_market_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        market_symbol,\n        market_name\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.521338Z", "completed_at": "2025-03-04T12:52:59.536669Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.539602Z", "completed_at": "2025-03-04T12:52:59.539610Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02567291259765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_market_created_base_sepolia_event_name__MarketCreated.da7f65c9d0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCreated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.527149Z", "completed_at": "2025-03-04T12:52:59.537995Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.541103Z", "completed_at": "2025-03-04T12:52:59.541111Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026325225830078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_created_base_sepolia_perps_market_id__True__0.89e2162ed5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not perps_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.544454Z", "completed_at": "2025-03-04T12:52:59.780999Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.787187Z", "completed_at": "2025-03-04T12:52:59.787201Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.24840426445007324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_block_number.f39a76515f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.775042Z", "completed_at": "2025-03-04T12:52:59.782226Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.792546Z", "completed_at": "2025-03-04T12:52:59.792555Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2521834373474121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_block_timestamp.087de488f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.782828Z", "completed_at": "2025-03-04T12:52:59.795097Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.797823Z", "completed_at": "2025-03-04T12:52:59.797833Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023698806762695312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_contract.9b5b7d63ca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.788224Z", "completed_at": "2025-03-04T12:52:59.796454Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.799316Z", "completed_at": "2025-03-04T12:52:59.799325Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02001023292541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_event_name.594bfb776d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.801408Z", "completed_at": "2025-03-04T12:52:59.814859Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.821126Z", "completed_at": "2025-03-04T12:52:59.821142Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025510549545288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_id.3651be9d50", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.806914Z", "completed_at": "2025-03-04T12:52:59.815484Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.822189Z", "completed_at": "2025-03-04T12:52:59.822196Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025249481201171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_market_name.2335002c7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere market_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.816631Z", "completed_at": "2025-03-04T12:52:59.828901Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.831602Z", "completed_at": "2025-03-04T12:52:59.831612Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01905369758605957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_market_symbol.b99df1cd19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.823074Z", "completed_at": "2025-03-04T12:52:59.830980Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.833679Z", "completed_at": "2025-03-04T12:52:59.833687Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020359516143798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_perps_market_id.30bf02bc46", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect perps_market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere perps_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.835227Z", "completed_at": "2025-03-04T12:52:59.846950Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.849334Z", "completed_at": "2025-03-04T12:52:59.849346Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019771099090576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_created_base_sepolia_transaction_hash.83d1940949", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.839947Z", "completed_at": "2025-03-04T12:52:59.848146Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.855301Z", "completed_at": "2025-03-04T12:52:59.855311Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025040149688720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_market_created_base_sepolia_id.9af5f482a3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_created_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.856219Z", "completed_at": "2025-03-04T12:52:59.865280Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.867717Z", "completed_at": "2025-03-04T12:52:59.867728Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021672964096069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_arbitrum_mainnet_interest_rate__True__0.6f303fc104", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest_rate >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.850250Z", "completed_at": "2025-03-04T12:52:59.865925Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.868618Z", "completed_at": "2025-03-04T12:52:59.868625Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023494243621826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_market_updated_arbitrum_mainnet_event_name__MarketUpdated.8146a5947b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.870052Z", "completed_at": "2025-03-04T12:52:59.882610Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.885068Z", "completed_at": "2025-03-04T12:52:59.885080Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020572662353515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_arbitrum_mainnet_market_id__True__0.49bfd0ea1e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.876486Z", "completed_at": "2025-03-04T12:52:59.883932Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.890338Z", "completed_at": "2025-03-04T12:52:59.890350Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024017810821533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_arbitrum_mainnet_price__True__0.08ca8e4202", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.885973Z", "completed_at": "2025-03-04T12:52:59.897487Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.900070Z", "completed_at": "2025-03-04T12:52:59.900082Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018910646438598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_block_number.22032f5e3f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.891351Z", "completed_at": "2025-03-04T12:52:59.898831Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.901571Z", "completed_at": "2025-03-04T12:52:59.901582Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019679784774780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_block_timestamp.c82304cd0d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.903731Z", "completed_at": "2025-03-04T12:52:59.916714Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.919237Z", "completed_at": "2025-03-04T12:52:59.919250Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02119302749633789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_contract.ae7ff19df0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.909086Z", "completed_at": "2025-03-04T12:52:59.918062Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.924761Z", "completed_at": "2025-03-04T12:52:59.924776Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025486230850219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_event_name.bbd9a88ac4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.920157Z", "completed_at": "2025-03-04T12:52:59.932045Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.934569Z", "completed_at": "2025-03-04T12:52:59.934581Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01945209503173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_id.c3a83ad1d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.925903Z", "completed_at": "2025-03-04T12:52:59.933972Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.936652Z", "completed_at": "2025-03-04T12:52:59.936660Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020701885223388672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_interest_rate.2f297e2d1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.938198Z", "completed_at": "2025-03-04T12:52:59.949799Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.952129Z", "completed_at": "2025-03-04T12:52:59.952139Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01956629753112793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_market_id.7a1df365b6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.942806Z", "completed_at": "2025-03-04T12:52:59.950373Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.953052Z", "completed_at": "2025-03-04T12:52:59.953061Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019800424575805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_price.c754965f12", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.959288Z", "completed_at": "2025-03-04T12:52:59.967619Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.970046Z", "completed_at": "2025-03-04T12:52:59.970058Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02110004425048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_market_updated_arbitrum_mainnet_id.ca2bc0e1a1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.954618Z", "completed_at": "2025-03-04T12:52:59.968247Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.970938Z", "completed_at": "2025-03-04T12:52:59.970945Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022945642471313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_mainnet_transaction_hash.35ad1a325b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.972383Z", "completed_at": "2025-03-04T12:52:59.985034Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.987565Z", "completed_at": "2025-03-04T12:52:59.987575Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020761489868164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_market_updated_arbitrum_sepolia_event_name__MarketUpdated.44006a072f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.978833Z", "completed_at": "2025-03-04T12:52:59.986980Z"}, {"name": "execute", "started_at": "2025-03-04T12:52:59.997910Z", "completed_at": "2025-03-04T12:52:59.997920Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029217958450317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_arbitrum_sepolia_interest_rate__True__0.cf75ef25fe", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest_rate >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.988426Z", "completed_at": "2025-03-04T12:53:00.000021Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.002553Z", "completed_at": "2025-03-04T12:53:00.002561Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018963098526000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_arbitrum_sepolia_market_id__True__0.0852877223", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:52:59.993164Z", "completed_at": "2025-03-04T12:53:00.000607Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.003415Z", "completed_at": "2025-03-04T12:53:00.003423Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019136667251586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_arbitrum_sepolia_price__True__0.e44ad44456", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.007528Z", "completed_at": "2025-03-04T12:53:00.021042Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.031538Z", "completed_at": "2025-03-04T12:53:00.031552Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02984023094177246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_block_number.b556a7789f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.013642Z", "completed_at": "2025-03-04T12:53:00.026266Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.032638Z", "completed_at": "2025-03-04T12:53:00.032649Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028460025787353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_block_timestamp.09877a4d82", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.026921Z", "completed_at": "2025-03-04T12:53:00.034509Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.037126Z", "completed_at": "2025-03-04T12:53:00.037134Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024258852005004883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_event_name.ffc855a652", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.021804Z", "completed_at": "2025-03-04T12:53:00.035156Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.038022Z", "completed_at": "2025-03-04T12:53:00.038033Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025954723358154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_contract.0cf0f68ca0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.042126Z", "completed_at": "2025-03-04T12:53:00.054852Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.067950Z", "completed_at": "2025-03-04T12:53:00.067963Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.031655311584472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_id.3b2c812312", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.048540Z", "completed_at": "2025-03-04T12:53:00.067337Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.069247Z", "completed_at": "2025-03-04T12:53:00.069255Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030433177947998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_interest_rate.f378e28263", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.055587Z", "completed_at": "2025-03-04T12:53:00.070163Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.072783Z", "completed_at": "2025-03-04T12:53:00.072791Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025812625885009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_market_id.9835cafd8a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.060554Z", "completed_at": "2025-03-04T12:53:00.070796Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.073684Z", "completed_at": "2025-03-04T12:53:00.073691Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025995731353759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_price.e62a84d2a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.085004Z", "completed_at": "2025-03-04T12:53:00.095751Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.101705Z", "completed_at": "2025-03-04T12:53:00.101720Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026683807373046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_market_updated_arbitrum_sepolia_id.66008e7961", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.079655Z", "completed_at": "2025-03-04T12:53:00.096318Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.102826Z", "completed_at": "2025-03-04T12:53:00.102837Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028383970260620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_arbitrum_sepolia_transaction_hash.1c205dac4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.091145Z", "completed_at": "2025-03-04T12:53:00.103690Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.106416Z", "completed_at": "2025-03-04T12:53:00.106423Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028204679489135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_market_updated_base_mainnet_event_name__MarketUpdated.33121cd63c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.096950Z", "completed_at": "2025-03-04T12:53:00.105802Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.108609Z", "completed_at": "2025-03-04T12:53:00.108616Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02971196174621582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_base_mainnet_interest_rate__True__0.7f6ed158d2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest_rate >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.112678Z", "completed_at": "2025-03-04T12:53:00.126861Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.137077Z", "completed_at": "2025-03-04T12:53:00.137091Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029947757720947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_base_mainnet_market_id__True__0.5c7a41566b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.117625Z", "completed_at": "2025-03-04T12:53:00.127476Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.138089Z", "completed_at": "2025-03-04T12:53:00.138098Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030241966247558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_base_mainnet_price__True__0.ae7f542736", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.128029Z", "completed_at": "2025-03-04T12:53:00.140075Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.142646Z", "completed_at": "2025-03-04T12:53:00.142654Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030728816986083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_block_number.3088915c67", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.132617Z", "completed_at": "2025-03-04T12:53:00.140719Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.143512Z", "completed_at": "2025-03-04T12:53:00.143522Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019040584564208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_block_timestamp.c0b049d2d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.147801Z", "completed_at": "2025-03-04T12:53:00.159275Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.165644Z", "completed_at": "2025-03-04T12:53:00.165655Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023797988891601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_contract.e19df268b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.153975Z", "completed_at": "2025-03-04T12:53:00.164933Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.172717Z", "completed_at": "2025-03-04T12:53:00.172725Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028454303741455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_event_name.de1019fbef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.160620Z", "completed_at": "2025-03-04T12:53:00.173577Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.176358Z", "completed_at": "2025-03-04T12:53:00.176369Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023854970932006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_id.23f3e68a12", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.166568Z", "completed_at": "2025-03-04T12:53:00.175772Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.178574Z", "completed_at": "2025-03-04T12:53:00.178581Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025373458862304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_interest_rate.10b7a6c389", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.187046Z", "completed_at": "2025-03-04T12:53:00.193635Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.203384Z", "completed_at": "2025-03-04T12:53:00.203394Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025603294372558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_price.f0d91e2bd5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.182630Z", "completed_at": "2025-03-04T12:53:00.198525Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.204480Z", "completed_at": "2025-03-04T12:53:00.204493Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027333974838256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_market_id.8ec7a63f6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.194234Z", "completed_at": "2025-03-04T12:53:00.206129Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.208740Z", "completed_at": "2025-03-04T12:53:00.208748Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026871442794799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_mainnet_transaction_hash.28faaa00e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.199085Z", "completed_at": "2025-03-04T12:53:00.206830Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.209630Z", "completed_at": "2025-03-04T12:53:00.209638Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018395185470581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_market_updated_base_mainnet_id.a3e4d3e22f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.213618Z", "completed_at": "2025-03-04T12:53:00.227571Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.238141Z", "completed_at": "2025-03-04T12:53:00.238157Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030207157135009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_market_updated_base_sepolia_event_name__MarketUpdated.6507eaa7c6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketUpdated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.219845Z", "completed_at": "2025-03-04T12:53:00.237517Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.240072Z", "completed_at": "2025-03-04T12:53:00.240081Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02968883514404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_base_sepolia_interest_rate__True__0.82fe5b32f6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest_rate >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.228271Z", "completed_at": "2025-03-04T12:53:00.239520Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.242252Z", "completed_at": "2025-03-04T12:53:00.242260Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023925065994262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_base_sepolia_market_id__True__0.2aed99d0b6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.232893Z", "completed_at": "2025-03-04T12:53:00.240955Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.243834Z", "completed_at": "2025-03-04T12:53:00.243841Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02482891082763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_market_updated_base_sepolia_price__True__0.4f4858e59f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.249808Z", "completed_at": "2025-03-04T12:53:00.264597Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.272045Z", "completed_at": "2025-03-04T12:53:00.272057Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02747631072998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_block_number.6d91893cd9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.254932Z", "completed_at": "2025-03-04T12:53:00.271324Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.273193Z", "completed_at": "2025-03-04T12:53:00.273200Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02727818489074707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_block_timestamp.eabfe875b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.260205Z", "completed_at": "2025-03-04T12:53:00.274127Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.276694Z", "completed_at": "2025-03-04T12:53:00.276701Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028855085372924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_contract.7a798ec958", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.265314Z", "completed_at": "2025-03-04T12:53:00.274757Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.277575Z", "completed_at": "2025-03-04T12:53:00.277582Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02850818634033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_event_name.5808660a29", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.288055Z", "completed_at": "2025-03-04T12:53:00.298355Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.304043Z", "completed_at": "2025-03-04T12:53:00.304056Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025147199630737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_interest_rate.20f815f06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.283426Z", "completed_at": "2025-03-04T12:53:00.298982Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.305727Z", "completed_at": "2025-03-04T12:53:00.305737Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027431488037109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_id.c010e8e9d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.294081Z", "completed_at": "2025-03-04T12:53:00.305120Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.308081Z", "completed_at": "2025-03-04T12:53:00.308091Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02606058120727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_market_id.1d15a36e0c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.299574Z", "completed_at": "2025-03-04T12:53:00.307406Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.310279Z", "completed_at": "2025-03-04T12:53:00.310288Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027604103088378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_price.821df5b6b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.315071Z", "completed_at": "2025-03-04T12:53:00.332315Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.338294Z", "completed_at": "2025-03-04T12:53:00.338307Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028804540634155273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_market_updated_base_sepolia_transaction_hash.b36ca2219f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.322653Z", "completed_at": "2025-03-04T12:53:00.337643Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.339595Z", "completed_at": "2025-03-04T12:53:00.339604Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027866840362548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_market_updated_base_sepolia_id.5fa0b8a094", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.327700Z", "completed_at": "2025-03-04T12:53:00.340421Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.342955Z", "completed_at": "2025-03-04T12:53:00.342966Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029193878173828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_order_committed_arbitrum_mainnet_event_name__OrderCommitted.80f5b2af2f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCommitted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.332978Z", "completed_at": "2025-03-04T12:53:00.341026Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.343848Z", "completed_at": "2025-03-04T12:53:00.343855Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022571563720703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_committed_arbitrum_mainnet_account_id__True__0.83d9cf1359", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.354677Z", "completed_at": "2025-03-04T12:53:00.365846Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.372405Z", "completed_at": "2025-03-04T12:53:00.372418Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027261734008789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_mainnet_account_id.51a7bcf136", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.349765Z", "completed_at": "2025-03-04T12:53:00.366493Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.373426Z", "completed_at": "2025-03-04T12:53:00.373434Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028848886489868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_committed_arbitrum_mainnet_market_id__True__0.d1559e05f3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.360764Z", "completed_at": "2025-03-04T12:53:00.374586Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.377134Z", "completed_at": "2025-03-04T12:53:00.377144Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028738021850585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_mainnet_block_number.d86120fbb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.368150Z", "completed_at": "2025-03-04T12:53:00.375792Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.378679Z", "completed_at": "2025-03-04T12:53:00.378686Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02964186668395996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_mainnet_block_timestamp.9450bd7715", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.383270Z", "completed_at": "2025-03-04T12:53:00.394609Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.404847Z", "completed_at": "2025-03-04T12:53:00.404863Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026960372924804688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_mainnet_contract.4d5fe85c13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.388736Z", "completed_at": "2025-03-04T12:53:00.404202Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.406128Z", "completed_at": "2025-03-04T12:53:00.406136Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026694536209106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_mainnet_event_name.d96a04bc5b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.395219Z", "completed_at": "2025-03-04T12:53:00.406996Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.409573Z", "completed_at": "2025-03-04T12:53:00.409581Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02702784538269043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_mainnet_id.3d80312645", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.399723Z", "completed_at": "2025-03-04T12:53:00.408313Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.411149Z", "completed_at": "2025-03-04T12:53:00.411159Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023309707641601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_mainnet_market_id.c88a9b80a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.415881Z", "completed_at": "2025-03-04T12:53:00.433693Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.439914Z", "completed_at": "2025-03-04T12:53:00.439927Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029567480087280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_mainnet_transaction_hash.4876108100", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.423102Z", "completed_at": "2025-03-04T12:53:00.438981Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.441577Z", "completed_at": "2025-03-04T12:53:00.441584Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02963399887084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_order_committed_arbitrum_mainnet_id.3373ae33a2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.429023Z", "completed_at": "2025-03-04T12:53:00.440852Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.443811Z", "completed_at": "2025-03-04T12:53:00.443821Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02868795394897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_order_committed_arbitrum_sepolia_event_name__OrderCommitted.9ba89086fc", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCommitted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.434369Z", "completed_at": "2025-03-04T12:53:00.442492Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.445446Z", "completed_at": "2025-03-04T12:53:00.445457Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02314901351928711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_committed_arbitrum_sepolia_account_id__True__0.374a09c8bb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.451404Z", "completed_at": "2025-03-04T12:53:00.468669Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.473926Z", "completed_at": "2025-03-04T12:53:00.473940Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027727127075195312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_committed_arbitrum_sepolia_market_id__True__0.51034c57fd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.457249Z", "completed_at": "2025-03-04T12:53:00.475051Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.476942Z", "completed_at": "2025-03-04T12:53:00.476950Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029357433319091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_sepolia_account_id.539cca2995", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.462393Z", "completed_at": "2025-03-04T12:53:00.476308Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.479144Z", "completed_at": "2025-03-04T12:53:00.479155Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029671192169189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_sepolia_block_number.a115d197bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.469382Z", "completed_at": "2025-03-04T12:53:00.477906Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.480737Z", "completed_at": "2025-03-04T12:53:00.480747Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030059814453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_sepolia_block_timestamp.e2dce83de3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.484161Z", "completed_at": "2025-03-04T12:53:00.496167Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.502161Z", "completed_at": "2025-03-04T12:53:00.502175Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023782730102539062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_sepolia_contract.f7f4678e01", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.497611Z", "completed_at": "2025-03-04T12:53:00.508513Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.510500Z", "completed_at": "2025-03-04T12:53:00.510510Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02176976203918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_sepolia_id.af12508db9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.491745Z", "completed_at": "2025-03-04T12:53:00.509861Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.512559Z", "completed_at": "2025-03-04T12:53:00.512570Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029809951782226562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_sepolia_event_name.8c94a5144a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.503130Z", "completed_at": "2025-03-04T12:53:00.511336Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.514115Z", "completed_at": "2025-03-04T12:53:00.514125Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023899078369140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_sepolia_market_id.76f09344d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.515020Z", "completed_at": "2025-03-04T12:53:00.524877Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.531233Z", "completed_at": "2025-03-04T12:53:00.531248Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022144794464111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_arbitrum_sepolia_transaction_hash.2672ca73bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.526718Z", "completed_at": "2025-03-04T12:53:00.543171Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.544945Z", "completed_at": "2025-03-04T12:53:00.544956Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022917509078979492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_order_committed_arbitrum_sepolia_id.11b844d761", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.532933Z", "completed_at": "2025-03-04T12:53:00.545869Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.548259Z", "completed_at": "2025-03-04T12:53:00.548267Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02469944953918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_order_committed_base_mainnet_event_name__OrderCommitted.ce39697ea3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCommitted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.538575Z", "completed_at": "2025-03-04T12:53:00.546456Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.549188Z", "completed_at": "2025-03-04T12:53:00.549199Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02379751205444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_committed_base_mainnet_account_id__True__0.c996cff012", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.550089Z", "completed_at": "2025-03-04T12:53:00.557718Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.564055Z", "completed_at": "2025-03-04T12:53:00.564066Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02011394500732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_committed_base_mainnet_market_id__True__0.9964b7c003", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.559549Z", "completed_at": "2025-03-04T12:53:00.572374Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.579130Z", "completed_at": "2025-03-04T12:53:00.579145Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02441716194152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_mainnet_account_id.4dabd60cd4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.574204Z", "completed_at": "2025-03-04T12:53:00.580995Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.587267Z", "completed_at": "2025-03-04T12:53:00.587276Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028472900390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_mainnet_block_timestamp.ba049c4adc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.567266Z", "completed_at": "2025-03-04T12:53:00.581562Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.588201Z", "completed_at": "2025-03-04T12:53:00.588214Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03005194664001465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_mainnet_block_number.743f5b2c16", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.582874Z", "completed_at": "2025-03-04T12:53:00.590598Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.593086Z", "completed_at": "2025-03-04T12:53:00.593093Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014747142791748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_mainnet_contract.ec04bc0cd9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.594598Z", "completed_at": "2025-03-04T12:53:00.605677Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.611536Z", "completed_at": "2025-03-04T12:53:00.611547Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022546768188476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_mainnet_event_name.ea7921e749", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.601268Z", "completed_at": "2025-03-04T12:53:00.613084Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.620917Z", "completed_at": "2025-03-04T12:53:00.620927Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028596878051757812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_mainnet_id.deaaf9a2d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.607047Z", "completed_at": "2025-03-04T12:53:00.621792Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.623910Z", "completed_at": "2025-03-04T12:53:00.623922Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030180692672729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_mainnet_market_id.09e2f9dd2e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.614538Z", "completed_at": "2025-03-04T12:53:00.624874Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.627317Z", "completed_at": "2025-03-04T12:53:00.627327Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02105545997619629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_mainnet_transaction_hash.ba7bf1fc20", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.628260Z", "completed_at": "2025-03-04T12:53:00.639426Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.641595Z", "completed_at": "2025-03-04T12:53:00.641605Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019324541091918945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_order_committed_base_mainnet_id.471fd9d19f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.634839Z", "completed_at": "2025-03-04T12:53:00.647531Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.649741Z", "completed_at": "2025-03-04T12:53:00.649752Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0238344669342041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_order_committed_base_sepolia_event_name__OrderCommitted.f236dead5d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCommitted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.642571Z", "completed_at": "2025-03-04T12:53:00.650647Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.657777Z", "completed_at": "2025-03-04T12:53:00.657787Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02454686164855957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_committed_base_sepolia_account_id__True__0.2a5b9bdddf", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.651250Z", "completed_at": "2025-03-04T12:53:00.660712Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.667364Z", "completed_at": "2025-03-04T12:53:00.667373Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026661157608032227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_committed_base_sepolia_market_id__True__0.6174df8d83", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.661393Z", "completed_at": "2025-03-04T12:53:00.675658Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.681682Z", "completed_at": "2025-03-04T12:53:00.681699Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025564193725585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_sepolia_account_id.e0cc9cd7a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.668392Z", "completed_at": "2025-03-04T12:53:00.682707Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.685429Z", "completed_at": "2025-03-04T12:53:00.685437Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02613973617553711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_sepolia_block_number.f3230cc50d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.677115Z", "completed_at": "2025-03-04T12:53:00.684842Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.687572Z", "completed_at": "2025-03-04T12:53:00.687582Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020937442779541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_sepolia_block_timestamp.192957d40c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.689212Z", "completed_at": "2025-03-04T12:53:00.701496Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.704006Z", "completed_at": "2025-03-04T12:53:00.704017Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020812511444091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_sepolia_contract.ad38cda3df", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.696101Z", "completed_at": "2025-03-04T12:53:00.703413Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.714288Z", "completed_at": "2025-03-04T12:53:00.714301Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027502775192260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_sepolia_event_name.dc8411b8b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.704915Z", "completed_at": "2025-03-04T12:53:00.717154Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.719626Z", "completed_at": "2025-03-04T12:53:00.719638Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024440526962280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_sepolia_id.5b74c78258", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.709550Z", "completed_at": "2025-03-04T12:53:00.717768Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.720510Z", "completed_at": "2025-03-04T12:53:00.720517Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019753456115722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_sepolia_market_id.9c41f762ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.723832Z", "completed_at": "2025-03-04T12:53:00.737192Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.743836Z", "completed_at": "2025-03-04T12:53:00.743847Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025664806365966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_committed_base_sepolia_transaction_hash.761f6c5146", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.730541Z", "completed_at": "2025-03-04T12:53:00.738411Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.749419Z", "completed_at": "2025-03-04T12:53:00.749428Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030608177185058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_order_committed_base_sepolia_id.eb024384af", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.739037Z", "completed_at": "2025-03-04T12:53:00.751571Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.754152Z", "completed_at": "2025-03-04T12:53:00.754160Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019336700439453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_order_settled_arbitrum_mainnet_event_name__OrderSettled.5e1793594f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderSettled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.744777Z", "completed_at": "2025-03-04T12:53:00.752868Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.755682Z", "completed_at": "2025-03-04T12:53:00.755689Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020188093185424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_arbitrum_mainnet_account_id__True__0.fcdc188551", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.759077Z", "completed_at": "2025-03-04T12:53:00.771200Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.779183Z", "completed_at": "2025-03-04T12:53:00.779194Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025796175003051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_arbitrum_mainnet_collected_fees__True__0.356b57ba59", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.764797Z", "completed_at": "2025-03-04T12:53:00.772362Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.784328Z", "completed_at": "2025-03-04T12:53:00.784338Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029439687728881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_arbitrum_mainnet_market_id__True__0.c52a7e4ed8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.772962Z", "completed_at": "2025-03-04T12:53:00.786148Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.788791Z", "completed_at": "2025-03-04T12:53:00.788799Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02487802505493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_account_id.5f60dea264", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.780109Z", "completed_at": "2025-03-04T12:53:00.787536Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.790291Z", "completed_at": "2025-03-04T12:53:00.790299Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021033763885498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_block_number.6bb5256b7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.793689Z", "completed_at": "2025-03-04T12:53:00.804770Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.810940Z", "completed_at": "2025-03-04T12:53:00.810951Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022959470748901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_block_timestamp.ae7ec6c8ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.798912Z", "completed_at": "2025-03-04T12:53:00.806006Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.817821Z", "completed_at": "2025-03-04T12:53:00.817831Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028253793716430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_collected_fees.7370e63505", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.806586Z", "completed_at": "2025-03-04T12:53:00.819628Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.822192Z", "completed_at": "2025-03-04T12:53:00.822201Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02414393424987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_contract.deb2106eaa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.811992Z", "completed_at": "2025-03-04T12:53:00.820306Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.823071Z", "completed_at": "2025-03-04T12:53:00.823079Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02002263069152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_event_name.606b4d8510", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.827078Z", "completed_at": "2025-03-04T12:53:00.837718Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.843899Z", "completed_at": "2025-03-04T12:53:00.843910Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022446870803833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_id.8d20cf26c1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.832749Z", "completed_at": "2025-03-04T12:53:00.843311Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.849212Z", "completed_at": "2025-03-04T12:53:00.849222Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025403976440429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_market_id.793bf9835c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.839045Z", "completed_at": "2025-03-04T12:53:00.851175Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.853723Z", "completed_at": "2025-03-04T12:53:00.853732Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022443771362304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_mainnet_transaction_hash.1344347ee5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.844822Z", "completed_at": "2025-03-04T12:53:00.852523Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.855211Z", "completed_at": "2025-03-04T12:53:00.855218Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02322697639465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_order_settled_arbitrum_mainnet_id.b9d03afd65", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.858623Z", "completed_at": "2025-03-04T12:53:00.872211Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.878899Z", "completed_at": "2025-03-04T12:53:00.878911Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025957345962524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_order_settled_arbitrum_sepolia_event_name__OrderSettled.08d7370d84", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderSettled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.864062Z", "completed_at": "2025-03-04T12:53:00.878117Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.884517Z", "completed_at": "2025-03-04T12:53:00.884530Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030054569244384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_arbitrum_sepolia_account_id__True__0.b532485142", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.873588Z", "completed_at": "2025-03-04T12:53:00.885492Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.887685Z", "completed_at": "2025-03-04T12:53:00.887693Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02449631690979004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_arbitrum_sepolia_collected_fees__True__0.8c8446ac0e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.879833Z", "completed_at": "2025-03-04T12:53:00.888539Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.891081Z", "completed_at": "2025-03-04T12:53:00.891089Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0204620361328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_arbitrum_sepolia_market_id__True__0.bfedab225b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.894427Z", "completed_at": "2025-03-04T12:53:00.909207Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.911279Z", "completed_at": "2025-03-04T12:53:00.911288Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02227926254272461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_account_id.e604936b3a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.898937Z", "completed_at": "2025-03-04T12:53:00.910568Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.918803Z", "completed_at": "2025-03-04T12:53:00.918814Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029140710830688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_block_number.7ab4260eae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.904880Z", "completed_at": "2025-03-04T12:53:00.917355Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.920339Z", "completed_at": "2025-03-04T12:53:00.920349Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027309656143188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_block_timestamp.8460ed1771", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.912223Z", "completed_at": "2025-03-04T12:53:00.922823Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.925328Z", "completed_at": "2025-03-04T12:53:00.925338Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02147817611694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_collected_fees.c1a9ca82df", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.927427Z", "completed_at": "2025-03-04T12:53:00.942846Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.945053Z", "completed_at": "2025-03-04T12:53:00.945063Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022956132888793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_contract.f9fbebc768", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.933345Z", "completed_at": "2025-03-04T12:53:00.944334Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.950912Z", "completed_at": "2025-03-04T12:53:00.950925Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026926040649414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_event_name.c9e5a717f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.938563Z", "completed_at": "2025-03-04T12:53:00.950272Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.952711Z", "completed_at": "2025-03-04T12:53:00.952720Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02661275863647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_id.bbaf076398", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.946028Z", "completed_at": "2025-03-04T12:53:00.953581Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.956166Z", "completed_at": "2025-03-04T12:53:00.956173Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018558263778686523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_market_id.456fcb9a8d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.960151Z", "completed_at": "2025-03-04T12:53:00.976454Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.978050Z", "completed_at": "2025-03-04T12:53:00.978061Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023332834243774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_arbitrum_sepolia_transaction_hash.60c06595e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.965919Z", "completed_at": "2025-03-04T12:53:00.983586Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.985738Z", "completed_at": "2025-03-04T12:53:00.985746Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02880859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_order_settled_arbitrum_sepolia_id.a95bcce825", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.972080Z", "completed_at": "2025-03-04T12:53:00.984282Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.987221Z", "completed_at": "2025-03-04T12:53:00.987228Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02905416488647461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_order_settled_base_mainnet_event_name__OrderSettled.2c75532624", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderSettled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.979102Z", "completed_at": "2025-03-04T12:53:00.986628Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:00.989408Z", "completed_at": "2025-03-04T12:53:00.989418Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024300098419189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_base_mainnet_account_id__True__0.e5564d3ff0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:00.993555Z", "completed_at": "2025-03-04T12:53:01.004902Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.010764Z", "completed_at": "2025-03-04T12:53:01.010777Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02281045913696289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_base_mainnet_collected_fees__True__0.160f85cd41", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.000294Z", "completed_at": "2025-03-04T12:53:01.016968Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.019964Z", "completed_at": "2025-03-04T12:53:01.019972Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02844691276550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_base_mainnet_market_id__True__0.f0b24bdf87", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.006201Z", "completed_at": "2025-03-04T12:53:01.019259Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.021682Z", "completed_at": "2025-03-04T12:53:01.021689Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02887415885925293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_account_id.16ba855b23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.011790Z", "completed_at": "2025-03-04T12:53:01.022846Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.025478Z", "completed_at": "2025-03-04T12:53:01.025489Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02667689323425293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_block_number.f58d806635", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.027015Z", "completed_at": "2025-03-04T12:53:01.034802Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.045094Z", "completed_at": "2025-03-04T12:53:01.045103Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024229764938354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_block_timestamp.81876ddb40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.035392Z", "completed_at": "2025-03-04T12:53:01.050627Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.052229Z", "completed_at": "2025-03-04T12:53:01.052239Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025977611541748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_collected_fees.b6a0c12cde", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.039821Z", "completed_at": "2025-03-04T12:53:01.053126Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.055653Z", "completed_at": "2025-03-04T12:53:01.055661Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02427363395690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_contract.4999a48971", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.046304Z", "completed_at": "2025-03-04T12:53:01.053753Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.056535Z", "completed_at": "2025-03-04T12:53:01.056543Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02244281768798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_event_name.f1e61c05e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.059901Z", "completed_at": "2025-03-04T12:53:01.072675Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.074620Z", "completed_at": "2025-03-04T12:53:01.074632Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020433902740478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_id.5b3863aece", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.066565Z", "completed_at": "2025-03-04T12:53:01.075552Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.085652Z", "completed_at": "2025-03-04T12:53:01.085661Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027792692184448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_market_id.6f4d850570", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.076099Z", "completed_at": "2025-03-04T12:53:01.088155Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.090665Z", "completed_at": "2025-03-04T12:53:01.090672Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025596141815185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_mainnet_transaction_hash.a60987fbb0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.080303Z", "completed_at": "2025-03-04T12:53:01.088841Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.091525Z", "completed_at": "2025-03-04T12:53:01.091532Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0258176326751709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_order_settled_base_mainnet_id.0225a9550b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.092372Z", "completed_at": "2025-03-04T12:53:01.104628Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.107175Z", "completed_at": "2025-03-04T12:53:01.107184Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02045917510986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_order_settled_base_sepolia_event_name__OrderSettled.b82d60a6cd", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderSettled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.099247Z", "completed_at": "2025-03-04T12:53:01.106608Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.113295Z", "completed_at": "2025-03-04T12:53:01.113304Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023407697677612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_base_sepolia_account_id__True__0.dd4d18c933", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.108656Z", "completed_at": "2025-03-04T12:53:01.122907Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.125430Z", "completed_at": "2025-03-04T12:53:01.125438Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021623611450195312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_base_sepolia_collected_fees__True__0.cfcb7626da", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.115084Z", "completed_at": "2025-03-04T12:53:01.124249Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.126920Z", "completed_at": "2025-03-04T12:53:01.126927Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02179861068725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_order_settled_base_sepolia_market_id__True__0.00baab3b06", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.127806Z", "completed_at": "2025-03-04T12:53:01.138819Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.141230Z", "completed_at": "2025-03-04T12:53:01.141240Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019122600555419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_account_id.0505121484", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.132835Z", "completed_at": "2025-03-04T12:53:01.140647Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.147158Z", "completed_at": "2025-03-04T12:53:01.147167Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023656368255615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_block_number.723c9f9ccf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.142710Z", "completed_at": "2025-03-04T12:53:01.154101Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.156169Z", "completed_at": "2025-03-04T12:53:01.156180Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01830577850341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_block_timestamp.8624d8c529", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.148868Z", "completed_at": "2025-03-04T12:53:01.157083Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.159435Z", "completed_at": "2025-03-04T12:53:01.159443Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020182132720947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_collected_fees.19815f72b6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.160357Z", "completed_at": "2025-03-04T12:53:01.173756Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.179952Z", "completed_at": "2025-03-04T12:53:01.179965Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02531147003173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_contract.03742630fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.164695Z", "completed_at": "2025-03-04T12:53:01.178604Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.180968Z", "completed_at": "2025-03-04T12:53:01.180977Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025568008422851562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_event_name.95d61e9b53", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.174389Z", "completed_at": "2025-03-04T12:53:01.181890Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.188230Z", "completed_at": "2025-03-04T12:53:01.188239Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017561674118041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_id.6a51920964", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.182561Z", "completed_at": "2025-03-04T12:53:01.189963Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.192426Z", "completed_at": "2025-03-04T12:53:01.192437Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019466638565063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_market_id.90e9816e9b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.194534Z", "completed_at": "2025-03-04T12:53:01.205516Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.212098Z", "completed_at": "2025-03-04T12:53:01.212110Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02295374870300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_order_settled_base_sepolia_transaction_hash.e40380e103", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.199681Z", "completed_at": "2025-03-04T12:53:01.211509Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.220081Z", "completed_at": "2025-03-04T12:53:01.220090Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029649734497070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_order_settled_base_sepolia_id.52c8b658a1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.206210Z", "completed_at": "2025-03-04T12:53:01.219423Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.221805Z", "completed_at": "2025-03-04T12:53:01.221813Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028012990951538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_position_liquidated_arbitrum_mainnet_event_name__PositionLiquidated.0ec93e93c0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PositionLiquidated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.213142Z", "completed_at": "2025-03-04T12:53:01.223297Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.225892Z", "completed_at": "2025-03-04T12:53:01.225899Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02114129066467285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_arbitrum_mainnet_account_id__True__0.913cfd25f2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.229200Z", "completed_at": "2025-03-04T12:53:01.244255Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.245904Z", "completed_at": "2025-03-04T12:53:01.245914Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022055864334106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_arbitrum_mainnet_amount_liquidated__True__0.284e66108e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_liquidated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.234445Z", "completed_at": "2025-03-04T12:53:01.246818Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.253116Z", "completed_at": "2025-03-04T12:53:01.253124Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028020381927490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_arbitrum_mainnet_current_position_size__True__0.1f4c66d819", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not current_position_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.239751Z", "completed_at": "2025-03-04T12:53:01.247401Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.254105Z", "completed_at": "2025-03-04T12:53:01.254113Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0268704891204834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_arbitrum_mainnet_market_id__True__0.5138d00a1a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.248010Z", "completed_at": "2025-03-04T12:53:01.256546Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.259021Z", "completed_at": "2025-03-04T12:53:01.259031Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02018570899963379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_account_id.c6ae3fbdf6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.260538Z", "completed_at": "2025-03-04T12:53:01.273248Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.279068Z", "completed_at": "2025-03-04T12:53:01.279077Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02407240867614746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_amount_liquidated.85c1ba4ec8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_liquidated\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere amount_liquidated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.267136Z", "completed_at": "2025-03-04T12:53:01.280623Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.286989Z", "completed_at": "2025-03-04T12:53:01.286998Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028735876083374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_block_number.5467c2494c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.274527Z", "completed_at": "2025-03-04T12:53:01.286243Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.288654Z", "completed_at": "2025-03-04T12:53:01.288661Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028852224349975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_block_timestamp.2e92e4c30d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.282076Z", "completed_at": "2025-03-04T12:53:01.290147Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.292738Z", "completed_at": "2025-03-04T12:53:01.292748Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018986225128173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_contract.bde78fd4de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.293626Z", "completed_at": "2025-03-04T12:53:01.305396Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.311319Z", "completed_at": "2025-03-04T12:53:01.311332Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023529529571533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_current_position_size.2f7c9b0c99", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect current_position_size\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere current_position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.301089Z", "completed_at": "2025-03-04T12:53:01.312263Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.314280Z", "completed_at": "2025-03-04T12:53:01.314288Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022357940673828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_event_name.badd34253b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.306923Z", "completed_at": "2025-03-04T12:53:01.315140Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.323227Z", "completed_at": "2025-03-04T12:53:01.323237Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024970531463623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_id.1013d30960", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.315763Z", "completed_at": "2025-03-04T12:53:01.324917Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.331308Z", "completed_at": "2025-03-04T12:53:01.331321Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025280237197875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_market_id.f123e58c83", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.326815Z", "completed_at": "2025-03-04T12:53:01.338609Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.340808Z", "completed_at": "2025-03-04T12:53:01.340819Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018976688385009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_mainnet_transaction_hash.bc9ed917d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.334344Z", "completed_at": "2025-03-04T12:53:01.341713Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.348170Z", "completed_at": "2025-03-04T12:53:01.348178Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022797107696533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_position_liquidated_arbitrum_mainnet_id.f231e459dd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.342290Z", "completed_at": "2025-03-04T12:53:01.354694Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.356761Z", "completed_at": "2025-03-04T12:53:01.356770Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02399730682373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_position_liquidated_arbitrum_sepolia_event_name__PositionLiquidated.8a0af4d18c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PositionLiquidated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.349258Z", "completed_at": "2025-03-04T12:53:01.357601Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.364181Z", "completed_at": "2025-03-04T12:53:01.364194Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024290084838867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_arbitrum_sepolia_account_id__True__0.dd5e38b371", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.358855Z", "completed_at": "2025-03-04T12:53:01.367243Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.375663Z", "completed_at": "2025-03-04T12:53:01.375672Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02183818817138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_arbitrum_sepolia_amount_liquidated__True__0.f820c88c54", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_liquidated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.367907Z", "completed_at": "2025-03-04T12:53:01.381897Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.388287Z", "completed_at": "2025-03-04T12:53:01.388298Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030234336853027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_arbitrum_sepolia_current_position_size__True__0.f5183b3ff9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not current_position_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.376667Z", "completed_at": "2025-03-04T12:53:01.387725Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.390061Z", "completed_at": "2025-03-04T12:53:01.390068Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02419281005859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_arbitrum_sepolia_market_id__True__0.c1cfe90353", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.383287Z", "completed_at": "2025-03-04T12:53:01.391597Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.394170Z", "completed_at": "2025-03-04T12:53:01.394180Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01927971839904785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_account_id.8c9a3c7cb5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.395059Z", "completed_at": "2025-03-04T12:53:01.402371Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.414360Z", "completed_at": "2025-03-04T12:53:01.414370Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025217294692993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_amount_liquidated.2b3c4071f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_liquidated\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere amount_liquidated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.402967Z", "completed_at": "2025-03-04T12:53:01.421337Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.423255Z", "completed_at": "2025-03-04T12:53:01.423264Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029869556427001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_block_number.13ef61c2cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.408219Z", "completed_at": "2025-03-04T12:53:01.422554Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.425370Z", "completed_at": "2025-03-04T12:53:01.425377Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02579188346862793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_block_timestamp.9c42b4a7ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.416931Z", "completed_at": "2025-03-04T12:53:01.424170Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.426941Z", "completed_at": "2025-03-04T12:53:01.426948Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019594192504882812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_contract.f6b0610ff4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.427842Z", "completed_at": "2025-03-04T12:53:01.436084Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.442270Z", "completed_at": "2025-03-04T12:53:01.442280Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02048349380493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_current_position_size.48d8db66c7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect current_position_size\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere current_position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.437863Z", "completed_at": "2025-03-04T12:53:01.453289Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.456144Z", "completed_at": "2025-03-04T12:53:01.456154Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02303171157836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_event_name.b8b10783cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.443889Z", "completed_at": "2025-03-04T12:53:01.454967Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.457664Z", "completed_at": "2025-03-04T12:53:01.457671Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02294635772705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_id.2b7f1d2fcf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.449061Z", "completed_at": "2025-03-04T12:53:01.455585Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.458555Z", "completed_at": "2025-03-04T12:53:01.458566Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02199554443359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_market_id.3c1a2d74dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.460118Z", "completed_at": "2025-03-04T12:53:01.470224Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.472575Z", "completed_at": "2025-03-04T12:53:01.472585Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018551111221313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_arbitrum_sepolia_transaction_hash.ad296550e8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.477726Z", "completed_at": "2025-03-04T12:53:01.488237Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.490211Z", "completed_at": "2025-03-04T12:53:01.490231Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021364450454711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_position_liquidated_base_mainnet_event_name__PositionLiquidated.71fb40cadb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PositionLiquidated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.482372Z", "completed_at": "2025-03-04T12:53:01.489610Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.492314Z", "completed_at": "2025-03-04T12:53:01.492322Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022764205932617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_base_mainnet_account_id__True__0.4dca14dbcd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.473426Z", "completed_at": "2025-03-04T12:53:01.491153Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.493914Z", "completed_at": "2025-03-04T12:53:01.493923Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02591538429260254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_position_liquidated_arbitrum_sepolia_id.efb42ae977", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.494808Z", "completed_at": "2025-03-04T12:53:01.502947Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.509437Z", "completed_at": "2025-03-04T12:53:01.509451Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020706892013549805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_base_mainnet_amount_liquidated__True__0.be0c7ea09d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_liquidated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.504743Z", "completed_at": "2025-03-04T12:53:01.522438Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.524039Z", "completed_at": "2025-03-04T12:53:01.524048Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02392578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_base_mainnet_current_position_size__True__0.f59eb84311", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not current_position_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.511065Z", "completed_at": "2025-03-04T12:53:01.524923Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.527316Z", "completed_at": "2025-03-04T12:53:01.527323Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025790691375732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_base_mainnet_market_id__True__0.f77ba4ae2f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.518165Z", "completed_at": "2025-03-04T12:53:01.525543Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.528253Z", "completed_at": "2025-03-04T12:53:01.528261Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024812936782836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_account_id.498f567370", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.529148Z", "completed_at": "2025-03-04T12:53:01.536574Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.542781Z", "completed_at": "2025-03-04T12:53:01.542793Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019726276397705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_amount_liquidated.29ad6c9103", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_liquidated\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere amount_liquidated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.538421Z", "completed_at": "2025-03-04T12:53:01.545675Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.555709Z", "completed_at": "2025-03-04T12:53:01.555719Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022119998931884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_block_number.a7b9be436d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.550659Z", "completed_at": "2025-03-04T12:53:01.557619Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.565709Z", "completed_at": "2025-03-04T12:53:01.565720Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028006553649902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_contract.16d824dbca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.546322Z", "completed_at": "2025-03-04T12:53:01.558227Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.566619Z", "completed_at": "2025-03-04T12:53:01.566627Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0295412540435791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_block_timestamp.7e8e3434f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.559473Z", "completed_at": "2025-03-04T12:53:01.568925Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.571391Z", "completed_at": "2025-03-04T12:53:01.571399Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01663064956665039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_current_position_size.b48e72d00b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect current_position_size\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere current_position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.572887Z", "completed_at": "2025-03-04T12:53:01.584438Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.590311Z", "completed_at": "2025-03-04T12:53:01.590322Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022962093353271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_event_name.321097aa34", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.579382Z", "completed_at": "2025-03-04T12:53:01.591179Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.597787Z", "completed_at": "2025-03-04T12:53:01.597796Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027132272720336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_id.32c367bb62", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.585049Z", "completed_at": "2025-03-04T12:53:01.597175Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.600080Z", "completed_at": "2025-03-04T12:53:01.600090Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027934789657592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_market_id.564386819e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.591936Z", "completed_at": "2025-03-04T12:53:01.599528Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.602375Z", "completed_at": "2025-03-04T12:53:01.602383Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01874232292175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_mainnet_transaction_hash.c67a9607db", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.604568Z", "completed_at": "2025-03-04T12:53:01.611945Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.620886Z", "completed_at": "2025-03-04T12:53:01.620901Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0222318172454834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_position_liquidated_base_mainnet_id.922d3c5143", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.613100Z", "completed_at": "2025-03-04T12:53:01.632271Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.633950Z", "completed_at": "2025-03-04T12:53:01.633961Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030167341232299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_position_liquidated_base_sepolia_event_name__PositionLiquidated.e07d1e03f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PositionLiquidated'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.627146Z", "completed_at": "2025-03-04T12:53:01.634996Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.637510Z", "completed_at": "2025-03-04T12:53:01.637519Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02632451057434082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_base_sepolia_amount_liquidated__True__0.20b97e678b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_liquidated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.621897Z", "completed_at": "2025-03-04T12:53:01.635554Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.638384Z", "completed_at": "2025-03-04T12:53:01.638395Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028713464736938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_base_sepolia_account_id__True__0.a60e1cbb90", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.641915Z", "completed_at": "2025-03-04T12:53:01.653786Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.655724Z", "completed_at": "2025-03-04T12:53:01.655734Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019690990447998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_base_sepolia_current_position_size__True__0.cf9da7d717", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not current_position_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.649025Z", "completed_at": "2025-03-04T12:53:01.656637Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.668961Z", "completed_at": "2025-03-04T12:53:01.668972Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029154539108276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_position_liquidated_base_sepolia_market_id__True__0.c5145fd027", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.661634Z", "completed_at": "2025-03-04T12:53:01.670849Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.673288Z", "completed_at": "2025-03-04T12:53:01.673296Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02515268325805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_amount_liquidated.c878a441e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_liquidated\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere amount_liquidated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.657203Z", "completed_at": "2025-03-04T12:53:01.672043Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.674851Z", "completed_at": "2025-03-04T12:53:01.674858Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027334213256835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_account_id.8e9f2c1b4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.675728Z", "completed_at": "2025-03-04T12:53:01.688194Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.690176Z", "completed_at": "2025-03-04T12:53:01.690185Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020144939422607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_block_number.d05dfab674", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.683090Z", "completed_at": "2025-03-04T12:53:01.691032Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.701506Z", "completed_at": "2025-03-04T12:53:01.701518Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027424335479736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_block_timestamp.1700de694b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.691664Z", "completed_at": "2025-03-04T12:53:01.703382Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.705981Z", "completed_at": "2025-03-04T12:53:01.705992Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023732423782348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_contract.0a66db5700", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.696089Z", "completed_at": "2025-03-04T12:53:01.704807Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.707523Z", "completed_at": "2025-03-04T12:53:01.707532Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020191669464111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_current_position_size.f98475edcb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect current_position_size\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere current_position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.708387Z", "completed_at": "2025-03-04T12:53:01.715728Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.723756Z", "completed_at": "2025-03-04T12:53:01.723768Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021082639694213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_event_name.1d2d01fa50", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.716303Z", "completed_at": "2025-03-04T12:53:01.730413Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.736316Z", "completed_at": "2025-03-04T12:53:01.736327Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02955007553100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_id.985f2af114", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.725366Z", "completed_at": "2025-03-04T12:53:01.737218Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.740423Z", "completed_at": "2025-03-04T12:53:01.740432Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02555990219116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_market_id.6c389de6f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.731097Z", "completed_at": "2025-03-04T12:53:01.739727Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.746835Z", "completed_at": "2025-03-04T12:53:01.746843Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02546381950378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_position_liquidated_base_sepolia_transaction_hash.b180fd2627", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.741614Z", "completed_at": "2025-03-04T12:53:01.749194Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.755082Z", "completed_at": "2025-03-04T12:53:01.755094Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019634246826171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_position_liquidated_base_sepolia_id.e92f27d6e6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.751147Z", "completed_at": "2025-03-04T12:53:01.758856Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.772430Z", "completed_at": "2025-03-04T12:53:01.772445Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026450634002685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_previous_order_expired_arbitrum_mainnet", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp,\n    block_number,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    tracking_code,\n    \n    acceptable_price / 1e18\n as acceptable_price,\n    \n    size_delta / 1e18\n as size_delta\nfrom\n    \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.759485Z", "completed_at": "2025-03-04T12:53:01.774592Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.782106Z", "completed_at": "2025-03-04T12:53:01.782120Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03174161911010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_previous_order_expired_arbitrum_mainnet_event_name__PreviousOrderExpired.d975ca95c5", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PreviousOrderExpired'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.765409Z", "completed_at": "2025-03-04T12:53:01.775794Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.783751Z", "completed_at": "2025-03-04T12:53:01.783759Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027782678604125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_previous_order_expired_arbitrum_mainnet_account_id__True__0.865d3fe2e6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.776848Z", "completed_at": "2025-03-04T12:53:01.785570Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.788147Z", "completed_at": "2025-03-04T12:53:01.788156Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02364802360534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_previous_order_expired_arbitrum_mainnet_market_id__True__0.148ea7d706", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.789037Z", "completed_at": "2025-03-04T12:53:01.797047Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.808683Z", "completed_at": "2025-03-04T12:53:01.808702Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025762557983398438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_mainnet_account_id.edc81bcacb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.797648Z", "completed_at": "2025-03-04T12:53:01.810620Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.817403Z", "completed_at": "2025-03-04T12:53:01.817418Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030099153518676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_mainnet_block_number.c6957a09df", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.803577Z", "completed_at": "2025-03-04T12:53:01.816750Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.819247Z", "completed_at": "2025-03-04T12:53:01.819258Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025092363357543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_mainnet_block_timestamp.62addf704c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.812131Z", "completed_at": "2025-03-04T12:53:01.820116Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.822673Z", "completed_at": "2025-03-04T12:53:01.822682Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019932985305786133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_mainnet_contract.f99120143b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.824255Z", "completed_at": "2025-03-04T12:53:01.835069Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.845993Z", "completed_at": "2025-03-04T12:53:01.846008Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0277254581451416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_mainnet_event_name.08acd6a68f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.840549Z", "completed_at": "2025-03-04T12:53:01.853020Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.855853Z", "completed_at": "2025-03-04T12:53:01.855866Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024358272552490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_mainnet_market_id.3161a33570", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.835660Z", "completed_at": "2025-03-04T12:53:01.854655Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.857530Z", "completed_at": "2025-03-04T12:53:01.857539Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03403592109680176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_mainnet_id.ced9ec6a1d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.847256Z", "completed_at": "2025-03-04T12:53:01.855220Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.858445Z", "completed_at": "2025-03-04T12:53:01.858454Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024179458618164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_mainnet_transaction_hash.ccc5cbafcd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.860090Z", "completed_at": "2025-03-04T12:53:01.868613Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.871078Z", "completed_at": "2025-03-04T12:53:01.871092Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017284631729125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_previous_order_expired_arbitrum_mainnet_id.cd7a82db0e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_previous_order_expired_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.872013Z", "completed_at": "2025-03-04T12:53:01.889978Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.892573Z", "completed_at": "2025-03-04T12:53:01.892587Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026174068450927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_previous_order_expired_arbitrum_sepolia", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp,\n    block_number,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    tracking_code,\n    \n    acceptable_price / 1e18\n as acceptable_price,\n    \n    size_delta / 1e18\n as size_delta\nfrom\n    \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.878521Z", "completed_at": "2025-03-04T12:53:01.891350Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.894095Z", "completed_at": "2025-03-04T12:53:01.894106Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026893138885498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_previous_order_expired_arbitrum_sepolia_event_name__PreviousOrderExpired.2b0854c0bd", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PreviousOrderExpired'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.883668Z", "completed_at": "2025-03-04T12:53:01.891996Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.895027Z", "completed_at": "2025-03-04T12:53:01.895034Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027123212814331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_previous_order_expired_arbitrum_sepolia_account_id__True__0.a0e11cc082", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.896712Z", "completed_at": "2025-03-04T12:53:01.905368Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.907806Z", "completed_at": "2025-03-04T12:53:01.907817Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017225980758666992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_previous_order_expired_arbitrum_sepolia_market_id__True__0.32d6a1d4a7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.909311Z", "completed_at": "2025-03-04T12:53:01.928576Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.931083Z", "completed_at": "2025-03-04T12:53:01.931095Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027339935302734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_sepolia_account_id.3387518ced", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.914650Z", "completed_at": "2025-03-04T12:53:01.929310Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.932041Z", "completed_at": "2025-03-04T12:53:01.932049Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027433156967163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_sepolia_block_number.1bfe765de5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.920406Z", "completed_at": "2025-03-04T12:53:01.930537Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.937826Z", "completed_at": "2025-03-04T12:53:01.937839Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03199052810668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_sepolia_block_timestamp.3d7306e577", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.932954Z", "completed_at": "2025-03-04T12:53:01.941149Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.943697Z", "completed_at": "2025-03-04T12:53:01.943708Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015961170196533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_sepolia_contract.9dc88c3682", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.947059Z", "completed_at": "2025-03-04T12:53:01.962887Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.965326Z", "completed_at": "2025-03-04T12:53:01.965339Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023716211318969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_sepolia_event_name.c814e3bcf9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.952335Z", "completed_at": "2025-03-04T12:53:01.963524Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.966282Z", "completed_at": "2025-03-04T12:53:01.966293Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023979663848876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_sepolia_id.0d3172a155", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.957063Z", "completed_at": "2025-03-04T12:53:01.964149Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.967186Z", "completed_at": "2025-03-04T12:53:01.967193Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024230003356933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_sepolia_market_id.7e2a2424c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.968071Z", "completed_at": "2025-03-04T12:53:01.977031Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:01.979410Z", "completed_at": "2025-03-04T12:53:01.979420Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0179288387298584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_arbitrum_sepolia_transaction_hash.5f4b3fa383", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.988028Z", "completed_at": "2025-03-04T12:53:01.999324Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.001368Z", "completed_at": "2025-03-04T12:53:02.001380Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025181293487548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_previous_order_expired_base_mainnet", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp,\n    block_number,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    tracking_code,\n    \n    acceptable_price / 1e18\n as acceptable_price,\n    \n    size_delta / 1e18\n as size_delta\nfrom\n    \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.993045Z", "completed_at": "2025-03-04T12:53:02.000800Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.008444Z", "completed_at": "2025-03-04T12:53:02.008480Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03103017807006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_previous_order_expired_base_mainnet_event_name__PreviousOrderExpired.a675fe5038", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PreviousOrderExpired'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:01.980958Z", "completed_at": "2025-03-04T12:53:02.002293Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.010185Z", "completed_at": "2025-03-04T12:53:02.010194Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03463339805603027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_previous_order_expired_arbitrum_sepolia_id.a6e03f8ffa", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_previous_order_expired_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.002915Z", "completed_at": "2025-03-04T12:53:02.013083Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.015844Z", "completed_at": "2025-03-04T12:53:02.015857Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017667770385742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_previous_order_expired_base_mainnet_account_id__True__0.e4b1283a09", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.018003Z", "completed_at": "2025-03-04T12:53:02.030991Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.040344Z", "completed_at": "2025-03-04T12:53:02.040358Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028192758560180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_previous_order_expired_base_mainnet_market_id__True__0.edc1c768de", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.024972Z", "completed_at": "2025-03-04T12:53:02.041499Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.049045Z", "completed_at": "2025-03-04T12:53:02.049057Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03488588333129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_mainnet_account_id.c8037fd435", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.031635Z", "completed_at": "2025-03-04T12:53:02.048308Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.050901Z", "completed_at": "2025-03-04T12:53:02.050911Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03423762321472168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_mainnet_block_number.a563a713e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.042123Z", "completed_at": "2025-03-04T12:53:02.051750Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.054268Z", "completed_at": "2025-03-04T12:53:02.054276Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024144411087036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_mainnet_block_timestamp.8433c78b93", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.055878Z", "completed_at": "2025-03-04T12:53:02.069595Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.075768Z", "completed_at": "2025-03-04T12:53:02.075784Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02576470375061035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_mainnet_contract.5eed227a76", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.064563Z", "completed_at": "2025-03-04T12:53:02.081366Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.083449Z", "completed_at": "2025-03-04T12:53:02.083474Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028373003005981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_mainnet_event_name.14c38c565c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.070306Z", "completed_at": "2025-03-04T12:53:02.081953Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.084995Z", "completed_at": "2025-03-04T12:53:02.085005Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024086952209472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_mainnet_id.bc7a46deda", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.076917Z", "completed_at": "2025-03-04T12:53:02.084412Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.087230Z", "completed_at": "2025-03-04T12:53:02.087238Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023493528366088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_mainnet_market_id.3b39458251", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.091333Z", "completed_at": "2025-03-04T12:53:02.109162Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.114763Z", "completed_at": "2025-03-04T12:53:02.114776Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02901315689086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_mainnet_transaction_hash.97e2d12b2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.100282Z", "completed_at": "2025-03-04T12:53:02.115772Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.117904Z", "completed_at": "2025-03-04T12:53:02.117913Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028640270233154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_previous_order_expired_base_mainnet_id.f02978148f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"perp_previous_order_expired_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.105394Z", "completed_at": "2025-03-04T12:53:02.117207Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.120021Z", "completed_at": "2025-03-04T12:53:02.120029Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029407262802124023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_previous_order_expired_base_sepolia", "compiled": true, "compiled_code": "select\n    id,\n    block_timestamp,\n    block_number,\n    transaction_hash,\n    contract,\n    event_name,\n    market_id,\n    account_id,\n    commitment_time,\n    tracking_code,\n    \n    acceptable_price / 1e18\n as acceptable_price,\n    \n    size_delta / 1e18\n as size_delta\nfrom\n    \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.109923Z", "completed_at": "2025-03-04T12:53:02.118765Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.121609Z", "completed_at": "2025-03-04T12:53:02.121617Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022954225540161133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_perp_previous_order_expired_base_sepolia_event_name__PreviousOrderExpired.1a5af6cb8b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PreviousOrderExpired'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.125377Z", "completed_at": "2025-03-04T12:53:02.137779Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.145720Z", "completed_at": "2025-03-04T12:53:02.145734Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026517629623413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_previous_order_expired_base_sepolia_account_id__True__0.7ed9f71601", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.133031Z", "completed_at": "2025-03-04T12:53:02.152260Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.154808Z", "completed_at": "2025-03-04T12:53:02.154819Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030866622924804688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_perp_previous_order_expired_base_sepolia_market_id__True__0.92c22b0d98", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.139055Z", "completed_at": "2025-03-04T12:53:02.152860Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.155734Z", "completed_at": "2025-03-04T12:53:02.155745Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02552032470703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_sepolia_account_id.358a8acfe7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.146722Z", "completed_at": "2025-03-04T12:53:02.154141Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.157204Z", "completed_at": "2025-03-04T12:53:02.157214Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025676488876342773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_sepolia_block_number.b44f0bbf4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.159428Z", "completed_at": "2025-03-04T12:53:02.167811Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.174168Z", "completed_at": "2025-03-04T12:53:02.174182Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02077960968017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_sepolia_block_timestamp.2056bbf796", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.169649Z", "completed_at": "2025-03-04T12:53:02.186769Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.189613Z", "completed_at": "2025-03-04T12:53:02.189625Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024585485458374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_sepolia_contract.d5ae4c2080", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.175114Z", "completed_at": "2025-03-04T12:53:02.187697Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.190527Z", "completed_at": "2025-03-04T12:53:02.190538Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024800539016723633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_sepolia_event_name.94027cf5fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.179613Z", "completed_at": "2025-03-04T12:53:02.189032Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.191994Z", "completed_at": "2025-03-04T12:53:02.192004Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025495529174804688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_sepolia_id.35380c8364", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.194201Z", "completed_at": "2025-03-04T12:53:02.202515Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.209379Z", "completed_at": "2025-03-04T12:53:02.209394Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021246910095214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_sepolia_market_id.c3963e0426", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.210510Z", "completed_at": "2025-03-04T12:53:02.221130Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.223734Z", "completed_at": "2025-03-04T12:53:02.223747Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023401975631713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_perp_previous_order_expired_base_sepolia_id.a9c841c5f7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.204266Z", "completed_at": "2025-03-04T12:53:02.221887Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.224661Z", "completed_at": "2025-03-04T12:53:02.224669Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024950027465820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_perp_previous_order_expired_base_sepolia_transaction_hash.47402badfc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"perp_previous_order_expired_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.215061Z", "completed_at": "2025-03-04T12:53:02.223129Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.226112Z", "completed_at": "2025-03-04T12:53:02.226120Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025000572204589844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spartan_vote_recorded_snax_mainnet_event_name__VoteRecorded.ca880b79ec", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VoteRecorded'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.228339Z", "completed_at": "2025-03-04T12:53:02.237338Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.249879Z", "completed_at": "2025-03-04T12:53:02.249893Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027534961700439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_block_number.74de43fe96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.245316Z", "completed_at": "2025-03-04T12:53:02.255582Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.257705Z", "completed_at": "2025-03-04T12:53:02.257715Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023101329803466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_candidates.a620a4a121", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect candidates\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere candidates is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.238536Z", "completed_at": "2025-03-04T12:53:02.256164Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.259214Z", "completed_at": "2025-03-04T12:53:02.259225Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02544260025024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_block_timestamp.bf4010dd91", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.250929Z", "completed_at": "2025-03-04T12:53:02.258638Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.261401Z", "completed_at": "2025-03-04T12:53:02.261409Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0260467529296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_chain_id.838e4c7a7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect chain_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere chain_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.265590Z", "completed_at": "2025-03-04T12:53:02.277395Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.288866Z", "completed_at": "2025-03-04T12:53:02.288880Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02888965606689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_contract.2f2ea67860", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.272391Z", "completed_at": "2025-03-04T12:53:02.289775Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.291412Z", "completed_at": "2025-03-04T12:53:02.291421Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027902841567993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_epoch_id.421abaf123", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect epoch_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere epoch_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.282542Z", "completed_at": "2025-03-04T12:53:02.292264Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.294779Z", "completed_at": "2025-03-04T12:53:02.294787Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023932456970214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_id.c54eaad82a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.278034Z", "completed_at": "2025-03-04T12:53:02.293521Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.296238Z", "completed_at": "2025-03-04T12:53:02.296246Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03139972686767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_event_name.f0e8e4e02b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.298365Z", "completed_at": "2025-03-04T12:53:02.305968Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.312188Z", "completed_at": "2025-03-04T12:53:02.312197Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01940011978149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_transaction_hash.f8b7b79d0d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.306556Z", "completed_at": "2025-03-04T12:53:02.317756Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.323457Z", "completed_at": "2025-03-04T12:53:02.323485Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02647686004638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_voter.8b917cfb88", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voter\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere voter is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.313232Z", "completed_at": "2025-03-04T12:53:02.325220Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.327758Z", "completed_at": "2025-03-04T12:53:02.327770Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02339029312133789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_recorded_snax_mainnet_voting_power.289d3b2c0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voting_power\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere voting_power is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.318319Z", "completed_at": "2025-03-04T12:53:02.327148Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.333641Z", "completed_at": "2025-03-04T12:53:02.333649Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028516530990600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spartan_vote_recorded_snax_mainnet_id.3a579d9ca6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.329278Z", "completed_at": "2025-03-04T12:53:02.337268Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.345626Z", "completed_at": "2025-03-04T12:53:02.345635Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02111053466796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spartan_vote_recorded_snax_mainnet_transaction_hash.49632d745f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_hash as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_recorded_snax_mainnet\"\nwhere transaction_hash is not null\ngroup by transaction_hash\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.337897Z", "completed_at": "2025-03-04T12:53:02.351680Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.357582Z", "completed_at": "2025-03-04T12:53:02.357593Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029044628143310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spartan_vote_withdrawn_snax_mainnet_chain_id__2192__10__1__8453__42161.8c40a37fe3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        chain_id as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\n    group by chain_id\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '2192','10','1','8453','42161'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.347217Z", "completed_at": "2025-03-04T12:53:02.358510Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.360615Z", "completed_at": "2025-03-04T12:53:02.360626Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024082422256469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spartan_vote_withdrawn_snax_mainnet_event_name__VoteWithdrawn.108485caef", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VoteWithdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.353070Z", "completed_at": "2025-03-04T12:53:02.361421Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.363902Z", "completed_at": "2025-03-04T12:53:02.363910Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01966071128845215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_block_number.8781742caa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.364778Z", "completed_at": "2025-03-04T12:53:02.375748Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.377899Z", "completed_at": "2025-03-04T12:53:02.377911Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018924236297607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_block_timestamp.ed575d0da2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.371415Z", "completed_at": "2025-03-04T12:53:02.378831Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.385074Z", "completed_at": "2025-03-04T12:53:02.385085Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022604703903198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_chain_id.d9d9b4234a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect chain_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere chain_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.379378Z", "completed_at": "2025-03-04T12:53:02.392425Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.394603Z", "completed_at": "2025-03-04T12:53:02.394613Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024799346923828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_contract.8eb7f37781", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.386215Z", "completed_at": "2025-03-04T12:53:02.395505Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.397971Z", "completed_at": "2025-03-04T12:53:02.397979Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02094554901123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_epoch_id.d4f6724aef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect epoch_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere epoch_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.398843Z", "completed_at": "2025-03-04T12:53:02.410363Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.412299Z", "completed_at": "2025-03-04T12:53:02.412310Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019385099411010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_event_name.269927edcc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.405817Z", "completed_at": "2025-03-04T12:53:02.413221Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.419606Z", "completed_at": "2025-03-04T12:53:02.419620Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0230710506439209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_id.c3b897a816", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.413813Z", "completed_at": "2025-03-04T12:53:02.425292Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.427398Z", "completed_at": "2025-03-04T12:53:02.427407Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023395299911499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_transaction_hash.3da8fc32ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.420668Z", "completed_at": "2025-03-04T12:53:02.428911Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.435298Z", "completed_at": "2025-03-04T12:53:02.435310Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023890018463134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spartan_vote_withdrawn_snax_mainnet_voter.5532367fa9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voter\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere voter is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.430799Z", "completed_at": "2025-03-04T12:53:02.443514Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.446595Z", "completed_at": "2025-03-04T12:53:02.446607Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0208282470703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spartan_vote_withdrawn_snax_mainnet_id.cd6cb96b4a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.438398Z", "completed_at": "2025-03-04T12:53:02.452683Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.458738Z", "completed_at": "2025-03-04T12:53:02.458752Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029389381408691406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spartan_vote_withdrawn_snax_mainnet_transaction_hash.c04b524f41", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_hash as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"spartan_vote_withdrawn_snax_mainnet\"\nwhere transaction_hash is not null\ngroup by transaction_hash\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.447609Z", "completed_at": "2025-03-04T12:53:02.460535Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.463190Z", "completed_at": "2025-03-04T12:53:02.463198Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02640676498413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_cancelled_arbitrum_mainnet_event_name__OrderCancelled.bcb12d7741", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCancelled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.454135Z", "completed_at": "2025-03-04T12:53:02.461992Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.464742Z", "completed_at": "2025-03-04T12:53:02.464749Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018915653228759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_cancelled_arbitrum_mainnet_market_id__True__0.8d08288d1d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.465620Z", "completed_at": "2025-03-04T12:53:02.473276Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.479818Z", "completed_at": "2025-03-04T12:53:02.479832Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02005743980407715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_mainnet_block_number.a85db0bd00", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.473906Z", "completed_at": "2025-03-04T12:53:02.486087Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.494592Z", "completed_at": "2025-03-04T12:53:02.494608Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030663728713989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_mainnet_block_timestamp.a2656a614b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.481490Z", "completed_at": "2025-03-04T12:53:02.495539Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.497772Z", "completed_at": "2025-03-04T12:53:02.497781Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02523946762084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_mainnet_contract.cc9a04e73e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.487576Z", "completed_at": "2025-03-04T12:53:02.498657Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.501152Z", "completed_at": "2025-03-04T12:53:02.501160Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022811174392700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_mainnet_event_name.f29a2c6180", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.502044Z", "completed_at": "2025-03-04T12:53:02.513791Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.515912Z", "completed_at": "2025-03-04T12:53:02.515924Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01987457275390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_mainnet_id.bf2929fb2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.509164Z", "completed_at": "2025-03-04T12:53:02.521491Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.523567Z", "completed_at": "2025-03-04T12:53:02.523575Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023847341537475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_mainnet_market_id.629e55a158", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.516897Z", "completed_at": "2025-03-04T12:53:02.524584Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.531309Z", "completed_at": "2025-03-04T12:53:02.531320Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02378225326538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_mainnet_sender.a796a774d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.525153Z", "completed_at": "2025-03-04T12:53:02.533570Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.539977Z", "completed_at": "2025-03-04T12:53:02.539989Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02501201629638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_mainnet_transaction_hash.43ee88aad5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.534878Z", "completed_at": "2025-03-04T12:53:02.549949Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.555991Z", "completed_at": "2025-03-04T12:53:02.556001Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026381254196166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_cancelled_arbitrum_mainnet_id.de40647c46", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_cancelled_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.541681Z", "completed_at": "2025-03-04T12:53:02.557601Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.564077Z", "completed_at": "2025-03-04T12:53:02.564089Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031231403350830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_cancelled_arbitrum_sepolia_event_name__OrderCancelled.7763c43292", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCancelled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.551334Z", "completed_at": "2025-03-04T12:53:02.558997Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.565722Z", "completed_at": "2025-03-04T12:53:02.565730Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0249173641204834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_cancelled_arbitrum_sepolia_market_id__True__0.047630938a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.559609Z", "completed_at": "2025-03-04T12:53:02.568092Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.574661Z", "completed_at": "2025-03-04T12:53:02.574673Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024234294891357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_sepolia_block_number.6b3267b9d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.569970Z", "completed_at": "2025-03-04T12:53:02.578282Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.588611Z", "completed_at": "2025-03-04T12:53:02.588623Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02368021011352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_sepolia_block_timestamp.5b304e425f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.578892Z", "completed_at": "2025-03-04T12:53:02.591136Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.600048Z", "completed_at": "2025-03-04T12:53:02.600057Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030874967575073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_sepolia_contract.b838860ee1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.584174Z", "completed_at": "2025-03-04T12:53:02.596977Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.600953Z", "completed_at": "2025-03-04T12:53:02.600962Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025442838668823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_sepolia_event_name.e938eb2758", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.591798Z", "completed_at": "2025-03-04T12:53:02.603197Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.609866Z", "completed_at": "2025-03-04T12:53:02.609874Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026445865631103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_sepolia_id.8e031ca154", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.604483Z", "completed_at": "2025-03-04T12:53:02.612706Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.619120Z", "completed_at": "2025-03-04T12:53:02.619130Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019862651824951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_sepolia_market_id.d248c77fa3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.613933Z", "completed_at": "2025-03-04T12:53:02.625922Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.632360Z", "completed_at": "2025-03-04T12:53:02.632371Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023433446884155273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_sepolia_sender.dd378adc77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.620027Z", "completed_at": "2025-03-04T12:53:02.630975Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.633427Z", "completed_at": "2025-03-04T12:53:02.633436Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022800922393798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_arbitrum_sepolia_transaction_hash.7bc3d70f6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.626675Z", "completed_at": "2025-03-04T12:53:02.634285Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.636848Z", "completed_at": "2025-03-04T12:53:02.636859Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018469572067260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_cancelled_arbitrum_sepolia_id.463daca854", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_cancelled_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.637731Z", "completed_at": "2025-03-04T12:53:02.653975Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.659773Z", "completed_at": "2025-03-04T12:53:02.659787Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028322696685791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_cancelled_base_mainnet_event_name__OrderCancelled.468b0aa5ec", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCancelled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.646744Z", "completed_at": "2025-03-04T12:53:02.665272Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.667559Z", "completed_at": "2025-03-04T12:53:02.667569Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02508068084716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_cancelled_base_mainnet_market_id__True__0.9edddeabb3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.654578Z", "completed_at": "2025-03-04T12:53:02.666801Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.669694Z", "completed_at": "2025-03-04T12:53:02.669704Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026572465896606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_mainnet_block_number.59e7d43c87", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.660971Z", "completed_at": "2025-03-04T12:53:02.668407Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.671256Z", "completed_at": "2025-03-04T12:53:02.671266Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025400876998901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_mainnet_block_timestamp.81016bb88f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.674831Z", "completed_at": "2025-03-04T12:53:02.686803Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.692667Z", "completed_at": "2025-03-04T12:53:02.692683Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02379894256591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_mainnet_contract.b45f673add", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.682337Z", "completed_at": "2025-03-04T12:53:02.698844Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.702037Z", "completed_at": "2025-03-04T12:53:02.702048Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02875065803527832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_mainnet_event_name.75d1cf92ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.688087Z", "completed_at": "2025-03-04T12:53:02.702951Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.705611Z", "completed_at": "2025-03-04T12:53:02.705620Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02608203887939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_mainnet_id.5486ce1cb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.693734Z", "completed_at": "2025-03-04T12:53:02.704318Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.707085Z", "completed_at": "2025-03-04T12:53:02.707093Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02622509002685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_mainnet_market_id.3d2e9d2ba5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.709240Z", "completed_at": "2025-03-04T12:53:02.717097Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.723709Z", "completed_at": "2025-03-04T12:53:02.723720Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020169496536254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_mainnet_sender.666cd271e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.717679Z", "completed_at": "2025-03-04T12:53:02.729179Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.735454Z", "completed_at": "2025-03-04T12:53:02.735487Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027637958526611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_mainnet_transaction_hash.524e2820c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.724746Z", "completed_at": "2025-03-04T12:53:02.736578Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.739234Z", "completed_at": "2025-03-04T12:53:02.739243Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02373051643371582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_cancelled_base_mainnet_id.5ac9e5a86c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_cancelled_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.729807Z", "completed_at": "2025-03-04T12:53:02.738575Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.741331Z", "completed_at": "2025-03-04T12:53:02.741339Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025081396102905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_cancelled_base_sepolia_event_name__OrderCancelled.19ae93abc4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCancelled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.743132Z", "completed_at": "2025-03-04T12:53:02.755881Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.759764Z", "completed_at": "2025-03-04T12:53:02.759777Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022672176361083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_cancelled_base_sepolia_market_id__True__0.256744e74d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.750706Z", "completed_at": "2025-03-04T12:53:02.766221Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.772651Z", "completed_at": "2025-03-04T12:53:02.772663Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.032076358795166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_sepolia_block_number.86a31f2f2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.761638Z", "completed_at": "2025-03-04T12:53:02.774303Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.776941Z", "completed_at": "2025-03-04T12:53:02.776949Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027184247970581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_sepolia_block_timestamp.fa9df55b40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.767774Z", "completed_at": "2025-03-04T12:53:02.775747Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.778520Z", "completed_at": "2025-03-04T12:53:02.778528Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02018594741821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_sepolia_contract.0c41210b4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.779371Z", "completed_at": "2025-03-04T12:53:02.791657Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.793803Z", "completed_at": "2025-03-04T12:53:02.793813Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020267248153686523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_sepolia_event_name.860a2e2098", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.787146Z", "completed_at": "2025-03-04T12:53:02.794723Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.801263Z", "completed_at": "2025-03-04T12:53:02.801276Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023582935333251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_sepolia_id.5e9a576929", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.795921Z", "completed_at": "2025-03-04T12:53:02.809512Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.811540Z", "completed_at": "2025-03-04T12:53:02.811550Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025246143341064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_sepolia_market_id.29f20fb008", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.802214Z", "completed_at": "2025-03-04T12:53:02.813071Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.819796Z", "completed_at": "2025-03-04T12:53:02.819806Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02751612663269043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_sepolia_sender.aac13d426e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.813690Z", "completed_at": "2025-03-04T12:53:02.821487Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.827857Z", "completed_at": "2025-03-04T12:53:02.827867Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01915144920349121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_cancelled_base_sepolia_transaction_hash.0752dd402b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.822060Z", "completed_at": "2025-03-04T12:53:02.829596Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.836378Z", "completed_at": "2025-03-04T12:53:02.836387Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024054765701293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_cancelled_base_sepolia_id.0e40062e64", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_cancelled_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.830141Z", "completed_at": "2025-03-04T12:53:02.842987Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.845136Z", "completed_at": "2025-03-04T12:53:02.845146Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024430513381958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_committed_arbitrum_mainnet_event_name__OrderCommitted.e30a77b9b3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCommitted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.838138Z", "completed_at": "2025-03-04T12:53:02.846726Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.853838Z", "completed_at": "2025-03-04T12:53:02.853848Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025075197219848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_committed_arbitrum_mainnet_amount_provided__True__0.a0c5711e24", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_provided >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.847312Z", "completed_at": "2025-03-04T12:53:02.862342Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.864551Z", "completed_at": "2025-03-04T12:53:02.864562Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02727198600769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_committed_arbitrum_mainnet_market_id__True__0.fcb0bd480c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.855553Z", "completed_at": "2025-03-04T12:53:02.865422Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.872224Z", "completed_at": "2025-03-04T12:53:02.872238Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02627396583557129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_amount_provided.618d749652", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_provided\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere amount_provided is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.866721Z", "completed_at": "2025-03-04T12:53:02.875421Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.882411Z", "completed_at": "2025-03-04T12:53:02.882422Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027670860290527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_block_number.bbd3030ffd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.876085Z", "completed_at": "2025-03-04T12:53:02.888812Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.895440Z", "completed_at": "2025-03-04T12:53:02.895452Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029543399810791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_block_timestamp.a4f827fd66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.883426Z", "completed_at": "2025-03-04T12:53:02.894720Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.897136Z", "completed_at": "2025-03-04T12:53:02.897144Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023209333419799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_contract.1d73e820e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.890245Z", "completed_at": "2025-03-04T12:53:02.898708Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.901246Z", "completed_at": "2025-03-04T12:53:02.901254Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01958441734313965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_event_name.364a2ed7fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.902132Z", "completed_at": "2025-03-04T12:53:02.915829Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.921616Z", "completed_at": "2025-03-04T12:53:02.921627Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02537393569946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_id.2bedbed49c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.909446Z", "completed_at": "2025-03-04T12:53:02.922482Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.925164Z", "completed_at": "2025-03-04T12:53:02.925174Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02466297149658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_market_id.eb267aefe6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.917097Z", "completed_at": "2025-03-04T12:53:02.924616Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.931326Z", "completed_at": "2025-03-04T12:53:02.931336Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024775981903076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_order_type.9bedf0c3bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere order_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.926086Z", "completed_at": "2025-03-04T12:53:02.933935Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.940753Z", "completed_at": "2025-03-04T12:53:02.940767Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02444934844970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_referrer.23dc146929", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.935891Z", "completed_at": "2025-03-04T12:53:02.943821Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.950512Z", "completed_at": "2025-03-04T12:53:02.950523Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020112276077270508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_sender.d7cbd6bc05", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.945028Z", "completed_at": "2025-03-04T12:53:02.957203Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.966539Z", "completed_at": "2025-03-04T12:53:02.966552Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03147721290588379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_mainnet_transaction_hash.47ac362f75", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.951423Z", "completed_at": "2025-03-04T12:53:02.965276Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.967576Z", "completed_at": "2025-03-04T12:53:02.967586Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026002168655395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_committed_arbitrum_mainnet_id.715535831f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_committed_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.958014Z", "completed_at": "2025-03-04T12:53:02.968453Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.971126Z", "completed_at": "2025-03-04T12:53:02.971134Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021442413330078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_committed_arbitrum_sepolia_event_name__OrderCommitted.48f82592c2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCommitted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.972100Z", "completed_at": "2025-03-04T12:53:02.980939Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:02.992138Z", "completed_at": "2025-03-04T12:53:02.992150Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026419639587402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_committed_arbitrum_sepolia_amount_provided__True__0.e297093a69", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_provided >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.982247Z", "completed_at": "2025-03-04T12:53:02.994780Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.001488Z", "completed_at": "2025-03-04T12:53:03.001498Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02401256561279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_committed_arbitrum_sepolia_market_id__True__0.156852fc84", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.987485Z", "completed_at": "2025-03-04T12:53:02.995413Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.002383Z", "completed_at": "2025-03-04T12:53:03.002391Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0242612361907959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_amount_provided.b4fbc53f60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_provided\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere amount_provided is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:02.996029Z", "completed_at": "2025-03-04T12:53:03.005419Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.012436Z", "completed_at": "2025-03-04T12:53:03.012447Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031002044677734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_block_number.e402f23638", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.006039Z", "completed_at": "2025-03-04T12:53:03.014071Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.022958Z", "completed_at": "2025-03-04T12:53:03.022974Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022449254989624023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_block_timestamp.053b915e14", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.015982Z", "completed_at": "2025-03-04T12:53:03.030178Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.032644Z", "completed_at": "2025-03-04T12:53:03.032656Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021779775619506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_contract.8724d32b95", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.024070Z", "completed_at": "2025-03-04T12:53:03.031371Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.038019Z", "completed_at": "2025-03-04T12:53:03.038032Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026360273361206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_event_name.10fb9fe2fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.033552Z", "completed_at": "2025-03-04T12:53:03.041196Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.047632Z", "completed_at": "2025-03-04T12:53:03.047640Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019291162490844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_id.3dc77e7585", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.041809Z", "completed_at": "2025-03-04T12:53:03.049809Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.059851Z", "completed_at": "2025-03-04T12:53:03.059860Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027979373931884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_market_id.4600734bce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.055482Z", "completed_at": "2025-03-04T12:53:03.063155Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.071641Z", "completed_at": "2025-03-04T12:53:03.071652Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02478933334350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_referrer.3934248ab9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.051070Z", "completed_at": "2025-03-04T12:53:03.063791Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.072694Z", "completed_at": "2025-03-04T12:53:03.072702Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026613712310791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_order_type.cfe77ca9a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere order_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.065006Z", "completed_at": "2025-03-04T12:53:03.075128Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.081768Z", "completed_at": "2025-03-04T12:53:03.081782Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02113032341003418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_sender.6665c965c9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.076380Z", "completed_at": "2025-03-04T12:53:03.084742Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.091424Z", "completed_at": "2025-03-04T12:53:03.091434Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027218341827392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_arbitrum_sepolia_transaction_hash.44fbdb881f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.085990Z", "completed_at": "2025-03-04T12:53:03.097850Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.104656Z", "completed_at": "2025-03-04T12:53:03.104669Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023734331130981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_committed_arbitrum_sepolia_id.7dddd93b21", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_committed_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.092332Z", "completed_at": "2025-03-04T12:53:03.104047Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.106426Z", "completed_at": "2025-03-04T12:53:03.106434Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02384018898010254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_committed_base_mainnet_event_name__OrderCommitted.7219cd261b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCommitted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.099283Z", "completed_at": "2025-03-04T12:53:03.107298Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.109895Z", "completed_at": "2025-03-04T12:53:03.109902Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019338369369506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_committed_base_mainnet_amount_provided__True__0.9f6ff0bd95", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_provided >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.111419Z", "completed_at": "2025-03-04T12:53:03.119646Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.131967Z", "completed_at": "2025-03-04T12:53:03.131983Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02647852897644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_committed_base_mainnet_market_id__True__0.d412907ad8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.126832Z", "completed_at": "2025-03-04T12:53:03.137504Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.139541Z", "completed_at": "2025-03-04T12:53:03.139550Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02347254753112793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_block_number.b73840a782", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.120253Z", "completed_at": "2025-03-04T12:53:03.138130Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.140486Z", "completed_at": "2025-03-04T12:53:03.140494Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029805898666381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_amount_provided.99b6d3d7c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_provided\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere amount_provided is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.133240Z", "completed_at": "2025-03-04T12:53:03.142020Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.144594Z", "completed_at": "2025-03-04T12:53:03.144605Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025664329528808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_block_timestamp.b355df469e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.146804Z", "completed_at": "2025-03-04T12:53:03.158516Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.166286Z", "completed_at": "2025-03-04T12:53:03.166299Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025058746337890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_contract.2711d7c5f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.159242Z", "completed_at": "2025-03-04T12:53:03.171798Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.173400Z", "completed_at": "2025-03-04T12:53:03.173410Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027390480041503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_id.4e7c563b12", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.154104Z", "completed_at": "2025-03-04T12:53:03.174280Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.176913Z", "completed_at": "2025-03-04T12:53:03.176922Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.031542301177978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_event_name.dc08478d35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.167369Z", "completed_at": "2025-03-04T12:53:03.174910Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.177801Z", "completed_at": "2025-03-04T12:53:03.177811Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024519920349121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_market_id.eb878589ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.181514Z", "completed_at": "2025-03-04T12:53:03.193506Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.195506Z", "completed_at": "2025-03-04T12:53:03.195517Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020074129104614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_order_type.af8cf04472", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere order_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.188735Z", "completed_at": "2025-03-04T12:53:03.205495Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.207261Z", "completed_at": "2025-03-04T12:53:03.207273Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028139829635620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_referrer.773110510c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.196427Z", "completed_at": "2025-03-04T12:53:03.208301Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.210893Z", "completed_at": "2025-03-04T12:53:03.210902Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023698806762695312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_sender.fcb2f6b8e6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.201023Z", "completed_at": "2025-03-04T12:53:03.208912Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.211784Z", "completed_at": "2025-03-04T12:53:03.211795Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023934125900268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_mainnet_transaction_hash.bf2697d39d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.215238Z", "completed_at": "2025-03-04T12:53:03.449365Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.456240Z", "completed_at": "2025-03-04T12:53:03.456255Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.24685978889465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_committed_base_mainnet_id.ebe225e3c1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_committed_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.224196Z", "completed_at": "2025-03-04T12:53:03.455520Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.461925Z", "completed_at": "2025-03-04T12:53:03.461934Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.24881649017333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_committed_base_sepolia_event_name__OrderCommitted.5b70cba35c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderCommitted'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.450787Z", "completed_at": "2025-03-04T12:53:03.463647Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.466417Z", "completed_at": "2025-03-04T12:53:03.466428Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.24384069442749023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_committed_base_sepolia_amount_provided__True__0.054ef0ffa5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_provided >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.457214Z", "completed_at": "2025-03-04T12:53:03.465831Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.468544Z", "completed_at": "2025-03-04T12:53:03.468552Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2452385425567627, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_committed_base_sepolia_market_id__True__0.6632755b0a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.470718Z", "completed_at": "2025-03-04T12:53:03.482398Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.488716Z", "completed_at": "2025-03-04T12:53:03.488732Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023685693740844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_amount_provided.38ad18f779", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_provided\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere amount_provided is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.476526Z", "completed_at": "2025-03-04T12:53:03.483727Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.495809Z", "completed_at": "2025-03-04T12:53:03.495822Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028627634048461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_block_number.9e8c3cbe19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.484311Z", "completed_at": "2025-03-04T12:53:03.497724Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.500317Z", "completed_at": "2025-03-04T12:53:03.500328Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024564027786254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_block_timestamp.8c88551cb4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.489824Z", "completed_at": "2025-03-04T12:53:03.499746Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.502446Z", "completed_at": "2025-03-04T12:53:03.502453Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021581649780273438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_contract.665bb25f85", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.504632Z", "completed_at": "2025-03-04T12:53:03.516250Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.518198Z", "completed_at": "2025-03-04T12:53:03.518208Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019215106964111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_event_name.438812a0d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.510887Z", "completed_at": "2025-03-04T12:53:03.519047Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.529216Z", "completed_at": "2025-03-04T12:53:03.529231Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02814197540283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_id.11a4430aff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.519659Z", "completed_at": "2025-03-04T12:53:03.531222Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.533718Z", "completed_at": "2025-03-04T12:53:03.533727Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02372574806213379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_market_id.15c2459855", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.524123Z", "completed_at": "2025-03-04T12:53:03.531808Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.534599Z", "completed_at": "2025-03-04T12:53:03.534607Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01925516128540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_order_type.3954986bef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere order_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.536081Z", "completed_at": "2025-03-04T12:53:03.545441Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.551635Z", "completed_at": "2025-03-04T12:53:03.551646Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021126270294189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_referrer.7ec29fa647", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.546043Z", "completed_at": "2025-03-04T12:53:03.556964Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.562684Z", "completed_at": "2025-03-04T12:53:03.562696Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027391672134399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_sender.4e585d7f19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.552643Z", "completed_at": "2025-03-04T12:53:03.563786Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.566301Z", "completed_at": "2025-03-04T12:53:03.566311Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02227640151977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_committed_base_sepolia_transaction_hash.9c446b3700", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.557540Z", "completed_at": "2025-03-04T12:53:03.565662Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.568400Z", "completed_at": "2025-03-04T12:53:03.568407Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023709774017333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_committed_base_sepolia_id.3819dc1084", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_committed_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.569973Z", "completed_at": "2025-03-04T12:53:03.582251Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.584795Z", "completed_at": "2025-03-04T12:53:03.584805Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020567655563354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_settled_arbitrum_mainnet_event_name__OrderSettled.c43865614e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderSettled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.576870Z", "completed_at": "2025-03-04T12:53:03.584178Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.596549Z", "completed_at": "2025-03-04T12:53:03.596561Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028914928436279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_arbitrum_mainnet_collected_fees__True__0.e9fce02c77", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.585697Z", "completed_at": "2025-03-04T12:53:03.599909Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.602413Z", "completed_at": "2025-03-04T12:53:03.602424Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02642536163330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_arbitrum_mainnet_final_order_amount__True__0.d78aeda819", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not final_order_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.592045Z", "completed_at": "2025-03-04T12:53:03.601843Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.608694Z", "completed_at": "2025-03-04T12:53:03.608703Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027218341827392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_arbitrum_mainnet_market_id__True__0.498546554e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.603908Z", "completed_at": "2025-03-04T12:53:03.615677Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.617878Z", "completed_at": "2025-03-04T12:53:03.617889Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01873016357421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_arbitrum_mainnet_price__True__0.94dec93a68", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.610287Z", "completed_at": "2025-03-04T12:53:03.618738Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.621157Z", "completed_at": "2025-03-04T12:53:03.621165Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02067708969116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_block_number.876a0a0282", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.622031Z", "completed_at": "2025-03-04T12:53:03.633301Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.641213Z", "completed_at": "2025-03-04T12:53:03.641222Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025002717971801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_block_timestamp.483fdb2a21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.626537Z", "completed_at": "2025-03-04T12:53:03.634609Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.642735Z", "completed_at": "2025-03-04T12:53:03.642743Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02566361427307129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_collected_fees.4c46cfb386", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.635206Z", "completed_at": "2025-03-04T12:53:03.644477Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.650733Z", "completed_at": "2025-03-04T12:53:03.650742Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01992511749267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_contract.7d4f904249", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.645025Z", "completed_at": "2025-03-04T12:53:03.652987Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.659219Z", "completed_at": "2025-03-04T12:53:03.659228Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02538156509399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_event_name.32a64f7398", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.654829Z", "completed_at": "2025-03-04T12:53:03.666705Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.672990Z", "completed_at": "2025-03-04T12:53:03.673006Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02307891845703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_id.1124fb8990", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.660906Z", "completed_at": "2025-03-04T12:53:03.672338Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.674847Z", "completed_at": "2025-03-04T12:53:03.674856Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023229598999023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_market_id.84635206a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.668103Z", "completed_at": "2025-03-04T12:53:03.676369Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.682748Z", "completed_at": "2025-03-04T12:53:03.682759Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022605180740356445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_order_type.cc9846cfde", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_type\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere order_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.677046Z", "completed_at": "2025-03-04T12:53:03.685082Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.693164Z", "completed_at": "2025-03-04T12:53:03.693175Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02587580680847168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_price.3e2897303c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.686936Z", "completed_at": "2025-03-04T12:53:03.700427Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.706598Z", "completed_at": "2025-03-04T12:53:03.706613Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024640798568725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_settler.2f85667062", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settler\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere settler is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.694732Z", "completed_at": "2025-03-04T12:53:03.701802Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.708172Z", "completed_at": "2025-03-04T12:53:03.708182Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024516820907592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_mainnet_transaction_hash.a8b7f93ae5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.702397Z", "completed_at": "2025-03-04T12:53:03.709900Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.716408Z", "completed_at": "2025-03-04T12:53:03.716416Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022461414337158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_settled_arbitrum_mainnet_id.a1ec7e590f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_order_settled_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.710492Z", "completed_at": "2025-03-04T12:53:03.718710Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.725173Z", "completed_at": "2025-03-04T12:53:03.725182Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024137258529663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_settled_arbitrum_sepolia_event_name__OrderSettled.3825809881", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderSettled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.720555Z", "completed_at": "2025-03-04T12:53:03.732926Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.741153Z", "completed_at": "2025-03-04T12:53:03.741163Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025484800338745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_arbitrum_sepolia_collected_fees__True__0.43d000a1f2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.726732Z", "completed_at": "2025-03-04T12:53:03.739394Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.742658Z", "completed_at": "2025-03-04T12:53:03.742668Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025365591049194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_arbitrum_sepolia_final_order_amount__True__0.976f3b49e5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not final_order_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.734312Z", "completed_at": "2025-03-04T12:53:03.749756Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.752046Z", "completed_at": "2025-03-04T12:53:03.752055Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026090383529663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_arbitrum_sepolia_market_id__True__0.6880f35b4a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.744387Z", "completed_at": "2025-03-04T12:53:03.752982Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.755453Z", "completed_at": "2025-03-04T12:53:03.755479Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021941661834716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_arbitrum_sepolia_price__True__0.6c6c67c752", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.756965Z", "completed_at": "2025-03-04T12:53:03.767764Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.773572Z", "completed_at": "2025-03-04T12:53:03.773582Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022656679153442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_block_number.f4d15aa1c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.762728Z", "completed_at": "2025-03-04T12:53:03.774420Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.777052Z", "completed_at": "2025-03-04T12:53:03.777062Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023587465286254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_block_timestamp.4104ea8ae8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.769212Z", "completed_at": "2025-03-04T12:53:03.776388Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.783153Z", "completed_at": "2025-03-04T12:53:03.783162Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02187824249267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_collected_fees.1010c0a5f8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.777966Z", "completed_at": "2025-03-04T12:53:03.786132Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.794175Z", "completed_at": "2025-03-04T12:53:03.794189Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025860071182250977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_contract.2b0e9ad75a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.787427Z", "completed_at": "2025-03-04T12:53:03.796389Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.806311Z", "completed_at": "2025-03-04T12:53:03.806320Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024084091186523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_event_name.51feaa1c12", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.797681Z", "completed_at": "2025-03-04T12:53:03.809648Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.815746Z", "completed_at": "2025-03-04T12:53:03.815755Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029050350189208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_id.61da8ff5ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.801965Z", "completed_at": "2025-03-04T12:53:03.810860Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.817233Z", "completed_at": "2025-03-04T12:53:03.817240Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023810625076293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_market_id.d28592e51d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.811439Z", "completed_at": "2025-03-04T12:53:03.818963Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.825170Z", "completed_at": "2025-03-04T12:53:03.825178Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018054962158203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_order_type.ce3ce512a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_type\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere order_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.819564Z", "completed_at": "2025-03-04T12:53:03.827499Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.833793Z", "completed_at": "2025-03-04T12:53:03.833803Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023688077926635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_price.1a44fe5106", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.829339Z", "completed_at": "2025-03-04T12:53:03.842913Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.849263Z", "completed_at": "2025-03-04T12:53:03.849273Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024888992309570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_settler.709cf86f6a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settler\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere settler is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.835418Z", "completed_at": "2025-03-04T12:53:03.848535Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.850893Z", "completed_at": "2025-03-04T12:53:03.850900Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02476644515991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_arbitrum_sepolia_transaction_hash.e39d83aa1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.844303Z", "completed_at": "2025-03-04T12:53:03.856977Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.859278Z", "completed_at": "2025-03-04T12:53:03.859289Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02460503578186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_settled_arbitrum_sepolia_id.fce4a382d0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_order_settled_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.852530Z", "completed_at": "2025-03-04T12:53:03.860214Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.862691Z", "completed_at": "2025-03-04T12:53:03.862699Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019171476364135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_settled_base_mainnet_event_name__OrderSettled.30376f4577", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderSettled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.864128Z", "completed_at": "2025-03-04T12:53:03.875851Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.881920Z", "completed_at": "2025-03-04T12:53:03.881933Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023661375045776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_base_mainnet_collected_fees__True__0.d7bd810890", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.870359Z", "completed_at": "2025-03-04T12:53:03.882903Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.885705Z", "completed_at": "2025-03-04T12:53:03.885714Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02501082420349121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_base_mainnet_final_order_amount__True__0.285227b4ad", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not final_order_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.877197Z", "completed_at": "2025-03-04T12:53:03.885082Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.894016Z", "completed_at": "2025-03-04T12:53:03.894026Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025146007537841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_base_mainnet_market_id__True__0.57e7a4e22d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.886662Z", "completed_at": "2025-03-04T12:53:03.896991Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.903600Z", "completed_at": "2025-03-04T12:53:03.903610Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027268171310424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_base_mainnet_price__True__0.a69aaf95b9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.898269Z", "completed_at": "2025-03-04T12:53:03.905809Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.916173Z", "completed_at": "2025-03-04T12:53:03.916185Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022997140884399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_block_number.0da3f5f83c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.907068Z", "completed_at": "2025-03-04T12:53:03.918109Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.920602Z", "completed_at": "2025-03-04T12:53:03.920610Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023076534271240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_block_timestamp.d6a06e33d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.911684Z", "completed_at": "2025-03-04T12:53:03.918731Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.921511Z", "completed_at": "2025-03-04T12:53:03.921519Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018833398818969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_collected_fees.f0d64ac401", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.923009Z", "completed_at": "2025-03-04T12:53:03.930354Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.936764Z", "completed_at": "2025-03-04T12:53:03.936776Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01972675323486328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_contract.901410d0f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.931728Z", "completed_at": "2025-03-04T12:53:03.945185Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.951539Z", "completed_at": "2025-03-04T12:53:03.951549Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02929210662841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_event_name.b99840eec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.938353Z", "completed_at": "2025-03-04T12:53:03.950912Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.953712Z", "completed_at": "2025-03-04T12:53:03.953723Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0241391658782959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_id.bee9f4adc9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.945862Z", "completed_at": "2025-03-04T12:53:03.953128Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.959653Z", "completed_at": "2025-03-04T12:53:03.959666Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028849363327026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_market_id.ea53981200", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.955214Z", "completed_at": "2025-03-04T12:53:03.963556Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.965955Z", "completed_at": "2025-03-04T12:53:03.965966Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015848875045776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_order_type.0e7f500a0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_type\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere order_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.966858Z", "completed_at": "2025-03-04T12:53:03.981964Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.984647Z", "completed_at": "2025-03-04T12:53:03.984661Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023411035537719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_price.a8065724a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.972062Z", "completed_at": "2025-03-04T12:53:03.983441Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.986154Z", "completed_at": "2025-03-04T12:53:03.986165Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023491621017456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_settler.32eafc3529", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settler\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere settler is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.977545Z", "completed_at": "2025-03-04T12:53:03.984061Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:03.987063Z", "completed_at": "2025-03-04T12:53:03.987070Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022438764572143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_mainnet_transaction_hash.cc03e5396c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:03.988647Z", "completed_at": "2025-03-04T12:53:03.998440Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.000848Z", "completed_at": "2025-03-04T12:53:04.000861Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01830744743347168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_settled_base_mainnet_id.3552e2a2e6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_order_settled_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.001774Z", "completed_at": "2025-03-04T12:53:04.017086Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.019081Z", "completed_at": "2025-03-04T12:53:04.019092Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022790193557739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_order_settled_base_sepolia_event_name__OrderSettled.177309ebc4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'OrderSettled'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.011210Z", "completed_at": "2025-03-04T12:53:04.018400Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.021151Z", "completed_at": "2025-03-04T12:53:04.021159Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02337646484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_base_sepolia_final_order_amount__True__0.db1eb9bae2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not final_order_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.006399Z", "completed_at": "2025-03-04T12:53:04.019975Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.022726Z", "completed_at": "2025-03-04T12:53:04.022733Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025643587112426758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_base_sepolia_collected_fees__True__0.7f14aa7a7b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.023606Z", "completed_at": "2025-03-04T12:53:04.031139Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.033573Z", "completed_at": "2025-03-04T12:53:04.033584Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01594066619873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_base_sepolia_market_id__True__0.57c7ca8b8a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.039821Z", "completed_at": "2025-03-04T12:53:04.051960Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.054417Z", "completed_at": "2025-03-04T12:53:04.054427Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02403712272644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_block_number.65da819fda", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.034443Z", "completed_at": "2025-03-04T12:53:04.052587Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.055323Z", "completed_at": "2025-03-04T12:53:04.055333Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026351213455200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_order_settled_base_sepolia_price__True__0.be79188042", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.046699Z", "completed_at": "2025-03-04T12:53:04.053831Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.060554Z", "completed_at": "2025-03-04T12:53:04.060566Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028363466262817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_block_timestamp.2af878ee49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.056212Z", "completed_at": "2025-03-04T12:53:04.063875Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.066410Z", "completed_at": "2025-03-04T12:53:04.066419Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015373706817626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_collected_fees.ce03171f19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.074533Z", "completed_at": "2025-03-04T12:53:04.084862Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.087279Z", "completed_at": "2025-03-04T12:53:04.087292Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02226400375366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_event_name.78cc82e3ab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.079143Z", "completed_at": "2025-03-04T12:53:04.086100Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.094449Z", "completed_at": "2025-03-04T12:53:04.094479Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028789758682250977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_id.41dd4b147f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.069699Z", "completed_at": "2025-03-04T12:53:04.086734Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.095371Z", "completed_at": "2025-03-04T12:53:04.095379Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0310060977935791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_contract.70a66ec745", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.088193Z", "completed_at": "2025-03-04T12:53:04.097833Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.100327Z", "completed_at": "2025-03-04T12:53:04.100336Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016867637634277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_market_id.08f8f7cfee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.108988Z", "completed_at": "2025-03-04T12:53:04.118768Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.120648Z", "completed_at": "2025-03-04T12:53:04.120659Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021049022674560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_price.5e737efecc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.104376Z", "completed_at": "2025-03-04T12:53:04.119319Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.121613Z", "completed_at": "2025-03-04T12:53:04.121624Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022649049758911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_order_type.aba0efecf9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_type\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere order_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.114139Z", "completed_at": "2025-03-04T12:53:04.122435Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.128911Z", "completed_at": "2025-03-04T12:53:04.128920Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027834415435791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_settler.3cce2227a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settler\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere settler is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.123042Z", "completed_at": "2025-03-04T12:53:04.131208Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.133684Z", "completed_at": "2025-03-04T12:53:04.133692Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02029895782470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_order_settled_base_sepolia_transaction_hash.db4a8fd73d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.135181Z", "completed_at": "2025-03-04T12:53:04.147602Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.154074Z", "completed_at": "2025-03-04T12:53:04.154084Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024289846420288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_order_settled_base_sepolia_id.d146f45657", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_order_settled_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.141303Z", "completed_at": "2025-03-04T12:53:04.148842Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.155632Z", "completed_at": "2025-03-04T12:53:04.155639Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025115966796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_bought_arbitrum_mainnet_event_name__SynthBought.6968f2e38e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthBought'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.149417Z", "completed_at": "2025-03-04T12:53:04.162136Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.164314Z", "completed_at": "2025-03-04T12:53:04.164323Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029861927032470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_arbitrum_mainnet_collected_fees__True__0.ffa72f24d6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.157362Z", "completed_at": "2025-03-04T12:53:04.165873Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.168333Z", "completed_at": "2025-03-04T12:53:04.168341Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02028203010559082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_arbitrum_mainnet_price__True__0.2666787a3a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.169209Z", "completed_at": "2025-03-04T12:53:04.180767Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.187317Z", "completed_at": "2025-03-04T12:53:04.187328Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02386617660522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_arbitrum_mainnet_synth_market_id__True__0.39b07cbd1a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.174639Z", "completed_at": "2025-03-04T12:53:04.188217Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.191157Z", "completed_at": "2025-03-04T12:53:04.191166Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026018857955932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_block_number.3db00f8fd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.182144Z", "completed_at": "2025-03-04T12:53:04.196536Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.198731Z", "completed_at": "2025-03-04T12:53:04.198742Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024880647659301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_block_timestamp.1e3c9accd9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.192146Z", "completed_at": "2025-03-04T12:53:04.200211Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.206734Z", "completed_at": "2025-03-04T12:53:04.206750Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025445222854614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_collected_fees.975bb20444", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.202163Z", "completed_at": "2025-03-04T12:53:04.209858Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.216577Z", "completed_at": "2025-03-04T12:53:04.216588Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01946735382080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_contract.7f6d914e0b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.210443Z", "completed_at": "2025-03-04T12:53:04.222985Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.229841Z", "completed_at": "2025-03-04T12:53:04.229852Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029137372970581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_event_name.aa51f8b10f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.217585Z", "completed_at": "2025-03-04T12:53:04.229082Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.231580Z", "completed_at": "2025-03-04T12:53:04.231588Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0233919620513916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_id.94c6a2689e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.224562Z", "completed_at": "2025-03-04T12:53:04.232406Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.235044Z", "completed_at": "2025-03-04T12:53:04.235055Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01925039291381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_price.b7069dc105", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.236641Z", "completed_at": "2025-03-04T12:53:04.246837Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.257802Z", "completed_at": "2025-03-04T12:53:04.257816Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027165889739990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_referrer.d5123874c5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.247384Z", "completed_at": "2025-03-04T12:53:04.264153Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.266302Z", "completed_at": "2025-03-04T12:53:04.266317Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03053140640258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_synth_market_id.11b8c58586", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.252126Z", "completed_at": "2025-03-04T12:53:04.265452Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.268703Z", "completed_at": "2025-03-04T12:53:04.268711Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025377511978149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_mainnet_transaction_hash.46c5786b65", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.259050Z", "completed_at": "2025-03-04T12:53:04.268098Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.270927Z", "completed_at": "2025-03-04T12:53:04.270936Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02488112449645996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_bought_arbitrum_mainnet_id.97a98f064e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.273119Z", "completed_at": "2025-03-04T12:53:04.286842Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.294960Z", "completed_at": "2025-03-04T12:53:04.294973Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027666091918945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_bought_arbitrum_sepolia_event_name__SynthBought.134dc8cabd", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthBought'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.281897Z", "completed_at": "2025-03-04T12:53:04.300565Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.302975Z", "completed_at": "2025-03-04T12:53:04.302987Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030688047409057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_arbitrum_sepolia_collected_fees__True__0.e69ec41d5e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.288195Z", "completed_at": "2025-03-04T12:53:04.302303Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.305093Z", "completed_at": "2025-03-04T12:53:04.305101Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026009559631347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_arbitrum_sepolia_price__True__0.d95f1532c7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.295955Z", "completed_at": "2025-03-04T12:53:04.303858Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.306700Z", "completed_at": "2025-03-04T12:53:04.306708Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026203393936157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_arbitrum_sepolia_synth_market_id__True__0.869a31cec1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.310130Z", "completed_at": "2025-03-04T12:53:04.322183Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.328206Z", "completed_at": "2025-03-04T12:53:04.328218Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023914813995361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_block_number.1414f728f0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.317587Z", "completed_at": "2025-03-04T12:53:04.329351Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.336037Z", "completed_at": "2025-03-04T12:53:04.336047Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027308940887451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_block_timestamp.af0cba6258", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.323507Z", "completed_at": "2025-03-04T12:53:04.335419Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.337742Z", "completed_at": "2025-03-04T12:53:04.337750Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022879600524902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_collected_fees.32235682bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.329963Z", "completed_at": "2025-03-04T12:53:04.338633Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.341137Z", "completed_at": "2025-03-04T12:53:04.341145Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025036096572875977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_contract.2c9cdafac9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.342710Z", "completed_at": "2025-03-04T12:53:04.352649Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.362858Z", "completed_at": "2025-03-04T12:53:04.362875Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02596592903137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_event_name.a810bafafd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.353261Z", "completed_at": "2025-03-04T12:53:04.368660Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.370772Z", "completed_at": "2025-03-04T12:53:04.370782Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028830289840698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_id.ed20008417", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.357784Z", "completed_at": "2025-03-04T12:53:04.369334Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.371730Z", "completed_at": "2025-03-04T12:53:04.371739Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02251601219177246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_price.9dde4ea814", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.364135Z", "completed_at": "2025-03-04T12:53:04.372579Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.375222Z", "completed_at": "2025-03-04T12:53:04.375229Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023289918899536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_referrer.c39eda4686", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.378644Z", "completed_at": "2025-03-04T12:53:04.396349Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.397850Z", "completed_at": "2025-03-04T12:53:04.397863Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02483844757080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_synth_market_id.92397dca4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.385424Z", "completed_at": "2025-03-04T12:53:04.398835Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.405386Z", "completed_at": "2025-03-04T12:53:04.405395Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028805971145629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_arbitrum_sepolia_transaction_hash.b57c5b3476", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.389930Z", "completed_at": "2025-03-04T12:53:04.404074Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.406427Z", "completed_at": "2025-03-04T12:53:04.406435Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02923417091369629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_bought_arbitrum_sepolia_id.3ade424d59", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.399483Z", "completed_at": "2025-03-04T12:53:04.407335Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.409934Z", "completed_at": "2025-03-04T12:53:04.409941Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0253751277923584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_bought_base_mainnet_event_name__SynthBought.7302486ec0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthBought'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.413336Z", "completed_at": "2025-03-04T12:53:04.425176Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.431318Z", "completed_at": "2025-03-04T12:53:04.431332Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023547887802124023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_base_mainnet_collected_fees__True__0.3fcb3fda3a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.420416Z", "completed_at": "2025-03-04T12:53:04.432322Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.438854Z", "completed_at": "2025-03-04T12:53:04.438863Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027564525604248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_base_mainnet_price__True__0.e25fbf2240", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.425779Z", "completed_at": "2025-03-04T12:53:04.437398Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.439887Z", "completed_at": "2025-03-04T12:53:04.439895Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0279693603515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_base_mainnet_synth_market_id__True__0.e3b9a2a2bf", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.433006Z", "completed_at": "2025-03-04T12:53:04.440850Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.443421Z", "completed_at": "2025-03-04T12:53:04.443431Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023890018463134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_block_number.afabe746ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.446875Z", "completed_at": "2025-03-04T12:53:04.464863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.466495Z", "completed_at": "2025-03-04T12:53:04.466508Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025219202041625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_block_timestamp.5044e48413", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.455645Z", "completed_at": "2025-03-04T12:53:04.468031Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.474846Z", "completed_at": "2025-03-04T12:53:04.474857Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030037641525268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_collected_fees.d9c17c84f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.460405Z", "completed_at": "2025-03-04T12:53:04.468656Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.475792Z", "completed_at": "2025-03-04T12:53:04.475800Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030323028564453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_contract.d6d311c160", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.469198Z", "completed_at": "2025-03-04T12:53:04.478745Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.481273Z", "completed_at": "2025-03-04T12:53:04.481281Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02654743194580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_event_name.8a35f2634d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.482139Z", "completed_at": "2025-03-04T12:53:04.493683Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.501707Z", "completed_at": "2025-03-04T12:53:04.501719Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025021076202392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_id.f9e555c962", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.489114Z", "completed_at": "2025-03-04T12:53:04.503392Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.509832Z", "completed_at": "2025-03-04T12:53:04.509847Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029958724975585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_price.f59f9c339a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.494418Z", "completed_at": "2025-03-04T12:53:04.504026Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.510902Z", "completed_at": "2025-03-04T12:53:04.510909Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030340909957885742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_referrer.3b61ce852c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.505290Z", "completed_at": "2025-03-04T12:53:04.513866Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.516339Z", "completed_at": "2025-03-04T12:53:04.516346Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015542984008789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_synth_market_id.32145e8cb4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.517208Z", "completed_at": "2025-03-04T12:53:04.532979Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.534617Z", "completed_at": "2025-03-04T12:53:04.534631Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022954702377319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_mainnet_transaction_hash.1e8279de09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.528354Z", "completed_at": "2025-03-04T12:53:04.535516Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.538029Z", "completed_at": "2025-03-04T12:53:04.538040Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022415637969970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_bought_base_sepolia_event_name__SynthBought.3932e43413", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthBought'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.523908Z", "completed_at": "2025-03-04T12:53:04.536155Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.538957Z", "completed_at": "2025-03-04T12:53:04.538965Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02396702766418457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_bought_base_mainnet_id.e00678ebae", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.539833Z", "completed_at": "2025-03-04T12:53:04.548877Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.558051Z", "completed_at": "2025-03-04T12:53:04.558065Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024570703506469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_base_sepolia_collected_fees__True__0.1b65c16e7a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.549508Z", "completed_at": "2025-03-04T12:53:04.568203Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.569938Z", "completed_at": "2025-03-04T12:53:04.569951Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025269031524658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_base_sepolia_price__True__0.1dfcf66dee", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.559139Z", "completed_at": "2025-03-04T12:53:04.570926Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.573444Z", "completed_at": "2025-03-04T12:53:04.573452Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025941848754882812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_bought_base_sepolia_synth_market_id__True__0.2be12779d3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.563950Z", "completed_at": "2025-03-04T12:53:04.572202Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.574934Z", "completed_at": "2025-03-04T12:53:04.574942Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02675485610961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_block_number.b137c20668", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.577088Z", "completed_at": "2025-03-04T12:53:04.589427Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.591518Z", "completed_at": "2025-03-04T12:53:04.591530Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02009439468383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_block_timestamp.b2a61f5718", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.584820Z", "completed_at": "2025-03-04T12:53:04.596926Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.604903Z", "completed_at": "2025-03-04T12:53:04.604916Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029240846633911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_collected_fees.9d30351609", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.592440Z", "completed_at": "2025-03-04T12:53:04.605961Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.608419Z", "completed_at": "2025-03-04T12:53:04.608430Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025223493576049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_contract.4678866b0c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.597692Z", "completed_at": "2025-03-04T12:53:04.607198Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.609967Z", "completed_at": "2025-03-04T12:53:04.609977Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02596735954284668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_event_name.cacb370344", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.612138Z", "completed_at": "2025-03-04T12:53:04.619748Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.626164Z", "completed_at": "2025-03-04T12:53:04.626174Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019682645797729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_id.942697f903", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.620333Z", "completed_at": "2025-03-04T12:53:04.636224Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.637903Z", "completed_at": "2025-03-04T12:53:04.637913Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027169227600097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_price.d27790b16d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.631710Z", "completed_at": "2025-03-04T12:53:04.639573Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.642006Z", "completed_at": "2025-03-04T12:53:04.642015Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022998809814453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_synth_market_id.b1c1943367", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.627179Z", "completed_at": "2025-03-04T12:53:04.640126Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.642891Z", "completed_at": "2025-03-04T12:53:04.642898Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024684667587280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_referrer.4756917b09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.644390Z", "completed_at": "2025-03-04T12:53:04.654118Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.660624Z", "completed_at": "2025-03-04T12:53:04.660634Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02184128761291504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_bought_base_sepolia_transaction_hash.368cb3f67e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.654729Z", "completed_at": "2025-03-04T12:53:04.670366Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.672444Z", "completed_at": "2025-03-04T12:53:04.672454Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028817176818847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_bought_base_sepolia_id.17a8acaf0c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.661702Z", "completed_at": "2025-03-04T12:53:04.674238Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.676877Z", "completed_at": "2025-03-04T12:53:04.676886Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024129390716552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_markets_arbitrum_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        synth_market_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        synth_token_address as token_address\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_markets_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.665271Z", "completed_at": "2025-03-04T12:53:04.675628Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.678390Z", "completed_at": "2025-03-04T12:53:04.678398Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024972200393676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_registered_arbitrum_mainnet_event_name__SynthRegistered.dab3843a60", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.679262Z", "completed_at": "2025-03-04T12:53:04.687106Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.693632Z", "completed_at": "2025-03-04T12:53:04.693644Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020199298858642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_registered_arbitrum_mainnet_synth_market_id__True__0.03490626a4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.687738Z", "completed_at": "2025-03-04T12:53:04.702449Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.708400Z", "completed_at": "2025-03-04T12:53:04.708412Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030756711959838867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_mainnet_block_number.c19306427b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.695262Z", "completed_at": "2025-03-04T12:53:04.709336Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.711902Z", "completed_at": "2025-03-04T12:53:04.711910Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02549290657043457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_mainnet_block_timestamp.155e02a96a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.703216Z", "completed_at": "2025-03-04T12:53:04.711205Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.718141Z", "completed_at": "2025-03-04T12:53:04.718148Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0260465145111084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_mainnet_contract.dc09abd1d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.712785Z", "completed_at": "2025-03-04T12:53:04.720414Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.727062Z", "completed_at": "2025-03-04T12:53:04.727077Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01950860023498535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_mainnet_event_name.aa6a178336", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.722370Z", "completed_at": "2025-03-04T12:53:04.730830Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.741815Z", "completed_at": "2025-03-04T12:53:04.741834Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02461862564086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_mainnet_id.456af96984", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.731437Z", "completed_at": "2025-03-04T12:53:04.744557Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.753692Z", "completed_at": "2025-03-04T12:53:04.753704Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.032124996185302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_mainnet_synth_market_id.b02a502d7f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.737042Z", "completed_at": "2025-03-04T12:53:04.750369Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.754971Z", "completed_at": "2025-03-04T12:53:04.754979Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02690267562866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_mainnet_synth_token_address.e815b8c9d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_token_address\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere synth_token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.745301Z", "completed_at": "2025-03-04T12:53:04.757246Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.764594Z", "completed_at": "2025-03-04T12:53:04.764605Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028509140014648438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_mainnet_transaction_hash.ae02976291", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.758944Z", "completed_at": "2025-03-04T12:53:04.766858Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.772380Z", "completed_at": "2025-03-04T12:53:04.772394Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019724369049072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_registered_arbitrum_mainnet_id.d4fd9eb0ba", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.768787Z", "completed_at": "2025-03-04T12:53:04.779948Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.782019Z", "completed_at": "2025-03-04T12:53:04.782028Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018255949020385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_markets_arbitrum_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        synth_market_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        synth_token_address as token_address\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_markets_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.774089Z", "completed_at": "2025-03-04T12:53:04.782903Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.789930Z", "completed_at": "2025-03-04T12:53:04.789940Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02456355094909668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_registered_arbitrum_sepolia_event_name__SynthRegistered.66b8fe9ef2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.783501Z", "completed_at": "2025-03-04T12:53:04.795573Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.797784Z", "completed_at": "2025-03-04T12:53:04.797795Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024465084075927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_registered_arbitrum_sepolia_synth_market_id__True__0.adc193de63", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.791130Z", "completed_at": "2025-03-04T12:53:04.798723Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.801164Z", "completed_at": "2025-03-04T12:53:04.801175Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019977569580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_sepolia_block_number.e17831aecf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.802069Z", "completed_at": "2025-03-04T12:53:04.816831Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.823089Z", "completed_at": "2025-03-04T12:53:04.823100Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026929855346679688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_sepolia_block_timestamp.8ad856419d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.811001Z", "completed_at": "2025-03-04T12:53:04.821844Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.824119Z", "completed_at": "2025-03-04T12:53:04.824126Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02435159683227539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_sepolia_contract.13305b5b4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.817530Z", "completed_at": "2025-03-04T12:53:04.829380Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.831843Z", "completed_at": "2025-03-04T12:53:04.831853Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02259993553161621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_sepolia_event_name.5caf84c585", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.825059Z", "completed_at": "2025-03-04T12:53:04.833421Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.835902Z", "completed_at": "2025-03-04T12:53:04.835910Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019819974899291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_sepolia_id.ae9e680918", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.837971Z", "completed_at": "2025-03-04T12:53:04.850063Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.858530Z", "completed_at": "2025-03-04T12:53:04.858541Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025861501693725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_sepolia_synth_market_id.41d8ffc96a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.843698Z", "completed_at": "2025-03-04T12:53:04.850714Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.859416Z", "completed_at": "2025-03-04T12:53:04.859423Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025533437728881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_sepolia_synth_token_address.30dd706c48", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_token_address\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere synth_token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.851260Z", "completed_at": "2025-03-04T12:53:04.865604Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.867762Z", "completed_at": "2025-03-04T12:53:04.867774Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030542612075805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_arbitrum_sepolia_transaction_hash.211b9e6913", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.860416Z", "completed_at": "2025-03-04T12:53:04.868602Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.871098Z", "completed_at": "2025-03-04T12:53:04.871106Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021981239318847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_registered_arbitrum_sepolia_id.a09499cc92", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.872621Z", "completed_at": "2025-03-04T12:53:04.888777Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.890825Z", "completed_at": "2025-03-04T12:53:04.890836Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023890972137451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_markets_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        synth_market_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        synth_token_address as token_address\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_spot_markets_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.877686Z", "completed_at": "2025-03-04T12:53:04.890114Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.896164Z", "completed_at": "2025-03-04T12:53:04.896178Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027112722396850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_registered_base_mainnet_event_name__SynthRegistered.5528c05ba2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.884075Z", "completed_at": "2025-03-04T12:53:04.897207Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.899534Z", "completed_at": "2025-03-04T12:53:04.899542Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023549795150756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_registered_base_mainnet_synth_market_id__True__0.289066bb62", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.891777Z", "completed_at": "2025-03-04T12:53:04.901033Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.903510Z", "completed_at": "2025-03-04T12:53:04.903519Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020389318466186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_mainnet_block_number.fb558416fb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.905566Z", "completed_at": "2025-03-04T12:53:04.919198Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.925587Z", "completed_at": "2025-03-04T12:53:04.925601Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025289297103881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_mainnet_block_timestamp.9fcd6d9ec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.913039Z", "completed_at": "2025-03-04T12:53:04.919829Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.926517Z", "completed_at": "2025-03-04T12:53:04.926524Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0249788761138916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_mainnet_contract.a1096e5fd9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.920391Z", "completed_at": "2025-03-04T12:53:04.931914Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.933982Z", "completed_at": "2025-03-04T12:53:04.933990Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02915787696838379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_mainnet_event_name.6d850cc54d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.927488Z", "completed_at": "2025-03-04T12:53:04.935546Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.938117Z", "completed_at": "2025-03-04T12:53:04.938125Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019852399826049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_mainnet_id.9f21a7f761", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.940208Z", "completed_at": "2025-03-04T12:53:04.957954Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.959886Z", "completed_at": "2025-03-04T12:53:04.959900Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025084257125854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_mainnet_synth_market_id.97f70d1e33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.945672Z", "completed_at": "2025-03-04T12:53:04.958545Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.961376Z", "completed_at": "2025-03-04T12:53:04.961384Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025385379791259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_mainnet_synth_token_address.f2f086a15a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_token_address\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere synth_token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.951636Z", "completed_at": "2025-03-04T12:53:04.960832Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.967374Z", "completed_at": "2025-03-04T12:53:04.967382Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02792215347290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_mainnet_transaction_hash.7e53d9e7f0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.962251Z", "completed_at": "2025-03-04T12:53:04.969717Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.972202Z", "completed_at": "2025-03-04T12:53:04.972212Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021556854248046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_registered_base_mainnet_id.81eda4804d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.974314Z", "completed_at": "2025-03-04T12:53:04.989451Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.991204Z", "completed_at": "2025-03-04T12:53:04.991216Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02227640151977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_markets_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        synth_market_id as id,\n        block_timestamp as created_ts,\n        block_number,\n        synth_token_address as token_address\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_spot_markets_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.979057Z", "completed_at": "2025-03-04T12:53:04.992110Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.998424Z", "completed_at": "2025-03-04T12:53:04.998434Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02758169174194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_registered_base_sepolia_event_name__SynthRegistered.560c96fe92", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthRegistered'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.984676Z", "completed_at": "2025-03-04T12:53:04.997019Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:04.999746Z", "completed_at": "2025-03-04T12:53:04.999755Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02678513526916504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_registered_base_sepolia_synth_market_id__True__0.e252f6d23b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:04.992740Z", "completed_at": "2025-03-04T12:53:05.001924Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.004485Z", "completed_at": "2025-03-04T12:53:05.004494Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02073359489440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_sepolia_block_number.bb37a01e8d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.005983Z", "completed_at": "2025-03-04T12:53:05.019798Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.026055Z", "completed_at": "2025-03-04T12:53:05.026066Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025499820709228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_sepolia_block_timestamp.79c2f95be5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.014626Z", "completed_at": "2025-03-04T12:53:05.025404Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.032122Z", "completed_at": "2025-03-04T12:53:05.032135Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028418779373168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_sepolia_contract.4039370624", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.020352Z", "completed_at": "2025-03-04T12:53:05.031515Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.033975Z", "completed_at": "2025-03-04T12:53:05.033983Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0287477970123291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_sepolia_event_name.40165b8566", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.027089Z", "completed_at": "2025-03-04T12:53:05.036215Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.038785Z", "completed_at": "2025-03-04T12:53:05.038796Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01990818977355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_sepolia_id.82e3f87ac4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.040888Z", "completed_at": "2025-03-04T12:53:05.052858Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.060801Z", "completed_at": "2025-03-04T12:53:05.060814Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025318145751953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_sepolia_synth_market_id.5a96ef8d3b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.047340Z", "completed_at": "2025-03-04T12:53:05.061720Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.068209Z", "completed_at": "2025-03-04T12:53:05.068220Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030782222747802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_sepolia_synth_token_address.9a1399c63c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_token_address\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere synth_token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.053444Z", "completed_at": "2025-03-04T12:53:05.067489Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.070631Z", "completed_at": "2025-03-04T12:53:05.070641Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.031079530715942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_registered_base_sepolia_transaction_hash.0cea3ca1bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.062395Z", "completed_at": "2025-03-04T12:53:05.070020Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.072809Z", "completed_at": "2025-03-04T12:53:05.072818Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02086019515991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_registered_base_sepolia_id.59dadce592", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.075020Z", "completed_at": "2025-03-04T12:53:05.083232Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.090538Z", "completed_at": "2025-03-04T12:53:05.090552Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021416902542114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_atomics_arbitrum_mainnet", "compiled": true, "compiled_code": "with bought as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    price / 1e18\n as price,\n        \n    synth_returned / 1e18\n as amount,\n        referrer\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_bought_arbitrum_mainnet\"\n),\n\nsold as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    price / 1e18\n as price,\n        -1 * \n    amount_returned / 1e18\n as amount,\n        referrer\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\n)\n\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    price,\n    amount,\n    referrer\nfrom\n    bought\nunion all\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    price,\n    amount,\n    referrer\nfrom\n    sold\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.084422Z", "completed_at": "2025-03-04T12:53:05.103047Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.106050Z", "completed_at": "2025-03-04T12:53:05.106060Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03185915946960449, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_sold_arbitrum_mainnet_event_name__SynthSold.c2779b95d3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthSold'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.096971Z", "completed_at": "2025-03-04T12:53:05.104173Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.109286Z", "completed_at": "2025-03-04T12:53:05.109296Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026845693588256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_arbitrum_mainnet_collected_fees__True__0.ebed4cb6c6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.091521Z", "completed_at": "2025-03-04T12:53:05.105432Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.110880Z", "completed_at": "2025-03-04T12:53:05.110887Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029786348342895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_arbitrum_mainnet_amount_returned__True__0.94e383949d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_returned >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.113061Z", "completed_at": "2025-03-04T12:53:05.121350Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.127973Z", "completed_at": "2025-03-04T12:53:05.127988Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02330470085144043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_arbitrum_mainnet_price__True__0.736ec6a18f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.123132Z", "completed_at": "2025-03-04T12:53:05.139074Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.141171Z", "completed_at": "2025-03-04T12:53:05.141180Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022509336471557617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_arbitrum_mainnet_synth_market_id__True__0.502a7c73ae", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.129045Z", "completed_at": "2025-03-04T12:53:05.140546Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.143287Z", "completed_at": "2025-03-04T12:53:05.143294Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023981094360351562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_amount_returned.a22fe1e87b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_returned\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere amount_returned is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.133450Z", "completed_at": "2025-03-04T12:53:05.142698Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.149602Z", "completed_at": "2025-03-04T12:53:05.149610Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02956080436706543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_block_number.21c8144aca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.144899Z", "completed_at": "2025-03-04T12:53:05.154705Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.163594Z", "completed_at": "2025-03-04T12:53:05.163609Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023903846740722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_block_timestamp.ece96724ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.155889Z", "completed_at": "2025-03-04T12:53:05.174905Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.177744Z", "completed_at": "2025-03-04T12:53:05.177754Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02654409408569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_collected_fees.ae5a9854f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.169422Z", "completed_at": "2025-03-04T12:53:05.176545Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.179243Z", "completed_at": "2025-03-04T12:53:05.179251Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025239944458007812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_event_name.77e48ea6b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.164574Z", "completed_at": "2025-03-04T12:53:05.177168Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.180131Z", "completed_at": "2025-03-04T12:53:05.180138Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027439355850219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_contract.7e747f7197", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.181773Z", "completed_at": "2025-03-04T12:53:05.190424Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.192810Z", "completed_at": "2025-03-04T12:53:05.192820Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01703476905822754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_id.5672923066", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.193699Z", "completed_at": "2025-03-04T12:53:05.210295Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.212297Z", "completed_at": "2025-03-04T12:53:05.212308Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024120569229125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_price.83b6e6b427", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.202822Z", "completed_at": "2025-03-04T12:53:05.211695Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.214378Z", "completed_at": "2025-03-04T12:53:05.214386Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024713516235351562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_synth_market_id.0a9309e0fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.198477Z", "completed_at": "2025-03-04T12:53:05.213200Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.215964Z", "completed_at": "2025-03-04T12:53:05.215972Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02698206901550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_referrer.fc97629e01", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.216845Z", "completed_at": "2025-03-04T12:53:05.224827Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.231104Z", "completed_at": "2025-03-04T12:53:05.231115Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02029252052307129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_mainnet_transaction_hash.b35ac6eb10", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.226642Z", "completed_at": "2025-03-04T12:53:05.242802Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.245111Z", "completed_at": "2025-03-04T12:53:05.245121Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0231320858001709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_sold_arbitrum_mainnet_id.77e9d1569f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_sold_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.232778Z", "completed_at": "2025-03-04T12:53:05.244387Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.247220Z", "completed_at": "2025-03-04T12:53:05.247228Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02374553680419922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_atomics_arbitrum_sepolia", "compiled": true, "compiled_code": "with bought as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    price / 1e18\n as price,\n        \n    synth_returned / 1e18\n as amount,\n        referrer\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_bought_arbitrum_sepolia\"\n),\n\nsold as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    price / 1e18\n as price,\n        -1 * \n    amount_returned / 1e18\n as amount,\n        referrer\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\n)\n\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    price,\n    amount,\n    referrer\nfrom\n    bought\nunion all\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    price,\n    amount,\n    referrer\nfrom\n    sold\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.238276Z", "completed_at": "2025-03-04T12:53:05.246623Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.253520Z", "completed_at": "2025-03-04T12:53:05.253530Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028238773345947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_sold_arbitrum_sepolia_event_name__SynthSold.fe13707237", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthSold'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.248800Z", "completed_at": "2025-03-04T12:53:05.257625Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.260025Z", "completed_at": "2025-03-04T12:53:05.260033Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016407251358032227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_arbitrum_sepolia_amount_returned__True__0.491570b785", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_returned >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.260908Z", "completed_at": "2025-03-04T12:53:05.278487Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.280627Z", "completed_at": "2025-03-04T12:53:05.280638Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025604963302612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_arbitrum_sepolia_collected_fees__True__0.18ef00cae1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.268344Z", "completed_at": "2025-03-04T12:53:05.279911Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.282736Z", "completed_at": "2025-03-04T12:53:05.282744Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025844335556030273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_arbitrum_sepolia_price__True__0.9416491d1c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.273887Z", "completed_at": "2025-03-04T12:53:05.282122Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.288768Z", "completed_at": "2025-03-04T12:53:05.288778Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03008127212524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_arbitrum_sepolia_synth_market_id__True__0.2196afe46e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.284239Z", "completed_at": "2025-03-04T12:53:05.291820Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.294319Z", "completed_at": "2025-03-04T12:53:05.294330Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015226364135742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_amount_returned.31fa2e2854", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_returned\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere amount_returned is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.295814Z", "completed_at": "2025-03-04T12:53:05.312777Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.314338Z", "completed_at": "2025-03-04T12:53:05.314350Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02408742904663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_block_number.9eb624134f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.301734Z", "completed_at": "2025-03-04T12:53:05.315264Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.317720Z", "completed_at": "2025-03-04T12:53:05.317728Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02535700798034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_block_timestamp.5734b00c78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.306318Z", "completed_at": "2025-03-04T12:53:05.315865Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.318600Z", "completed_at": "2025-03-04T12:53:05.318608Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02499556541442871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_collected_fees.0c503232cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.319443Z", "completed_at": "2025-03-04T12:53:05.327361Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.333823Z", "completed_at": "2025-03-04T12:53:05.333835Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020634174346923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_contract.d5f31e0816", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.328617Z", "completed_at": "2025-03-04T12:53:05.340498Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.346588Z", "completed_at": "2025-03-04T12:53:05.346599Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02278757095336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_event_name.333367310e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.335495Z", "completed_at": "2025-03-04T12:53:05.347427Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.350014Z", "completed_at": "2025-03-04T12:53:05.350026Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023365259170532227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_id.415e7f2126", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.341288Z", "completed_at": "2025-03-04T12:53:05.348709Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.355453Z", "completed_at": "2025-03-04T12:53:05.355489Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02765488624572754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_price.1a5abe8024", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.350912Z", "completed_at": "2025-03-04T12:53:05.359233Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.367591Z", "completed_at": "2025-03-04T12:53:05.367604Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02191162109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_referrer.31558bcae3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.361143Z", "completed_at": "2025-03-04T12:53:05.370540Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.380603Z", "completed_at": "2025-03-04T12:53:05.380614Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02420496940612793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_synth_market_id.2629bdcd49", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.371124Z", "completed_at": "2025-03-04T12:53:05.382407Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.388902Z", "completed_at": "2025-03-04T12:53:05.388911Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029146909713745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_arbitrum_sepolia_transaction_hash.da63dad649", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.375489Z", "completed_at": "2025-03-04T12:53:05.383031Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.389819Z", "completed_at": "2025-03-04T12:53:05.389832Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029436111450195312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_sold_arbitrum_sepolia_id.dd4ab72a64", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_sold_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.384305Z", "completed_at": "2025-03-04T12:53:05.392252Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.394751Z", "completed_at": "2025-03-04T12:53:05.394759Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014996528625488281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_atomics_base_mainnet", "compiled": true, "compiled_code": "with bought as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    price / 1e18\n as price,\n        \n    synth_returned / 1e18\n as amount,\n        referrer\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_bought_base_mainnet\"\n),\n\nsold as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    price / 1e18\n as price,\n        -1 * \n    amount_returned / 1e18\n as amount,\n        referrer\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\n)\n\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    price,\n    amount,\n    referrer\nfrom\n    bought\nunion all\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    price,\n    amount,\n    referrer\nfrom\n    sold\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.396243Z", "completed_at": "2025-03-04T12:53:05.415788Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.419641Z", "completed_at": "2025-03-04T12:53:05.419654Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02898693084716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_sold_base_mainnet_event_name__SynthSold.b1a44748ed", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthSold'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.405128Z", "completed_at": "2025-03-04T12:53:05.418989Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.426026Z", "completed_at": "2025-03-04T12:53:05.426035Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03205251693725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_base_mainnet_amount_returned__True__0.250710e6f1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_returned >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.410719Z", "completed_at": "2025-03-04T12:53:05.425259Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.427787Z", "completed_at": "2025-03-04T12:53:05.427795Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03227591514587402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_base_mainnet_collected_fees__True__0.6cc814f854", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.420703Z", "completed_at": "2025-03-04T12:53:05.429316Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.431929Z", "completed_at": "2025-03-04T12:53:05.431936Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02203845977783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_base_mainnet_price__True__0.994b9376fd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.435262Z", "completed_at": "2025-03-04T12:53:05.450652Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.452801Z", "completed_at": "2025-03-04T12:53:05.452815Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022983551025390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_base_mainnet_synth_market_id__True__0.3ec6dae33c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.440934Z", "completed_at": "2025-03-04T12:53:05.452223Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.459090Z", "completed_at": "2025-03-04T12:53:05.459100Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027984619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_amount_returned.989a4131c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_returned\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere amount_returned is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.446199Z", "completed_at": "2025-03-04T12:53:05.458318Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.460850Z", "completed_at": "2025-03-04T12:53:05.460858Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027572154998779297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_block_number.148bf58e52", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.453806Z", "completed_at": "2025-03-04T12:53:05.462384Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.464985Z", "completed_at": "2025-03-04T12:53:05.464992Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01972675323486328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_block_timestamp.1713f1d130", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.468294Z", "completed_at": "2025-03-04T12:53:05.485166Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.487323Z", "completed_at": "2025-03-04T12:53:05.487335Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024418354034423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_collected_fees.99a85c53ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.475644Z", "completed_at": "2025-03-04T12:53:05.486642Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.493241Z", "completed_at": "2025-03-04T12:53:05.493249Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02905559539794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_contract.46ddd59981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.480801Z", "completed_at": "2025-03-04T12:53:05.488259Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.494995Z", "completed_at": "2025-03-04T12:53:05.495003Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028678417205810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_event_name.f76ff966dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.488863Z", "completed_at": "2025-03-04T12:53:05.496721Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.499330Z", "completed_at": "2025-03-04T12:53:05.499338Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019504308700561523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_id.763b711f62", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.502707Z", "completed_at": "2025-03-04T12:53:05.520727Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.523040Z", "completed_at": "2025-03-04T12:53:05.523052Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02586960792541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_price.3d1a702fbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.508721Z", "completed_at": "2025-03-04T12:53:05.522336Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.529646Z", "completed_at": "2025-03-04T12:53:05.529657Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031074047088623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_referrer.ee678360be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.516203Z", "completed_at": "2025-03-04T12:53:05.528868Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.531453Z", "completed_at": "2025-03-04T12:53:05.531483Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03076767921447754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_synth_market_id.b7dab5388d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.524058Z", "completed_at": "2025-03-04T12:53:05.532365Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.535150Z", "completed_at": "2025-03-04T12:53:05.535162Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019879817962646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_mainnet_transaction_hash.6957d51d9c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.539211Z", "completed_at": "2025-03-04T12:53:05.556675Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.564634Z", "completed_at": "2025-03-04T12:53:05.564648Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031014204025268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_sold_base_mainnet_id.4cbe90534a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_sold_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.550993Z", "completed_at": "2025-03-04T12:53:05.565681Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.567685Z", "completed_at": "2025-03-04T12:53:05.567693Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03049182891845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_sold_base_sepolia_event_name__SynthSold.bc9ca74c87", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthSold'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.545948Z", "completed_at": "2025-03-04T12:53:05.566226Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.569163Z", "completed_at": "2025-03-04T12:53:05.569171Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.033184051513671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_atomics_base_sepolia", "compiled": true, "compiled_code": "with bought as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    price / 1e18\n as price,\n        \n    synth_returned / 1e18\n as amount,\n        referrer\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_bought_base_sepolia\"\n),\n\nsold as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    price / 1e18\n as price,\n        -1 * \n    amount_returned / 1e18\n as amount,\n        referrer\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\n)\n\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    price,\n    amount,\n    referrer\nfrom\n    bought\nunion all\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    price,\n    amount,\n    referrer\nfrom\n    sold\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.557552Z", "completed_at": "2025-03-04T12:53:05.568567Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.571323Z", "completed_at": "2025-03-04T12:53:05.571334Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026530981063842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_base_sepolia_amount_returned__True__0.400f957fc7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_returned >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.575717Z", "completed_at": "2025-03-04T12:53:05.587979Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.594167Z", "completed_at": "2025-03-04T12:53:05.594181Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024291276931762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_base_sepolia_collected_fees__True__0.0a04ec9ef2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.583019Z", "completed_at": "2025-03-04T12:53:05.599705Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.602095Z", "completed_at": "2025-03-04T12:53:05.602107Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028416156768798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_base_sepolia_price__True__0.cedd17dbea", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.589214Z", "completed_at": "2025-03-04T12:53:05.601340Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.604216Z", "completed_at": "2025-03-04T12:53:05.604224Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029243946075439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_sold_base_sepolia_synth_market_id__True__0.5175d72781", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.595252Z", "completed_at": "2025-03-04T12:53:05.602985Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.605808Z", "completed_at": "2025-03-04T12:53:05.605816Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024251699447631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_amount_returned.c33656b778", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_returned\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere amount_returned is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.609218Z", "completed_at": "2025-03-04T12:53:05.621790Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.628983Z", "completed_at": "2025-03-04T12:53:05.629000Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025555133819580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_block_number.17e7ff9528", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.616714Z", "completed_at": "2025-03-04T12:53:05.634549Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.636947Z", "completed_at": "2025-03-04T12:53:05.636959Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02914738655090332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_block_timestamp.f3d45165ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.624629Z", "completed_at": "2025-03-04T12:53:05.636216Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.639083Z", "completed_at": "2025-03-04T12:53:05.639090Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025218963623046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_collected_fees.8ad9625fb0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.630216Z", "completed_at": "2025-03-04T12:53:05.637831Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.640694Z", "completed_at": "2025-03-04T12:53:05.640702Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025472402572631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_contract.8d370e2248", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.644115Z", "completed_at": "2025-03-04T12:53:05.656063Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.661828Z", "completed_at": "2025-03-04T12:53:05.661842Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023564815521240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_event_name.24601a4262", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.651647Z", "completed_at": "2025-03-04T12:53:05.668093Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.671539Z", "completed_at": "2025-03-04T12:53:05.671550Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02883625030517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_id.c2f7e77070", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.657289Z", "completed_at": "2025-03-04T12:53:05.670913Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.673197Z", "completed_at": "2025-03-04T12:53:05.673207Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024407625198364258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_price.88b1a85b40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.663004Z", "completed_at": "2025-03-04T12:53:05.674052Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.676677Z", "completed_at": "2025-03-04T12:53:05.676686Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026528596878051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_referrer.51ef2f8d16", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.678194Z", "completed_at": "2025-03-04T12:53:05.687480Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.698010Z", "completed_at": "2025-03-04T12:53:05.698023Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02571868896484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_synth_market_id.25c988c205", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.688167Z", "completed_at": "2025-03-04T12:53:05.704134Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.706320Z", "completed_at": "2025-03-04T12:53:05.706331Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028918981552124023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_sold_base_sepolia_transaction_hash.a13ba6bde1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.692787Z", "completed_at": "2025-03-04T12:53:05.704924Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.707378Z", "completed_at": "2025-03-04T12:53:05.707386Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024699687957763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_sold_base_sepolia_id.d31e78319f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_sold_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.699210Z", "completed_at": "2025-03-04T12:53:05.708242Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.710855Z", "completed_at": "2025-03-04T12:53:05.710864Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024079561233520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_unwrapped_arbitrum_mainnet_event_name__SynthUnwrapped.0156eda083", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthUnwrapped'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.714271Z", "completed_at": "2025-03-04T12:53:05.733612Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.740196Z", "completed_at": "2025-03-04T12:53:05.740209Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03149604797363281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_arbitrum_mainnet_amount_unwrapped__True__0.dfb2bf555e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_unwrapped >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.728386Z", "completed_at": "2025-03-04T12:53:05.738910Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.741272Z", "completed_at": "2025-03-04T12:53:05.741281Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028415918350219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_arbitrum_mainnet_synth_market_id__True__0.c8e2a0ce2e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.721487Z", "completed_at": "2025-03-04T12:53:05.739564Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.742208Z", "completed_at": "2025-03-04T12:53:05.742218Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029999256134033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_arbitrum_mainnet_fees_collected__True__0.caa0ab5069", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fees_collected >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.734601Z", "completed_at": "2025-03-04T12:53:05.743739Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.746456Z", "completed_at": "2025-03-04T12:53:05.746486Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025864124298095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_amount_unwrapped.6338d14461", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_unwrapped\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere amount_unwrapped is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.751155Z", "completed_at": "2025-03-04T12:53:05.767871Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.776442Z", "completed_at": "2025-03-04T12:53:05.776454Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030797958374023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_block_number.6c4594ed9b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.756804Z", "completed_at": "2025-03-04T12:53:05.773948Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.778530Z", "completed_at": "2025-03-04T12:53:05.778541Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03131842613220215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_block_timestamp.7eb830695e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.762492Z", "completed_at": "2025-03-04T12:53:05.775836Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.782850Z", "completed_at": "2025-03-04T12:53:05.782861Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03505897521972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_contract.df671e35b9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.768724Z", "completed_at": "2025-03-04T12:53:05.781295Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.787397Z", "completed_at": "2025-03-04T12:53:05.787406Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03188514709472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_event_name.15be4b2d2e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.801430Z", "completed_at": "2025-03-04T12:53:05.829761Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.836357Z", "completed_at": "2025-03-04T12:53:05.836370Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04578042030334473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_fees_collected.82edb6c70c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fees_collected\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere fees_collected is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.806907Z", "completed_at": "2025-03-04T12:53:05.835681Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.837593Z", "completed_at": "2025-03-04T12:53:05.837602Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04570484161376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_id.c93a8c455f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.821006Z", "completed_at": "2025-03-04T12:53:05.838432Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.841045Z", "completed_at": "2025-03-04T12:53:05.841052Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.046250343322753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_synth_market_id.597a45b266", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.831055Z", "completed_at": "2025-03-04T12:53:05.839070Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.841952Z", "completed_at": "2025-03-04T12:53:05.841961Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.043450355529785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_mainnet_transaction_hash.266bb54277", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.852447Z", "completed_at": "2025-03-04T12:53:05.865183Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.871663Z", "completed_at": "2025-03-04T12:53:05.871676Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028326749801635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_unwrapped_arbitrum_sepolia_event_name__SynthUnwrapped.20624d41fd", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthUnwrapped'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.847867Z", "completed_at": "2025-03-04T12:53:05.866041Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.873197Z", "completed_at": "2025-03-04T12:53:05.873205Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0304715633392334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_unwrapped_arbitrum_mainnet_id.81790072c1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.860674Z", "completed_at": "2025-03-04T12:53:05.872583Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.875561Z", "completed_at": "2025-03-04T12:53:05.875571Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029052734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_arbitrum_sepolia_amount_unwrapped__True__0.2d01453854", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_unwrapped >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.866654Z", "completed_at": "2025-03-04T12:53:05.874869Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.877800Z", "completed_at": "2025-03-04T12:53:05.877808Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030677318572998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_arbitrum_sepolia_fees_collected__True__0.f01b734c27", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fees_collected >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.882595Z", "completed_at": "2025-03-04T12:53:05.894371Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.906270Z", "completed_at": "2025-03-04T12:53:05.906285Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029297351837158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_arbitrum_sepolia_synth_market_id__True__0.6744618704", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.889088Z", "completed_at": "2025-03-04T12:53:05.907207Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.908910Z", "completed_at": "2025-03-04T12:53:05.908919Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029682159423828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_amount_unwrapped.4d83dd17da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_unwrapped\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere amount_unwrapped is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.899599Z", "completed_at": "2025-03-04T12:53:05.909802Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.912703Z", "completed_at": "2025-03-04T12:53:05.912711Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025098323822021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_block_timestamp.2897aa2af1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.895020Z", "completed_at": "2025-03-04T12:53:05.910717Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.913613Z", "completed_at": "2025-03-04T12:53:05.913624Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03237318992614746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_block_number.bfaa7aabea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.917223Z", "completed_at": "2025-03-04T12:53:05.929039Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.931007Z", "completed_at": "2025-03-04T12:53:05.931019Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0198514461517334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_contract.9a67446eba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.924281Z", "completed_at": "2025-03-04T12:53:05.941074Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.942822Z", "completed_at": "2025-03-04T12:53:05.942832Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027889490127563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_event_name.e2e470100a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.931997Z", "completed_at": "2025-03-04T12:53:05.943803Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.946629Z", "completed_at": "2025-03-04T12:53:05.946639Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02388906478881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_fees_collected.342d8ecaba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fees_collected\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere fees_collected is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.936603Z", "completed_at": "2025-03-04T12:53:05.945078Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.948187Z", "completed_at": "2025-03-04T12:53:05.948195Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024774551391601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_id.885fac7a78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.950381Z", "completed_at": "2025-03-04T12:53:05.957827Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.966299Z", "completed_at": "2025-03-04T12:53:05.966312Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021987199783325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_synth_market_id.0f2f845893", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.958400Z", "completed_at": "2025-03-04T12:53:05.971572Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.977754Z", "completed_at": "2025-03-04T12:53:05.977764Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02881622314453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_arbitrum_sepolia_transaction_hash.5b5d8f1737", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.967362Z", "completed_at": "2025-03-04T12:53:05.978686Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.981350Z", "completed_at": "2025-03-04T12:53:05.981357Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025086164474487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_unwrapped_arbitrum_sepolia_id.5985d5d1de", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.972286Z", "completed_at": "2025-03-04T12:53:05.980696Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:05.983534Z", "completed_at": "2025-03-04T12:53:05.983544Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026471853256225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_unwrapped_base_mainnet_event_name__SynthUnwrapped.a1713eb60e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthUnwrapped'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.985082Z", "completed_at": "2025-03-04T12:53:05.998039Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.000026Z", "completed_at": "2025-03-04T12:53:06.000037Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020757436752319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_base_mainnet_amount_unwrapped__True__0.2e78bc25a2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_unwrapped >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:05.992270Z", "completed_at": "2025-03-04T12:53:06.000929Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.013384Z", "completed_at": "2025-03-04T12:53:06.013394Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030640363693237305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_base_mainnet_fees_collected__True__0.48d9a0e389", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fees_collected >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.001528Z", "completed_at": "2025-03-04T12:53:06.015940Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.018507Z", "completed_at": "2025-03-04T12:53:06.018516Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027109384536743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_base_mainnet_synth_market_id__True__0.de01d6cd38", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.006319Z", "completed_at": "2025-03-04T12:53:06.016619Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.019371Z", "completed_at": "2025-03-04T12:53:06.019380Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02210235595703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_amount_unwrapped.025e49370b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_unwrapped\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere amount_unwrapped is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.020238Z", "completed_at": "2025-03-04T12:53:06.031619Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.033876Z", "completed_at": "2025-03-04T12:53:06.033887Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019398212432861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_block_number.81e8f4c2ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.027138Z", "completed_at": "2025-03-04T12:53:06.034736Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.037157Z", "completed_at": "2025-03-04T12:53:06.037165Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019437074661254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_block_timestamp.0e8329af5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.042701Z", "completed_at": "2025-03-04T12:53:06.049078Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.051522Z", "completed_at": "2025-03-04T12:53:06.051532Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018569231033325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_event_name.dbfac4a471", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.038110Z", "completed_at": "2025-03-04T12:53:06.049668Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.052399Z", "completed_at": "2025-03-04T12:53:06.052410Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020169734954833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_contract.cba8e61baa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.053306Z", "completed_at": "2025-03-04T12:53:06.067744Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.069763Z", "completed_at": "2025-03-04T12:53:06.069776Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022647857666015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_fees_collected.cd35bec369", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fees_collected\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere fees_collected is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.060355Z", "completed_at": "2025-03-04T12:53:06.071263Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.081799Z", "completed_at": "2025-03-04T12:53:06.081815Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031100988388061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_id.cd459ace96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.071890Z", "completed_at": "2025-03-04T12:53:06.083676Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.086337Z", "completed_at": "2025-03-04T12:53:06.086348Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020885229110717773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_synth_market_id.47983f606b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.077264Z", "completed_at": "2025-03-04T12:53:06.085757Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.092588Z", "completed_at": "2025-03-04T12:53:06.092598Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024345874786376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_mainnet_transaction_hash.e27a71ff2d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.088037Z", "completed_at": "2025-03-04T12:53:06.096368Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.103083Z", "completed_at": "2025-03-04T12:53:06.103094Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020182371139526367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_unwrapped_base_mainnet_id.1256b6907b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.096983Z", "completed_at": "2025-03-04T12:53:06.111113Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.117197Z", "completed_at": "2025-03-04T12:53:06.117210Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0299375057220459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_unwrapped_base_sepolia_event_name__SynthUnwrapped.8dae19258e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthUnwrapped'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.104759Z", "completed_at": "2025-03-04T12:53:06.119593Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.122159Z", "completed_at": "2025-03-04T12:53:06.122168Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026573896408081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_base_sepolia_amount_unwrapped__True__0.8e197e25e9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_unwrapped >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.112448Z", "completed_at": "2025-03-04T12:53:06.121575Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.128577Z", "completed_at": "2025-03-04T12:53:06.128586Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026888608932495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_base_sepolia_fees_collected__True__0.e56453f4c6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fees_collected >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.123059Z", "completed_at": "2025-03-04T12:53:06.135791Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.138511Z", "completed_at": "2025-03-04T12:53:06.138522Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02046656608581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_unwrapped_base_sepolia_synth_market_id__True__0.a469219bab", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.130281Z", "completed_at": "2025-03-04T12:53:06.137917Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.140614Z", "completed_at": "2025-03-04T12:53:06.140621Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01976156234741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_amount_unwrapped.1a220b9007", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_unwrapped\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere amount_unwrapped is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.142158Z", "completed_at": "2025-03-04T12:53:06.153890Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.156251Z", "completed_at": "2025-03-04T12:53:06.156261Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02001667022705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_block_number.5cfd06abfe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.146963Z", "completed_at": "2025-03-04T12:53:06.154545Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.157149Z", "completed_at": "2025-03-04T12:53:06.157156Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02000260353088379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_block_timestamp.41ba03a5b2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.158032Z", "completed_at": "2025-03-04T12:53:06.170790Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.173326Z", "completed_at": "2025-03-04T12:53:06.173338Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021259307861328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_contract.87983c1fa3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.164557Z", "completed_at": "2025-03-04T12:53:06.172132Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.174822Z", "completed_at": "2025-03-04T12:53:06.174833Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021683692932128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_event_name.b17d6e42c7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.177001Z", "completed_at": "2025-03-04T12:53:06.188613Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.191003Z", "completed_at": "2025-03-04T12:53:06.191016Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019733667373657227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_fees_collected.c3d167c521", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fees_collected\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere fees_collected is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.182452Z", "completed_at": "2025-03-04T12:53:06.190411Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.200937Z", "completed_at": "2025-03-04T12:53:06.200948Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028359413146972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_id.6b02b454d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.191928Z", "completed_at": "2025-03-04T12:53:06.203514Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.206113Z", "completed_at": "2025-03-04T12:53:06.206125Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019359111785888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_synth_market_id.214a3db22f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.196454Z", "completed_at": "2025-03-04T12:53:06.204880Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.207629Z", "completed_at": "2025-03-04T12:53:06.207640Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019896984100341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_unwrapped_base_sepolia_transaction_hash.2ea11780cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.209756Z", "completed_at": "2025-03-04T12:53:06.222923Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.225351Z", "completed_at": "2025-03-04T12:53:06.225364Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021250009536743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_unwrapped_base_sepolia_id.74a8e666e5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.217050Z", "completed_at": "2025-03-04T12:53:06.224764Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.235846Z", "completed_at": "2025-03-04T12:53:06.235855Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030472755432128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_wrapper_arbitrum_mainnet", "compiled": true, "compiled_code": "with wraps as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    amount_wrapped / 1e18\n as amount_wrapped\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\n),\n\nunwraps as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        -1 * \n    amount_unwrapped / 1e18\n as amount_wrapped\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_unwrapped_arbitrum_mainnet\"\n)\n\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    amount_wrapped\nfrom\n    wraps\nunion all\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    amount_wrapped\nfrom\n    unwraps\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.226276Z", "completed_at": "2025-03-04T12:53:06.238358Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.241305Z", "completed_at": "2025-03-04T12:53:06.241317Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02020263671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_wrapped_arbitrum_mainnet_event_name__SynthWrapped.c2a7fae75f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthWrapped'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.230994Z", "completed_at": "2025-03-04T12:53:06.240029Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.242841Z", "completed_at": "2025-03-04T12:53:06.242852Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020812273025512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_wrapped_arbitrum_mainnet_fees_collected__True__0.8427a98042", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fees_collected >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.244985Z", "completed_at": "2025-03-04T12:53:06.257008Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.259379Z", "completed_at": "2025-03-04T12:53:06.259389Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020322561264038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_wrapped_arbitrum_mainnet_synth_market_id__True__0.69e1aef58d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.250893Z", "completed_at": "2025-03-04T12:53:06.257612Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.260316Z", "completed_at": "2025-03-04T12:53:06.260328Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019803285598754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_mainnet_block_number.388f222586", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.261260Z", "completed_at": "2025-03-04T12:53:06.274203Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.276739Z", "completed_at": "2025-03-04T12:53:06.276750Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021526336669921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_mainnet_block_timestamp.62e5fb2f2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.268014Z", "completed_at": "2025-03-04T12:53:06.274852Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.277655Z", "completed_at": "2025-03-04T12:53:06.277663Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0216219425201416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_mainnet_contract.12b8537d63", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.286037Z", "completed_at": "2025-03-04T12:53:06.293732Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.303932Z", "completed_at": "2025-03-04T12:53:06.303945Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0279693603515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_mainnet_fees_collected.ab1cc1a24e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fees_collected\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere fees_collected is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.280992Z", "completed_at": "2025-03-04T12:53:06.298856Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.305038Z", "completed_at": "2025-03-04T12:53:06.305046Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029747724533081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_mainnet_event_name.a537b3bcc9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.294345Z", "completed_at": "2025-03-04T12:53:06.306141Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.308855Z", "completed_at": "2025-03-04T12:53:06.308863Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01826167106628418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_mainnet_id.e6be3c26ab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.299488Z", "completed_at": "2025-03-04T12:53:06.307576Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.310385Z", "completed_at": "2025-03-04T12:53:06.310392Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018987655639648438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_mainnet_synth_market_id.22e9bbcaaf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.315105Z", "completed_at": "2025-03-04T12:53:06.328730Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.339058Z", "completed_at": "2025-03-04T12:53:06.339070Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029459476470947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_mainnet_transaction_hash.470b375862", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.322766Z", "completed_at": "2025-03-04T12:53:06.338290Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.340269Z", "completed_at": "2025-03-04T12:53:06.340277Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029116392135620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_wrapped_arbitrum_mainnet_id.4240a5b9ed", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_wrapped_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.329372Z", "completed_at": "2025-03-04T12:53:06.341945Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.344539Z", "completed_at": "2025-03-04T12:53:06.344551Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03016495704650879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_wrapper_arbitrum_sepolia", "compiled": true, "compiled_code": "with wraps as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    amount_wrapped / 1e18\n as amount_wrapped\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\n),\n\nunwraps as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        -1 * \n    amount_unwrapped / 1e18\n as amount_wrapped\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_unwrapped_arbitrum_sepolia\"\n)\n\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    amount_wrapped\nfrom\n    wraps\nunion all\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    amount_wrapped\nfrom\n    unwraps\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.333683Z", "completed_at": "2025-03-04T12:53:06.343234Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.346033Z", "completed_at": "2025-03-04T12:53:06.346041Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024051189422607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_wrapped_arbitrum_sepolia_event_name__SynthWrapped.a482cbf84f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthWrapped'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.349743Z", "completed_at": "2025-03-04T12:53:06.362531Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.375111Z", "completed_at": "2025-03-04T12:53:06.375125Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031389713287353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_wrapped_arbitrum_sepolia_fees_collected__True__0.9f8402c770", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fees_collected >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.355435Z", "completed_at": "2025-03-04T12:53:06.370019Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.376240Z", "completed_at": "2025-03-04T12:53:06.376251Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030957698822021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_wrapped_arbitrum_sepolia_synth_market_id__True__0.ca19b05f78", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.363176Z", "completed_at": "2025-03-04T12:53:06.378085Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.380674Z", "completed_at": "2025-03-04T12:53:06.380681Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025992155075073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_sepolia_block_number.c861cf7b58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.370615Z", "completed_at": "2025-03-04T12:53:06.378651Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.381556Z", "completed_at": "2025-03-04T12:53:06.381565Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02138805389404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_sepolia_block_timestamp.cc2e2e7857", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.385582Z", "completed_at": "2025-03-04T12:53:06.397846Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.408250Z", "completed_at": "2025-03-04T12:53:06.408262Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02838897705078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_sepolia_contract.410ac0c77b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.391955Z", "completed_at": "2025-03-04T12:53:06.403024Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.409363Z", "completed_at": "2025-03-04T12:53:06.409371Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027073144912719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_sepolia_event_name.e16041e32c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.398579Z", "completed_at": "2025-03-04T12:53:06.410270Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.413085Z", "completed_at": "2025-03-04T12:53:06.413093Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022637367248535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_sepolia_fees_collected.8c22c01d20", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fees_collected\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere fees_collected is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.403655Z", "completed_at": "2025-03-04T12:53:06.411746Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.414654Z", "completed_at": "2025-03-04T12:53:06.414661Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02360844612121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_sepolia_id.ec9012b5a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.419598Z", "completed_at": "2025-03-04T12:53:06.437526Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.442990Z", "completed_at": "2025-03-04T12:53:06.443001Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029140710830688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_sepolia_synth_market_id.f1fccfdd91", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.427143Z", "completed_at": "2025-03-04T12:53:06.442238Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.444732Z", "completed_at": "2025-03-04T12:53:06.444741Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02915644645690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_arbitrum_sepolia_transaction_hash.60e01a101a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.433065Z", "completed_at": "2025-03-04T12:53:06.444128Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.446955Z", "completed_at": "2025-03-04T12:53:06.446965Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028132915496826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_wrapped_arbitrum_sepolia_id.25ef0efbd8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_wrapped_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.438143Z", "completed_at": "2025-03-04T12:53:06.446264Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.449144Z", "completed_at": "2025-03-04T12:53:06.449152Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022802352905273438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_wrapper_base_mainnet", "compiled": true, "compiled_code": "with wraps as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    amount_wrapped / 1e18\n as amount_wrapped\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\n),\n\nunwraps as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        -1 * \n    amount_unwrapped / 1e18\n as amount_wrapped\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_unwrapped_base_mainnet\"\n)\n\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    amount_wrapped\nfrom\n    wraps\nunion all\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    amount_wrapped\nfrom\n    unwraps\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.454130Z", "completed_at": "2025-03-04T12:53:06.471027Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.478210Z", "completed_at": "2025-03-04T12:53:06.478224Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029873371124267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_wrapped_base_mainnet_event_name__SynthWrapped.e81f79edcb", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthWrapped'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.460418Z", "completed_at": "2025-03-04T12:53:06.479391Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.481716Z", "completed_at": "2025-03-04T12:53:06.481728Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.031125783920288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_wrapped_base_mainnet_fees_collected__True__0.88e8d792fd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fees_collected >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.473721Z", "completed_at": "2025-03-04T12:53:06.480942Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.483846Z", "completed_at": "2025-03-04T12:53:06.483854Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024818897247314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_mainnet_block_number.4bf40252e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.465933Z", "completed_at": "2025-03-04T12:53:06.482587Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.485382Z", "completed_at": "2025-03-04T12:53:06.485389Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.032840728759765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_wrapped_base_mainnet_synth_market_id__True__0.3d7fa017bf", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.489005Z", "completed_at": "2025-03-04T12:53:06.497139Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.508217Z", "completed_at": "2025-03-04T12:53:06.508232Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0251772403717041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_mainnet_block_timestamp.66ddebcfe0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.497739Z", "completed_at": "2025-03-04T12:53:06.515019Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.517032Z", "completed_at": "2025-03-04T12:53:06.517042Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029507160186767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_mainnet_contract.33e8d1917b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.503381Z", "completed_at": "2025-03-04T12:53:06.515611Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.518510Z", "completed_at": "2025-03-04T12:53:06.518517Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024379253387451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_mainnet_event_name.1f22f5789b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.509377Z", "completed_at": "2025-03-04T12:53:06.517885Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.520703Z", "completed_at": "2025-03-04T12:53:06.520715Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025070667266845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_mainnet_fees_collected.9a641530e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fees_collected\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere fees_collected is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.522323Z", "completed_at": "2025-03-04T12:53:06.533785Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.544915Z", "completed_at": "2025-03-04T12:53:06.544929Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028740406036376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_mainnet_id.7d79ad852d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.534366Z", "completed_at": "2025-03-04T12:53:06.550832Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.553089Z", "completed_at": "2025-03-04T12:53:06.553100Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023602962493896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_mainnet_synth_market_id.e2b2f4733f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.540055Z", "completed_at": "2025-03-04T12:53:06.552355Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.555353Z", "completed_at": "2025-03-04T12:53:06.555361Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024494171142578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_mainnet_transaction_hash.9cbd57629d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.546025Z", "completed_at": "2025-03-04T12:53:06.554806Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.557555Z", "completed_at": "2025-03-04T12:53:06.557564Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025120258331298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_wrapped_base_mainnet_id.77a4ae72ae", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_wrapped_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.559768Z", "completed_at": "2025-03-04T12:53:06.573829Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.582681Z", "completed_at": "2025-03-04T12:53:06.582694Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028727293014526367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_spot_wrapper_base_sepolia", "compiled": true, "compiled_code": "with wraps as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        \n    amount_wrapped / 1e18\n as amount_wrapped\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\n),\n\nunwraps as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash as tx_hash,\n        synth_market_id,\n        -1 * \n    amount_unwrapped / 1e18\n as amount_wrapped\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_unwrapped_base_sepolia\"\n)\n\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    amount_wrapped\nfrom\n    wraps\nunion all\nselect\n    id,\n    ts,\n    block_number,\n    tx_hash,\n    synth_market_id,\n    amount_wrapped\nfrom\n    unwraps\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.568006Z", "completed_at": "2025-03-04T12:53:06.588775Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.590673Z", "completed_at": "2025-03-04T12:53:06.590684Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03171038627624512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_spot_synth_wrapped_base_sepolia_event_name__SynthWrapped.031ffbb73f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'SynthWrapped'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.583731Z", "completed_at": "2025-03-04T12:53:06.592592Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.595111Z", "completed_at": "2025-03-04T12:53:06.595121Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02853846549987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_wrapped_base_sepolia_synth_market_id__True__0.2dfd67bc58", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.575086Z", "completed_at": "2025-03-04T12:53:06.593845Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.596674Z", "completed_at": "2025-03-04T12:53:06.596681Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0315093994140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_spot_synth_wrapped_base_sepolia_fees_collected__True__0.c2a49865fe", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fees_collected >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.597528Z", "completed_at": "2025-03-04T12:53:06.610206Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.612170Z", "completed_at": "2025-03-04T12:53:06.612184Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020409584045410156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_sepolia_block_number.6d42ca2157", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.605415Z", "completed_at": "2025-03-04T12:53:06.618657Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.624941Z", "completed_at": "2025-03-04T12:53:06.624955Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029079675674438477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_sepolia_block_timestamp.5b4c2eecf8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.613746Z", "completed_at": "2025-03-04T12:53:06.626697Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.629396Z", "completed_at": "2025-03-04T12:53:06.629407Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02480912208557129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_sepolia_contract.d4446f0372", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.620053Z", "completed_at": "2025-03-04T12:53:06.628232Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.630927Z", "completed_at": "2025-03-04T12:53:06.630937Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022606849670410156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_sepolia_event_name.fe439b73da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.634187Z", "completed_at": "2025-03-04T12:53:06.641828Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.648478Z", "completed_at": "2025-03-04T12:53:06.648491Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022537946701049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_sepolia_fees_collected.b6fac60b85", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fees_collected\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere fees_collected is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.642413Z", "completed_at": "2025-03-04T12:53:06.654701Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.660769Z", "completed_at": "2025-03-04T12:53:06.660782Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030643939971923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_sepolia_id.8905f554af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.650107Z", "completed_at": "2025-03-04T12:53:06.662628Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.665283Z", "completed_at": "2025-03-04T12:53:06.665295Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02426767349243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_sepolia_synth_market_id.601db0f648", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.656078Z", "completed_at": "2025-03-04T12:53:06.664696Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.671619Z", "completed_at": "2025-03-04T12:53:06.671628Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024709224700927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_spot_synth_wrapped_base_sepolia_transaction_hash.7672de0496", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.666838Z", "completed_at": "2025-03-04T12:53:06.674947Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.684390Z", "completed_at": "2025-03-04T12:53:06.684401Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02258586883544922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_spot_synth_wrapped_base_sepolia_id.159b2de78a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_wrapped_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.676284Z", "completed_at": "2025-03-04T12:53:06.687251Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.698359Z", "completed_at": "2025-03-04T12:53:06.698374Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03233671188354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_treasury_vote_recorded_snax_mainnet_event_name__VoteRecorded.e4a7517ef5", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VoteRecorded'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.687948Z", "completed_at": "2025-03-04T12:53:06.700211Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.706943Z", "completed_at": "2025-03-04T12:53:06.706958Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03151869773864746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_block_number.ece9a809a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.692953Z", "completed_at": "2025-03-04T12:53:06.701484Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.708683Z", "completed_at": "2025-03-04T12:53:06.708694Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02506875991821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_block_timestamp.1db4ce563e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.702147Z", "completed_at": "2025-03-04T12:53:06.710404Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.712955Z", "completed_at": "2025-03-04T12:53:06.712965Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015403509140014648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_candidates.dee538820e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect candidates\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere candidates is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.713843Z", "completed_at": "2025-03-04T12:53:06.726477Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.734665Z", "completed_at": "2025-03-04T12:53:06.734679Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026779651641845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_chain_id.8223f78907", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect chain_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere chain_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.721813Z", "completed_at": "2025-03-04T12:53:06.736394Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.743281Z", "completed_at": "2025-03-04T12:53:06.743296Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031140565872192383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_contract.c25d469610", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.727911Z", "completed_at": "2025-03-04T12:53:06.737947Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.744960Z", "completed_at": "2025-03-04T12:53:06.744971Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02615809440612793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_epoch_id.a59e309b31", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect epoch_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere epoch_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.738538Z", "completed_at": "2025-03-04T12:53:06.747250Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.753976Z", "completed_at": "2025-03-04T12:53:06.753989Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027009963989257812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_event_name.2430cbaa6f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.749238Z", "completed_at": "2025-03-04T12:53:06.757759Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.768742Z", "completed_at": "2025-03-04T12:53:06.768756Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024609804153442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_id.1f48bf1a21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.758368Z", "completed_at": "2025-03-04T12:53:06.770661Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.778766Z", "completed_at": "2025-03-04T12:53:06.778781Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030306577682495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_transaction_hash.5851258e66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.763874Z", "completed_at": "2025-03-04T12:53:06.772556Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.780385Z", "completed_at": "2025-03-04T12:53:06.780393Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025452852249145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_voter.7b36a4fa86", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voter\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere voter is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.773134Z", "completed_at": "2025-03-04T12:53:06.782659Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.791922Z", "completed_at": "2025-03-04T12:53:06.791934Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02899479866027832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_recorded_snax_mainnet_voting_power.fc033faf22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voting_power\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere voting_power is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.784695Z", "completed_at": "2025-03-04T12:53:06.795000Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.801623Z", "completed_at": "2025-03-04T12:53:06.801638Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022017717361450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_treasury_vote_recorded_snax_mainnet_id.d13b536538", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.796166Z", "completed_at": "2025-03-04T12:53:06.808323Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.815608Z", "completed_at": "2025-03-04T12:53:06.815621Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031702280044555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_treasury_vote_recorded_snax_mainnet_transaction_hash.9768cf1aa6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_hash as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_recorded_snax_mainnet\"\nwhere transaction_hash is not null\ngroup by transaction_hash\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.802590Z", "completed_at": "2025-03-04T12:53:06.814972Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.817252Z", "completed_at": "2025-03-04T12:53:06.817259Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024481534957885742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_arbitrum_mainnet", "compiled": true, "compiled_code": "with rewards_distributed as (\n    select\n        block_timestamp as ts,\n        CAST(\n            pool_id as INTEGER\n        ) as pool_id,\n        collateral_type,\n        distributor,\n        \n    amount / 1e18\n as amount,\n        TO_TIMESTAMP(\"start\") as ts_start,\n        \"duration\"\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\"\n),\n\ndistributors as (\n    select\n        CAST(distributor_address as TEXT) as distributor_address,\n        CAST(token_symbol as TEXT) as token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_reward_distributors\"\n)\n\nselect\n    rd.ts,\n    rd.pool_id,\n    rd.collateral_type,\n    rd.distributor,\n    distributors.token_symbol,\n    rd.amount,\n    rd.ts_start,\n    rd.duration\nfrom\n    rewards_distributed as rd\ninner join distributors on rd.distributor = distributors.distributor_address\norder by\n    rd.ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.809129Z", "completed_at": "2025-03-04T12:53:06.818089Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.825201Z", "completed_at": "2025-03-04T12:53:06.825212Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024416685104370117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_treasury_vote_withdrawn_snax_mainnet_chain_id__2192__10__1__8453__42161.37c0ffb3f6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        chain_id as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\n    group by chain_id\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '2192','10','1','8453','42161'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.819369Z", "completed_at": "2025-03-04T12:53:06.828529Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.830925Z", "completed_at": "2025-03-04T12:53:06.830934Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01685953140258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_treasury_vote_withdrawn_snax_mainnet_event_name__VoteWithdrawn.d758312593", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'VoteWithdrawn'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.831808Z", "completed_at": "2025-03-04T12:53:06.851018Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.853577Z", "completed_at": "2025-03-04T12:53:06.853589Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027369976043701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_arbitrum_mainnet_reward_distributors_distributor_address.700581d5a6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor_address\nfrom \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_reward_distributors\"\nwhere distributor_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.837053Z", "completed_at": "2025-03-04T12:53:06.851693Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.854496Z", "completed_at": "2025-03-04T12:53:06.854507Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027476787567138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_arbitrum_mainnet_reward_distributors_token_symbol.a65060c57e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_reward_distributors\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.845604Z", "completed_at": "2025-03-04T12:53:06.852962Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.860229Z", "completed_at": "2025-03-04T12:53:06.860241Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030082225799560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_block_number.271b1a17ba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.855361Z", "completed_at": "2025-03-04T12:53:06.864215Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.866715Z", "completed_at": "2025-03-04T12:53:06.866726Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01660919189453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_block_timestamp.dbe2a9ba3e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.868783Z", "completed_at": "2025-03-04T12:53:06.885290Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.887970Z", "completed_at": "2025-03-04T12:53:06.887981Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024491310119628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_chain_id.1991832eba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect chain_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere chain_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.879712Z", "completed_at": "2025-03-04T12:53:06.886173Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.888897Z", "completed_at": "2025-03-04T12:53:06.888904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023526906967163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_epoch_id.6543be91bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect epoch_id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere epoch_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.874739Z", "completed_at": "2025-03-04T12:53:06.887342Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.896441Z", "completed_at": "2025-03-04T12:53:06.896450Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03173494338989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_contract.3e76561d2e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.889805Z", "completed_at": "2025-03-04T12:53:06.900907Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.903281Z", "completed_at": "2025-03-04T12:53:06.903290Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018972158432006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_event_name.3a8d12a41e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.904737Z", "completed_at": "2025-03-04T12:53:06.920718Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.923305Z", "completed_at": "2025-03-04T12:53:06.923317Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02385878562927246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_id.ffce1d7680", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.909589Z", "completed_at": "2025-03-04T12:53:06.921279Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.924224Z", "completed_at": "2025-03-04T12:53:06.924231Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024038076400756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_transaction_hash.12490c3827", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.914990Z", "completed_at": "2025-03-04T12:53:06.922750Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.929720Z", "completed_at": "2025-03-04T12:53:06.929730Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028345823287963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_treasury_vote_withdrawn_snax_mainnet_voter.b972eb7f34", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect voter\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere voter is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.925114Z", "completed_at": "2025-03-04T12:53:06.933558Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.936019Z", "completed_at": "2025-03-04T12:53:06.936027Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016170024871826172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_treasury_vote_withdrawn_snax_mainnet_id.cefaabe32f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.943368Z", "completed_at": "2025-03-04T12:53:06.954739Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.957189Z", "completed_at": "2025-03-04T12:53:06.957203Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023138999938964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_collateral_modified_arbitrum_mainnet", "compiled": true, "compiled_code": "select\n    cm.id,\n    cm.block_timestamp,\n    cm.account_id,\n    cm.block_number,\n    cm.transaction_hash,\n    cm.contract,\n    cm.event_name,\n    synths.synth_symbol,\n    cm.collateral_id as synth_market_id,\n    synths.synth_token_address,\n    cm.sender,\n    \n    cm.amount_delta / 1e18\n as amount_delta\nfrom\n    \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\"\n    as cm\ninner join \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_synths\" as synths\n    on cm.collateral_id = synths.synth_market_id", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.938016Z", "completed_at": "2025-03-04T12:53:06.955361Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.958132Z", "completed_at": "2025-03-04T12:53:06.958140Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025310039520263672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_treasury_vote_withdrawn_snax_mainnet_transaction_hash.771718d1e2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_hash as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_raw_snax_mainnet\".\"treasury_vote_withdrawn_snax_mainnet\"\nwhere transaction_hash is not null\ngroup by transaction_hash\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.949274Z", "completed_at": "2025-03-04T12:53:06.956605Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.963404Z", "completed_at": "2025-03-04T12:53:06.963412Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028719663619995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_arbitrum_mainnet_tokens_token_address.08d3db4ee2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_address\nfrom \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_tokens\"\nwhere token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.959023Z", "completed_at": "2025-03-04T12:53:06.966871Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.969360Z", "completed_at": "2025-03-04T12:53:06.969368Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01575779914855957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_arbitrum_mainnet_tokens_token_symbol.619d115f2e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_tokens\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.972841Z", "completed_at": "2025-03-04T12:53:06.993280Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.994652Z", "completed_at": "2025-03-04T12:53:06.994663Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027329683303833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_collateral_modified_arbitrum_sepolia", "compiled": true, "compiled_code": "select\n    cm.id,\n    cm.block_timestamp,\n    cm.account_id,\n    cm.block_number,\n    cm.transaction_hash,\n    cm.contract,\n    cm.event_name,\n    synths.synth_symbol,\n    cm.collateral_id as synth_market_id,\n    synths.synth_token_address,\n    cm.sender,\n    \n    cm.amount_delta / 1e18\n as amount_delta\nfrom\n    \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\"\n    as cm\ninner join \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_synths\" as synths\n    on cm.collateral_id = synths.synth_market_id", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.980567Z", "completed_at": "2025-03-04T12:53:06.993887Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:06.995694Z", "completed_at": "2025-03-04T12:53:06.995703Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02707815170288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_arbitrum_sepolia_reward_distributors_distributor_address.6379395bc6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor_address\nfrom \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_reward_distributors\"\nwhere distributor_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.976709Z", "completed_at": "2025-03-04T12:53:06.996554Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.233817Z", "completed_at": "2025-03-04T12:53:07.233837Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.265932559967041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_arbitrum_sepolia", "compiled": true, "compiled_code": "with rewards_distributed as (\n    select\n        block_timestamp as ts,\n        CAST(\n            pool_id as INTEGER\n        ) as pool_id,\n        collateral_type,\n        distributor,\n        \n    amount / 1e18\n as amount,\n        TO_TIMESTAMP(\"start\") as ts_start,\n        \"duration\"\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\"\n),\n\ndistributors as (\n    select\n        CAST(distributor_address as TEXT) as distributor_address,\n        CAST(token_symbol as TEXT) as token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_reward_distributors\"\n)\n\nselect\n    rd.ts,\n    rd.pool_id,\n    rd.collateral_type,\n    rd.distributor,\n    distributors.token_symbol,\n    rd.amount,\n    rd.ts_start,\n    rd.duration\nfrom\n    rewards_distributed as rd\ninner join distributors on rd.distributor = distributors.distributor_address\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:06.987026Z", "completed_at": "2025-03-04T12:53:06.997145Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.235043Z", "completed_at": "2025-03-04T12:53:07.235052Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.249922513961792, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_arbitrum_sepolia_reward_distributors_token_symbol.62adebb178", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_reward_distributors\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.245776Z", "completed_at": "2025-03-04T12:53:07.261452Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.263132Z", "completed_at": "2025-03-04T12:53:07.263144Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026587963104248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_arbitrum_sepolia_tokens_token_address.9daa149fb1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_address\nfrom \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_tokens\"\nwhere token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.241367Z", "completed_at": "2025-03-04T12:53:07.262037Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.265332Z", "completed_at": "2025-03-04T12:53:07.265341Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02947235107421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_base_mainnet", "compiled": true, "compiled_code": "with rewards_distributed as (\n    select\n        block_timestamp as ts,\n        CAST(\n            pool_id as INTEGER\n        ) as pool_id,\n        collateral_type,\n        distributor,\n        \n    amount / 1e18\n as amount,\n        TO_TIMESTAMP(start) as ts_start,\n        duration\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\"\n),\n\ndistributors as (\n    select\n        CAST(distributor_address as TEXT) as distributor_address,\n        CAST(token_symbol as TEXT) as token_symbol,\n        reward_type\n    from\n        \"analytics\".\"prod_seeds\".\"base_mainnet_reward_distributors\"\n)\n\nselect\n    rd.ts,\n    rd.pool_id,\n    rd.collateral_type,\n    distributors.reward_type,\n    rd.distributor,\n    distributors.token_symbol,\n    rd.amount,\n    rd.ts_start,\n    rd.duration\nfrom\n    rewards_distributed as rd\ninner join distributors on rd.distributor = distributors.distributor_address\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.252191Z", "completed_at": "2025-03-04T12:53:07.264159Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.266977Z", "completed_at": "2025-03-04T12:53:07.266986Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027007579803466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_arbitrum_sepolia_tokens_token_symbol.17ecd3a7d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_tokens\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.256893Z", "completed_at": "2025-03-04T12:53:07.264730Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.267871Z", "completed_at": "2025-03-04T12:53:07.267879Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02723097801208496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_base_mainnet_reward_distributors_distributor_address.d0aab9bee0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor_address\nfrom \"analytics\".\"prod_seeds\".\"base_mainnet_reward_distributors\"\nwhere distributor_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.274945Z", "completed_at": "2025-03-04T12:53:07.296987Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.300005Z", "completed_at": "2025-03-04T12:53:07.300019Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030786991119384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_base_mainnet_reward_distributors_token_symbol.d94311a8fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_seeds\".\"base_mainnet_reward_distributors\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.287534Z", "completed_at": "2025-03-04T12:53:07.298171Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.300982Z", "completed_at": "2025-03-04T12:53:07.300992Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027968645095825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_base_mainnet_tokens_token_address.47a3f5acd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_address\nfrom \"analytics\".\"prod_seeds\".\"base_mainnet_tokens\"\nwhere token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.281397Z", "completed_at": "2025-03-04T12:53:07.298839Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.301877Z", "completed_at": "2025-03-04T12:53:07.301884Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03008413314819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_collateral_modified_base_mainnet", "compiled": true, "compiled_code": "select\n    cm.id,\n    cm.block_timestamp,\n    cm.account_id,\n    cm.block_number,\n    cm.transaction_hash,\n    cm.contract,\n    cm.event_name,\n    synths.synth_symbol,\n    cm.synth_market_id,\n    synths.synth_token_address,\n    cm.sender,\n    \n    cm.amount_delta / 1e18\n as amount_delta\nfrom\n    \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\"\n    as cm\ninner join \"analytics\".\"prod_seeds\".\"base_mainnet_synths\" as synths\n    on cm.synth_market_id = synths.synth_market_id", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.292208Z", "completed_at": "2025-03-04T12:53:07.299384Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.302761Z", "completed_at": "2025-03-04T12:53:07.302771Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02911853790283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_base_mainnet_tokens_token_symbol.77007fd576", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_seeds\".\"base_mainnet_tokens\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.311640Z", "completed_at": "2025-03-04T12:53:07.331562Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.332505Z", "completed_at": "2025-03-04T12:53:07.332519Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02588343620300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_base_sepolia", "compiled": true, "compiled_code": "with rewards_distributed as (\n    select\n        block_timestamp as ts,\n        CAST(\n            pool_id as INTEGER\n        ) as pool_id,\n        collateral_type,\n        distributor,\n        \n    amount / 1e18\n as amount,\n        TO_TIMESTAMP(\"start\") as ts_start,\n        \"duration\"\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\"\n),\n\ndistributors as (\n    select\n        CAST(distributor_address as TEXT) as distributor_address,\n        CAST(token_symbol as TEXT) as token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"base_sepolia_reward_distributors\"\n)\n\nselect\n    rd.ts,\n    rd.pool_id,\n    rd.collateral_type,\n    rd.distributor,\n    distributors.token_symbol,\n    rd.amount,\n    rd.ts_start,\n    rd.duration\nfrom\n    rewards_distributed as rd\ninner join distributors on rd.distributor = distributors.distributor_address\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.316267Z", "completed_at": "2025-03-04T12:53:07.333555Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.336055Z", "completed_at": "2025-03-04T12:53:07.336063Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028763294219970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_base_sepolia_reward_distributors_distributor_address.08551b149c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor_address\nfrom \"analytics\".\"prod_seeds\".\"base_sepolia_reward_distributors\"\nwhere distributor_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.325376Z", "completed_at": "2025-03-04T12:53:07.334745Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.337876Z", "completed_at": "2025-03-04T12:53:07.337884Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02928471565246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_collateral_modified_base_sepolia", "compiled": true, "compiled_code": "select\n    cm.id,\n    cm.block_timestamp,\n    cm.account_id,\n    cm.block_number,\n    cm.transaction_hash,\n    cm.contract,\n    cm.event_name,\n    synths.synth_symbol,\n    cm.synth_market_id,\n    synths.synth_token_address,\n    cm.sender,\n    \n    cm.amount_delta / 1e18\n as amount_delta\nfrom\n    \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\"\n    as cm\ninner join \"analytics\".\"prod_seeds\".\"base_sepolia_synths\" as synths\n    on cm.synth_market_id = synths.synth_market_id", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.320857Z", "completed_at": "2025-03-04T12:53:07.335352Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.338759Z", "completed_at": "2025-03-04T12:53:07.338770Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030808448791503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_base_sepolia_reward_distributors_token_symbol.37319f3c5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_seeds\".\"base_sepolia_reward_distributors\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.343234Z", "completed_at": "2025-03-04T12:53:07.351594Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.364692Z", "completed_at": "2025-03-04T12:53:07.364707Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027650117874145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_base_sepolia_tokens_token_address.73f3c4e0ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_address\nfrom \"analytics\".\"prod_seeds\".\"base_sepolia_tokens\"\nwhere token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.356945Z", "completed_at": "2025-03-04T12:53:07.366442Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.368452Z", "completed_at": "2025-03-04T12:53:07.368478Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02028656005859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_eth_mainnet", "compiled": true, "compiled_code": "with rewards_distributed as (\n    select\n        block_timestamp as ts,\n        CAST(\n            pool_id as INTEGER\n        ) as pool_id,\n        collateral_type,\n        distributor,\n        \n    amount / 1e18\n as amount,\n        TO_TIMESTAMP(\"start\") as ts_start,\n        \"duration\"\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_distributed_eth_mainnet\"\n),\n\ndistributors as (\n    select\n        CAST(distributor_address as TEXT) as distributor_address,\n        CAST(token_symbol as TEXT) as token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"eth_mainnet_reward_distributors\"\n)\n\nselect\n    rd.ts,\n    rd.pool_id,\n    rd.collateral_type,\n    rd.distributor,\n    distributors.token_symbol,\n    rd.amount,\n    rd.ts_start,\n    rd.duration\nfrom\n    rewards_distributed as rd\ninner join distributors on rd.distributor = distributors.distributor_address\norder by\n    ts", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.352185Z", "completed_at": "2025-03-04T12:53:07.367737Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.370636Z", "completed_at": "2025-03-04T12:53:07.370644Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02815699577331543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_base_sepolia_tokens_token_symbol.1afdd41b38", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_seeds\".\"base_sepolia_tokens\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.361097Z", "completed_at": "2025-03-04T12:53:07.369380Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.372125Z", "completed_at": "2025-03-04T12:53:07.372132Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02324676513671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_eth_mainnet", "compiled": true, "compiled_code": "with all_prices as (\n    select\n        ts,\n        collateral_type as market_address,\n        null as market_symbol,\n        collateral_value / amount as price\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\n    where\n        collateral_value > 0\n),\n\ntokens as (\n    select\n        token_address,\n        token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"eth_mainnet_tokens\"\n)\n\nselect\n    p.ts,\n    p.market_address,\n    p.price,\n    COALESCE(\n        t.token_symbol,\n        p.market_symbol\n    ) as market_symbol\nfrom\n    all_prices as p\nleft join tokens as t\n    on LOWER(\n        p.market_address\n    ) = LOWER(\n        t.token_address\n    )", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_prices_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.376028Z", "completed_at": "2025-03-04T12:53:07.387075Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.392759Z", "completed_at": "2025-03-04T12:53:07.392771Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022913217544555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_buyback_daily_base_mainnet", "compiled": true, "compiled_code": "with agg as (\n    select\n        date_trunc(\n            'day',\n            ts\n        ) as ts,\n        sum(snx) as snx_amount,\n        sum(usd) as usd_amount\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\n    group by\n        date_trunc(\n            'day',\n            ts\n        )\n) -- add cumulative amounts\n\nselect\n    ts,\n    snx_amount,\n    usd_amount,\n    sum(snx_amount) over (\n        order by\n            ts\n    ) as cumulative_snx_amount,\n    sum(usd_amount) over (\n        order by\n            ts\n    ) as cumulative_usd_amount\nfrom\n    agg", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.383879Z", "completed_at": "2025-03-04T12:53:07.398179Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.399993Z", "completed_at": "2025-03-04T12:53:07.400003Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025511980056762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_buyback_hourly_base_mainnet", "compiled": true, "compiled_code": "with agg as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        sum(snx) as snx_amount,\n        sum(usd) as usd_amount\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\n    group by\n        date_trunc(\n            'hour',\n            ts\n        )\n) -- add cumulative amounts\n\nselect\n    ts,\n    snx_amount,\n    usd_amount,\n    sum(snx_amount) over (\n        order by\n            ts\n    ) as cumulative_snx_amount,\n    sum(usd_amount) over (\n        order by\n            ts\n    ) as cumulative_usd_amount\nfrom\n    agg", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.388322Z", "completed_at": "2025-03-04T12:53:07.400856Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.403731Z", "completed_at": "2025-03-04T12:53:07.403739Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02272486686706543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_base_mainnet_snx__True__0.ffcae6ef8f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.393781Z", "completed_at": "2025-03-04T12:53:07.402345Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.405384Z", "completed_at": "2025-03-04T12:53:07.405391Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023014307022094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_base_mainnet_snx_price__True__0.4ab5da9346", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.407568Z", "completed_at": "2025-03-04T12:53:07.414710Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.420878Z", "completed_at": "2025-03-04T12:53:07.420889Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019242048263549805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_base_mainnet_usd__True__0.e9e29cece7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.415318Z", "completed_at": "2025-03-04T12:53:07.432045Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.433612Z", "completed_at": "2025-03-04T12:53:07.433623Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027475595474243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_mainnet_buyer.996c564c05", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect buyer\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\nwhere buyer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.421905Z", "completed_at": "2025-03-04T12:53:07.434581Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.437064Z", "completed_at": "2025-03-04T12:53:07.437075Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02386927604675293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_mainnet_id.fbad84fb48", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.427078Z", "completed_at": "2025-03-04T12:53:07.435140Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.437972Z", "completed_at": "2025-03-04T12:53:07.437979Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02400064468383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_mainnet_snx.75b728a26f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\nwhere snx is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.441391Z", "completed_at": "2025-03-04T12:53:07.452126Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.454085Z", "completed_at": "2025-03-04T12:53:07.454094Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018465280532836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_mainnet_snx_price.e23de62b78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx_price\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\nwhere snx_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.447874Z", "completed_at": "2025-03-04T12:53:07.454992Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.464884Z", "completed_at": "2025-03-04T12:53:07.464895Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025608062744140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_mainnet_ts.42175c7800", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.459834Z", "completed_at": "2025-03-04T12:53:07.466769Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.469226Z", "completed_at": "2025-03-04T12:53:07.469237Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022213220596313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_buyback_base_mainnet_id.f0c25ee329", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.455582Z", "completed_at": "2025-03-04T12:53:07.467381Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.470130Z", "completed_at": "2025-03-04T12:53:07.470138Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024019956588745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_mainnet_usd.2e04e1ae30", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\nwhere usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.471785Z", "completed_at": "2025-03-04T12:53:07.479938Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.484983Z", "completed_at": "2025-03-04T12:53:07.484994Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018930673599243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_buyback_daily_base_sepolia", "compiled": true, "compiled_code": "with agg as (\n    select\n        date_trunc(\n            'day',\n            ts\n        ) as ts,\n        sum(snx) as snx_amount,\n        sum(usd) as usd_amount\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\n    group by\n        date_trunc(\n            'day',\n            ts\n        )\n) -- add cumulative amounts\n\nselect\n    ts,\n    snx_amount,\n    usd_amount,\n    sum(snx_amount) over (\n        order by\n            ts\n    ) as cumulative_snx_amount,\n    sum(usd_amount) over (\n        order by\n            ts\n    ) as cumulative_usd_amount\nfrom\n    agg", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.480559Z", "completed_at": "2025-03-04T12:53:07.490217Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.496518Z", "completed_at": "2025-03-04T12:53:07.496527Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02550196647644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_buyback_hourly_base_sepolia", "compiled": true, "compiled_code": "with agg as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        sum(snx) as snx_amount,\n        sum(usd) as usd_amount\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\n    group by\n        date_trunc(\n            'hour',\n            ts\n        )\n) -- add cumulative amounts\n\nselect\n    ts,\n    snx_amount,\n    usd_amount,\n    sum(snx_amount) over (\n        order by\n            ts\n    ) as cumulative_snx_amount,\n    sum(usd_amount) over (\n        order by\n            ts\n    ) as cumulative_usd_amount\nfrom\n    agg", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.486009Z", "completed_at": "2025-03-04T12:53:07.497758Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.500234Z", "completed_at": "2025-03-04T12:53:07.500242Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021643877029418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_base_sepolia_snx__True__0.21bd52e738", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.490958Z", "completed_at": "2025-03-04T12:53:07.499019Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.502100Z", "completed_at": "2025-03-04T12:53:07.502108Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022852420806884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_base_sepolia_snx_price__True__0.fedfb306c2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.504250Z", "completed_at": "2025-03-04T12:53:07.515584Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.517519Z", "completed_at": "2025-03-04T12:53:07.517528Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019250869750976562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_base_sepolia_usd__True__0.7426b61d1a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.511270Z", "completed_at": "2025-03-04T12:53:07.528529Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.530889Z", "completed_at": "2025-03-04T12:53:07.530900Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028028011322021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_sepolia_buyer.e7ec385108", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect buyer\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\nwhere buyer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.523692Z", "completed_at": "2025-03-04T12:53:07.530226Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.532976Z", "completed_at": "2025-03-04T12:53:07.532983Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02248406410217285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_sepolia_snx.39b0dcead2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\nwhere snx is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.518439Z", "completed_at": "2025-03-04T12:53:07.531751Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.534504Z", "completed_at": "2025-03-04T12:53:07.534511Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024748563766479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_sepolia_id.03ec6b8e04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.539350Z", "completed_at": "2025-03-04T12:53:07.554041Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.563272Z", "completed_at": "2025-03-04T12:53:07.563285Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031093358993530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_sepolia_snx_price.361a60f2b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx_price\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\nwhere snx_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.548910Z", "completed_at": "2025-03-04T12:53:07.564349Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.566603Z", "completed_at": "2025-03-04T12:53:07.566614Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029998064041137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_sepolia_ts.f6314da709", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.554656Z", "completed_at": "2025-03-04T12:53:07.565930Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.568737Z", "completed_at": "2025-03-04T12:53:07.568745Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022585391998291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_base_sepolia_usd.427a3c3ca1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\nwhere usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.559054Z", "completed_at": "2025-03-04T12:53:07.567419Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.570270Z", "completed_at": "2025-03-04T12:53:07.570278Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022832870483398438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_buyback_base_sepolia_id.ce5fc96649", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.573706Z", "completed_at": "2025-03-04T12:53:07.587132Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.593064Z", "completed_at": "2025-03-04T12:53:07.593076Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02512359619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_migration_eth_mainnet_collateral_type__0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F.a38946ae0c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        collateral_type as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\n    group by collateral_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    '0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.582665Z", "completed_at": "2025-03-04T12:53:07.598232Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.600708Z", "completed_at": "2025-03-04T12:53:07.600720Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02848029136657715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_migration_eth_mainnet_collateral_amount__True__0.049cad30eb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.588440Z", "completed_at": "2025-03-04T12:53:07.599989Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.602848Z", "completed_at": "2025-03-04T12:53:07.602856Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02293086051940918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_migration_eth_mainnet_pool_id__True__1__1.451aedc606", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.594099Z", "completed_at": "2025-03-04T12:53:07.601608Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.604376Z", "completed_at": "2025-03-04T12:53:07.604384Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02321767807006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_account_id.afcffa2df1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.607840Z", "completed_at": "2025-03-04T12:53:07.619441Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.626870Z", "completed_at": "2025-03-04T12:53:07.626881Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024808168411254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_block_number.9a454098b0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.615154Z", "completed_at": "2025-03-04T12:53:07.627793Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.634092Z", "completed_at": "2025-03-04T12:53:07.634101Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027652263641357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_collateral_amount.0b05c3add8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_amount\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere collateral_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.620749Z", "completed_at": "2025-03-04T12:53:07.633502Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.635810Z", "completed_at": "2025-03-04T12:53:07.635818Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02350592613220215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_collateral_type.d3ff39474d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.628364Z", "completed_at": "2025-03-04T12:53:07.636667Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.639375Z", "completed_at": "2025-03-04T12:53:07.639383Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025713682174682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_debt_amount.8b36e762c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt_amount\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere debt_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.640897Z", "completed_at": "2025-03-04T12:53:07.653991Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.659888Z", "completed_at": "2025-03-04T12:53:07.659900Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0249173641204834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_pool_id.f0e6b5266e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.649365Z", "completed_at": "2025-03-04T12:53:07.661038Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.669118Z", "completed_at": "2025-03-04T12:53:07.669129Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02899622917175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_staker.745012ec35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect staker\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere staker is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.654616Z", "completed_at": "2025-03-04T12:53:07.668413Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.671386Z", "completed_at": "2025-03-04T12:53:07.671393Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025938749313354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_transaction_hash.15435ec6a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.661640Z", "completed_at": "2025-03-04T12:53:07.670834Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.673569Z", "completed_at": "2025-03-04T12:53:07.673580Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02514958381652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_eth_mainnet_ts.4a5f6995ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.675829Z", "completed_at": "2025-03-04T12:53:07.689102Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.695118Z", "completed_at": "2025-03-04T12:53:07.695131Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025128841400146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_arbitrum_mainnet_amount_delegated__True__0.f003c4fdae", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_delegation_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_delegated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.684315Z", "completed_at": "2025-03-04T12:53:07.696101Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.702890Z", "completed_at": "2025-03-04T12:53:07.702899Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027902603149414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_arbitrum_mainnet_pool_id__True__0.aa7ddfc925", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_delegation_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.690285Z", "completed_at": "2025-03-04T12:53:07.702183Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.704613Z", "completed_at": "2025-03-04T12:53:07.704621Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023071765899658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_mainnet_account_id.bd5bdf25e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_delegation_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.696720Z", "completed_at": "2025-03-04T12:53:07.705457Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.708037Z", "completed_at": "2025-03-04T12:53:07.708045Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0250856876373291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_mainnet_amount_delegated.56c41128cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delegated\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_delegation_arbitrum_mainnet\"\nwhere amount_delegated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.709579Z", "completed_at": "2025-03-04T12:53:07.717056Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.728741Z", "completed_at": "2025-03-04T12:53:07.728754Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0249783992767334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_mainnet_collateral_type.2ce3f7a9bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_delegation_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.724512Z", "completed_at": "2025-03-04T12:53:07.731595Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.737959Z", "completed_at": "2025-03-04T12:53:07.737967Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023735523223876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_mainnet_ts.47ea299d3f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_delegation_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.718264Z", "completed_at": "2025-03-04T12:53:07.732154Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.738857Z", "completed_at": "2025-03-04T12:53:07.738864Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030033111572265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_mainnet_pool_id.54d8a339d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_delegation_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.732736Z", "completed_at": "2025-03-04T12:53:07.741051Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.747809Z", "completed_at": "2025-03-04T12:53:07.747817Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030264616012573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_active_stakers_daily_arbitrum_mainnet_block_date.02ea5ddba6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_date\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_active_stakers_daily_arbitrum_mainnet\"\nwhere block_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.742370Z", "completed_at": "2025-03-04T12:53:07.750661Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.757136Z", "completed_at": "2025-03-04T12:53:07.757147Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020038127899169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pool_delegation_arbitrum_mainnet_pool_id__True__0.cc3901412b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_delegation_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.751917Z", "completed_at": "2025-03-04T12:53:07.763126Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.771085Z", "completed_at": "2025-03-04T12:53:07.771096Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024214506149291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_arbitrum_mainnet_collateral_type.d924f2d2aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_delegation_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.758050Z", "completed_at": "2025-03-04T12:53:07.771983Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.774137Z", "completed_at": "2025-03-04T12:53:07.774146Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025554895401000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_arbitrum_mainnet_pool_id.fe0fca7194", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_delegation_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.764582Z", "completed_at": "2025-03-04T12:53:07.775110Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.777651Z", "completed_at": "2025-03-04T12:53:07.777659Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02126622200012207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_arbitrum_mainnet_ts.5d96538438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_delegation_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.778535Z", "completed_at": "2025-03-04T12:53:07.791620Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.798450Z", "completed_at": "2025-03-04T12:53:07.798487Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026014089584350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_arbitrum_sepolia_amount_delegated__True__0.b9f7312790", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_delegation_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_delegated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.786049Z", "completed_at": "2025-03-04T12:53:07.797845Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.800204Z", "completed_at": "2025-03-04T12:53:07.800214Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024028539657592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_arbitrum_sepolia_pool_id__True__0.8b1dae49a3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_delegation_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.793052Z", "completed_at": "2025-03-04T12:53:07.801989Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.808845Z", "completed_at": "2025-03-04T12:53:07.808855Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024471521377563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_sepolia_account_id.a6811a48a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_delegation_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.802559Z", "completed_at": "2025-03-04T12:53:07.811170Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.818409Z", "completed_at": "2025-03-04T12:53:07.818420Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02631998062133789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_sepolia_amount_delegated.f883895d2a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delegated\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_delegation_arbitrum_sepolia\"\nwhere amount_delegated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.813064Z", "completed_at": "2025-03-04T12:53:07.828257Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.835160Z", "completed_at": "2025-03-04T12:53:07.835177Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027190208435058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_sepolia_collateral_type.c996bc8d62", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_delegation_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.820074Z", "completed_at": "2025-03-04T12:53:07.829834Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.836865Z", "completed_at": "2025-03-04T12:53:07.836876Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027077674865722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_sepolia_pool_id.0a7b37ae8c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_delegation_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.830393Z", "completed_at": "2025-03-04T12:53:07.843500Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.845736Z", "completed_at": "2025-03-04T12:53:07.845745Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026454687118530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_arbitrum_sepolia_ts.143d36cd88", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_delegation_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.838603Z", "completed_at": "2025-03-04T12:53:07.847899Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.854769Z", "completed_at": "2025-03-04T12:53:07.854780Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02581477165222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_base_mainnet_amount_delegated__True__0.5d186a76ca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_account_delegation_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_delegated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.849766Z", "completed_at": "2025-03-04T12:53:07.861831Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.864457Z", "completed_at": "2025-03-04T12:53:07.864487Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019646167755126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_base_mainnet_pool_id__True__0.a18d31544f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_account_delegation_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.856517Z", "completed_at": "2025-03-04T12:53:07.863892Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.870883Z", "completed_at": "2025-03-04T12:53:07.870894Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024344921112060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_mainnet_account_id.64d4657b45", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_account_delegation_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.865354Z", "completed_at": "2025-03-04T12:53:07.877770Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.881443Z", "completed_at": "2025-03-04T12:53:07.881454Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02570509910583496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_mainnet_amount_delegated.c0cf7fdd11", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delegated\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_account_delegation_base_mainnet\"\nwhere amount_delegated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.872690Z", "completed_at": "2025-03-04T12:53:07.883725Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.890182Z", "completed_at": "2025-03-04T12:53:07.890192Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02709794044494629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_mainnet_collateral_type.01ebd9c59e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_account_delegation_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.885583Z", "completed_at": "2025-03-04T12:53:07.898454Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.904984Z", "completed_at": "2025-03-04T12:53:07.904997Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024344921112060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_mainnet_pool_id.c2b6448825", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_account_delegation_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.891733Z", "completed_at": "2025-03-04T12:53:07.899082Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.905914Z", "completed_at": "2025-03-04T12:53:07.905922Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02353215217590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_mainnet_ts.3412be3139", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_account_delegation_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.899644Z", "completed_at": "2025-03-04T12:53:07.911253Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.913411Z", "completed_at": "2025-03-04T12:53:07.913420Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022479534149169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_active_stakers_daily_arbitrum_sepolia_block_date.7dd9b569bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_date\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_active_stakers_daily_arbitrum_sepolia\"\nwhere block_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.906947Z", "completed_at": "2025-03-04T12:53:07.915004Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.917528Z", "completed_at": "2025-03-04T12:53:07.917538Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019783973693847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_active_stakers_daily_base_mainnet_block_date.e8394550e7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_date\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_active_stakers_daily_base_mainnet\"\nwhere block_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.919628Z", "completed_at": "2025-03-04T12:53:07.934501Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.941004Z", "completed_at": "2025-03-04T12:53:07.941018Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026756763458251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pool_delegation_arbitrum_sepolia_pool_id__True__0.72a7f44e62", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_delegation_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.925942Z", "completed_at": "2025-03-04T12:53:07.940371Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.947501Z", "completed_at": "2025-03-04T12:53:07.947512Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03201794624328613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_arbitrum_sepolia_collateral_type.866b468c25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_delegation_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.935226Z", "completed_at": "2025-03-04T12:53:07.946786Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.949273Z", "completed_at": "2025-03-04T12:53:07.949281Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0304110050201416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_arbitrum_sepolia_pool_id.58ecabbbb6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_delegation_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.942095Z", "completed_at": "2025-03-04T12:53:07.950843Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.953507Z", "completed_at": "2025-03-04T12:53:07.953515Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01983809471130371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_arbitrum_sepolia_ts.f1e8f35f9b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_delegation_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.956883Z", "completed_at": "2025-03-04T12:53:07.972718Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.974257Z", "completed_at": "2025-03-04T12:53:07.974268Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022897958755493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pool_delegation_base_mainnet_pool_id__True__0.4d81a0e2e0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_pool_delegation_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.962769Z", "completed_at": "2025-03-04T12:53:07.975153Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.983820Z", "completed_at": "2025-03-04T12:53:07.983831Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03110027313232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_base_mainnet_collateral_type.49ff2a0118", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pool_delegation_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.968218Z", "completed_at": "2025-03-04T12:53:07.980898Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.984816Z", "completed_at": "2025-03-04T12:53:07.984824Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029954195022583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_base_mainnet_pool_id.d338258729", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pool_delegation_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.975809Z", "completed_at": "2025-03-04T12:53:07.987074Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:07.989615Z", "completed_at": "2025-03-04T12:53:07.989626Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02234649658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_base_mainnet_ts.2ed20ab777", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pool_delegation_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.991765Z", "completed_at": "2025-03-04T12:53:08.009283Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.010888Z", "completed_at": "2025-03-04T12:53:08.010900Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02463221549987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_base_sepolia_amount_delegated__True__0.2258d23e98", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_account_delegation_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_delegated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.004723Z", "completed_at": "2025-03-04T12:53:08.011905Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.018629Z", "completed_at": "2025-03-04T12:53:08.018639Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027647733688354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_sepolia_account_id.71a1fd9dac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_account_delegation_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:07.999832Z", "completed_at": "2025-03-04T12:53:08.012444Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.019539Z", "completed_at": "2025-03-04T12:53:08.019549Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029158353805541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_base_sepolia_pool_id__True__0.508b8be78d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_account_delegation_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.013078Z", "completed_at": "2025-03-04T12:53:08.021186Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.023733Z", "completed_at": "2025-03-04T12:53:08.023740Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024697303771972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_sepolia_amount_delegated.07444b44f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delegated\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_account_delegation_base_sepolia\"\nwhere amount_delegated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.025851Z", "completed_at": "2025-03-04T12:53:08.040282Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.045996Z", "completed_at": "2025-03-04T12:53:08.046009Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025582551956176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_sepolia_collateral_type.dc085beb88", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_account_delegation_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.033574Z", "completed_at": "2025-03-04T12:53:08.051414Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.053486Z", "completed_at": "2025-03-04T12:53:08.053495Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02899932861328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_sepolia_pool_id.8eb393e4f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_account_delegation_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.040887Z", "completed_at": "2025-03-04T12:53:08.052060Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.054437Z", "completed_at": "2025-03-04T12:53:08.054444Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029372215270996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_base_sepolia_ts.4b517eadb1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_account_delegation_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.047181Z", "completed_at": "2025-03-04T12:53:08.055292Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.057893Z", "completed_at": "2025-03-04T12:53:08.057904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025122404098510742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_active_stakers_daily_base_sepolia_block_date.d4bff9ac64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_date\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_active_stakers_daily_base_sepolia\"\nwhere block_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.061289Z", "completed_at": "2025-03-04T12:53:08.073384Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.080889Z", "completed_at": "2025-03-04T12:53:08.080901Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02509927749633789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pool_delegation_base_sepolia_pool_id__True__0.6f4bec67e8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_pool_delegation_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.068722Z", "completed_at": "2025-03-04T12:53:08.081866Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.088120Z", "completed_at": "2025-03-04T12:53:08.088129Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02885746955871582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_base_sepolia_collateral_type.6d78a9fae0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pool_delegation_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.074123Z", "completed_at": "2025-03-04T12:53:08.086839Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.089144Z", "completed_at": "2025-03-04T12:53:08.089152Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02921605110168457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_base_sepolia_pool_id.03e5ee04d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pool_delegation_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.082574Z", "completed_at": "2025-03-04T12:53:08.090708Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.093232Z", "completed_at": "2025-03-04T12:53:08.093240Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025421619415283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_base_sepolia_ts.29b697c43e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pool_delegation_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.095338Z", "completed_at": "2025-03-04T12:53:08.102913Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.113362Z", "completed_at": "2025-03-04T12:53:08.113378Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023438453674316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_eth_mainnet_amount_delegated__True__0.854bbca778", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_delegation_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_delegated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.103527Z", "completed_at": "2025-03-04T12:53:08.114659Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.121195Z", "completed_at": "2025-03-04T12:53:08.121204Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027224302291870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_account_delegation_eth_mainnet_pool_id__True__0.35dc5bbd4b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_delegation_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.108205Z", "completed_at": "2025-03-04T12:53:08.119863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.122240Z", "completed_at": "2025-03-04T12:53:08.122248Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027614355087280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_eth_mainnet_account_id.9b9eed26fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_delegation_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.115268Z", "completed_at": "2025-03-04T12:53:08.123167Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.125774Z", "completed_at": "2025-03-04T12:53:08.125781Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023624658584594727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_eth_mainnet_amount_delegated.7c91dafbd8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delegated\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_delegation_eth_mainnet\"\nwhere amount_delegated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.129149Z", "completed_at": "2025-03-04T12:53:08.142624Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.148372Z", "completed_at": "2025-03-04T12:53:08.148386Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02480340003967285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_eth_mainnet_collateral_type.f9b6e0e993", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_delegation_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.138227Z", "completed_at": "2025-03-04T12:53:08.149322Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.155806Z", "completed_at": "2025-03-04T12:53:08.155815Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02869105339050293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_eth_mainnet_pool_id.f6076a6b8b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_delegation_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.143195Z", "completed_at": "2025-03-04T12:53:08.155116Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.158080Z", "completed_at": "2025-03-04T12:53:08.158088Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030307531356811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_delegation_eth_mainnet_ts.a916375fbd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_delegation_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.150051Z", "completed_at": "2025-03-04T12:53:08.157522Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.160246Z", "completed_at": "2025-03-04T12:53:08.160257Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022919178009033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_active_stakers_daily_eth_mainnet_block_date.0984cf179c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_date\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_active_stakers_daily_eth_mainnet\"\nwhere block_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.162432Z", "completed_at": "2025-03-04T12:53:08.170756Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.182877Z", "completed_at": "2025-03-04T12:53:08.182892Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02620244026184082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pool_delegation_eth_mainnet_pool_id__True__0.8087f39696", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_delegation_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.171366Z", "completed_at": "2025-03-04T12:53:08.189184Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.192052Z", "completed_at": "2025-03-04T12:53:08.192062Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0303955078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_eth_mainnet_collateral_type.687e523e9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_delegation_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.176614Z", "completed_at": "2025-03-04T12:53:08.190107Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.192973Z", "completed_at": "2025-03-04T12:53:08.192984Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025027990341186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_eth_mainnet_pool_id.38ebfdf86f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_delegation_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.183973Z", "completed_at": "2025-03-04T12:53:08.190703Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.193879Z", "completed_at": "2025-03-04T12:53:08.193886Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024420976638793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_delegation_eth_mainnet_ts.4c81cbc76a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_delegation_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.197423Z", "completed_at": "2025-03-04T12:53:08.206126Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.217198Z", "completed_at": "2025-03-04T12:53:08.217212Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026004314422607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_market_updated_arbitrum_mainnet_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.0bf85002ba", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.207332Z", "completed_at": "2025-03-04T12:53:08.224072Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.226557Z", "completed_at": "2025-03-04T12:53:08.226567Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0238649845123291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_market_updated_arbitrum_mainnet_market_id__True__0.23d58ffdfe", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.218209Z", "completed_at": "2025-03-04T12:53:08.225359Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.228039Z", "completed_at": "2025-03-04T12:53:08.228049Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02400994300842285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_credit_capacity.03f2d72a75", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.212329Z", "completed_at": "2025-03-04T12:53:08.225986Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.228944Z", "completed_at": "2025-03-04T12:53:08.228951Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02553415298461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_collateral_type.85f2ad0cb4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.230516Z", "completed_at": "2025-03-04T12:53:08.240382Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.242782Z", "completed_at": "2025-03-04T12:53:08.242793Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0181429386138916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_event_name.5590c6c9b0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.243688Z", "completed_at": "2025-03-04T12:53:08.258038Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.260555Z", "completed_at": "2025-03-04T12:53:08.260567Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022296905517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_id.322013511a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.252409Z", "completed_at": "2025-03-04T12:53:08.259365Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.262029Z", "completed_at": "2025-03-04T12:53:08.262039Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02237725257873535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_net_issuance.c0d40f9ece", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.248077Z", "completed_at": "2025-03-04T12:53:08.259957Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.262943Z", "completed_at": "2025-03-04T12:53:08.262951Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02402043342590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_market_id.286e3a43cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.264516Z", "completed_at": "2025-03-04T12:53:08.272384Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.274787Z", "completed_at": "2025-03-04T12:53:08.274797Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016132354736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_token_amount.74526c215d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.280296Z", "completed_at": "2025-03-04T12:53:08.291840Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.294223Z", "completed_at": "2025-03-04T12:53:08.294233Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023204326629638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_ts.b5fc2ec12e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.275690Z", "completed_at": "2025-03-04T12:53:08.292396Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.295126Z", "completed_at": "2025-03-04T12:53:08.295134Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024871349334716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_mainnet_transaction_hash.aa748b5290", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.286335Z", "completed_at": "2025-03-04T12:53:08.292983Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.296011Z", "completed_at": "2025-03-04T12:53:08.296018Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02430891990661621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_core_market_updated_arbitrum_mainnet_id.1caa9c591c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_market_updated_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.299450Z", "completed_at": "2025-03-04T12:53:08.306849Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.313301Z", "completed_at": "2025-03-04T12:53:08.313316Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019869565963745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_market_updated_arbitrum_sepolia_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.ea1df73130", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.308625Z", "completed_at": "2025-03-04T12:53:08.324638Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.326869Z", "completed_at": "2025-03-04T12:53:08.326879Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022923707962036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_market_updated_arbitrum_sepolia_market_id__True__0.95e420ef94", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.314317Z", "completed_at": "2025-03-04T12:53:08.326231Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.328927Z", "completed_at": "2025-03-04T12:53:08.328934Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024190187454223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_collateral_type.d8f0899c66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.318974Z", "completed_at": "2025-03-04T12:53:08.327733Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.330443Z", "completed_at": "2025-03-04T12:53:08.330450Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025098562240600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_credit_capacity.9862e1aaee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.331380Z", "completed_at": "2025-03-04T12:53:08.340952Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.347170Z", "completed_at": "2025-03-04T12:53:08.347180Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0217742919921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_event_name.4419326334", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.342737Z", "completed_at": "2025-03-04T12:53:08.358263Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.360351Z", "completed_at": "2025-03-04T12:53:08.360359Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022290945053100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_id.378db4cf74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.348811Z", "completed_at": "2025-03-04T12:53:08.359662Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.362444Z", "completed_at": "2025-03-04T12:53:08.362452Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02283787727355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_market_id.2752afabd6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.354013Z", "completed_at": "2025-03-04T12:53:08.361858Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.368393Z", "completed_at": "2025-03-04T12:53:08.368403Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02701091766357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_net_issuance.62f7b3daca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.364021Z", "completed_at": "2025-03-04T12:53:08.371575Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.374011Z", "completed_at": "2025-03-04T12:53:08.374021Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015120744705200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_token_amount.4d14e4bb21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.375510Z", "completed_at": "2025-03-04T12:53:08.391789Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.393402Z", "completed_at": "2025-03-04T12:53:08.393411Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023465633392333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_transaction_hash.45d8547f52", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.381388Z", "completed_at": "2025-03-04T12:53:08.394311Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.396861Z", "completed_at": "2025-03-04T12:53:08.396871Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024831771850585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_arbitrum_sepolia_ts.b76a8ffb56", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.387626Z", "completed_at": "2025-03-04T12:53:08.395545Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.402361Z", "completed_at": "2025-03-04T12:53:08.402373Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02915358543395996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_core_market_updated_arbitrum_sepolia_id.8dc27d8b84", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_market_updated_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.397778Z", "completed_at": "2025-03-04T12:53:08.405451Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.407877Z", "completed_at": "2025-03-04T12:53:08.407884Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01561880111694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_market_updated_base_mainnet_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.b6908f0c03", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.408783Z", "completed_at": "2025-03-04T12:53:08.419811Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.425846Z", "completed_at": "2025-03-04T12:53:08.425857Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022609233856201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_market_updated_base_mainnet_market_id__True__0.2ed4a3f792", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.415437Z", "completed_at": "2025-03-04T12:53:08.426751Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.429349Z", "completed_at": "2025-03-04T12:53:08.429359Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0228424072265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_collateral_type.b71240306c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.420576Z", "completed_at": "2025-03-04T12:53:08.428712Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.436983Z", "completed_at": "2025-03-04T12:53:08.436991Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029845476150512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_credit_capacity.303317e986", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.430241Z", "completed_at": "2025-03-04T12:53:08.439863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.446144Z", "completed_at": "2025-03-04T12:53:08.446154Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021358489990234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_event_name.38e05844e8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.441197Z", "completed_at": "2025-03-04T12:53:08.448974Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.459141Z", "completed_at": "2025-03-04T12:53:08.459150Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022934675216674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_id.a50a975385", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.449630Z", "completed_at": "2025-03-04T12:53:08.461013Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.467275Z", "completed_at": "2025-03-04T12:53:08.467283Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026853084564208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_market_id.c97cd708fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.453938Z", "completed_at": "2025-03-04T12:53:08.462349Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.468840Z", "completed_at": "2025-03-04T12:53:08.468847Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02342081069946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_net_issuance.2d64ab52f8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.462949Z", "completed_at": "2025-03-04T12:53:08.471159Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.477409Z", "completed_at": "2025-03-04T12:53:08.477417Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01919412612915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_token_amount.ead854df90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.473083Z", "completed_at": "2025-03-04T12:53:08.480279Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.488284Z", "completed_at": "2025-03-04T12:53:08.488296Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020212411880493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_transaction_hash.87848e2a26", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.481507Z", "completed_at": "2025-03-04T12:53:08.494895Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.501389Z", "completed_at": "2025-03-04T12:53:08.501401Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02914714813232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_mainnet_ts.f35cfffa6d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.489181Z", "completed_at": "2025-03-04T12:53:08.500743Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.503052Z", "completed_at": "2025-03-04T12:53:08.503059Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024866819381713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_core_market_updated_base_mainnet_id.ec01754a17", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_market_updated_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.495665Z", "completed_at": "2025-03-04T12:53:08.503962Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.510348Z", "completed_at": "2025-03-04T12:53:08.510360Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02284550666809082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_lt_minted_base_mainnet_token.872e77c2c5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"lt_minted_base_mainnet\"\nwhere token is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.505205Z", "completed_at": "2025-03-04T12:53:08.513528Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.515904Z", "completed_at": "2025-03-04T12:53:08.515912Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016024112701416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.lt_leaderboard", "compiled": true, "compiled_code": "with actions as (\n    select\n        id,\n        block_number,\n        block_timestamp as ts,\n        DATE_TRUNC(\n            'week',\n            block_timestamp + INTERVAL '6 day'\n        ) - INTERVAL '6 day' as epoch_start,\n        \"caller\" as account, -- noqa\n        \n    base_asset_amount / 1e18\n * CAST(\n            REGEXP_REPLACE(\n                token,\n                '.*_(long|short)',\n                ''\n            ) as INT\n        ) as volume,\n        \n    base_asset_amount / 1e18\n * CAST(\n            REGEXP_REPLACE(\n                token,\n                '.*_(long|short)',\n                ''\n            ) as INT\n        ) * 0.003 as fees_paid\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"lt_redeemed_base_mainnet\"\n\n    union all\n\n    select\n        id,\n        block_number,\n        block_timestamp as ts,\n        DATE_TRUNC(\n            'week',\n            block_timestamp + INTERVAL '6 day'\n        ) - INTERVAL '6 day' as epoch_start,\n        recipient as account,\n        \n    base_asset_amount / 1e18\n * CAST(\n            REGEXP_REPLACE(\n                token,\n                '.*_(long|short)',\n                ''\n            ) as INT\n        ) as volume,\n        0 as fees_paid\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"lt_minted_base_mainnet\"\n),\n\nepoch_summary as (\n    select\n        account,\n        epoch_start,\n        SUM(\n            volume\n        ) as volume,\n        SUM(\n            fees_paid\n        ) as total_fees_paid\n    from\n        actions\n    group by\n        account,\n        epoch_start\n),\n\nranked_table as (\n    select\n        account,\n        epoch_start,\n        volume,\n        total_fees_paid,\n        total_fees_paid / SUM(total_fees_paid) over (\n            partition by epoch_start\n        ) as fees_paid_pct,\n        volume / SUM(volume) over (\n            partition by epoch_start\n        ) as volume_pct,\n        RANK() over (\n            partition by epoch_start\n            order by\n                total_fees_paid desc\n        ) as \"rank\", -- DEPRECATED\n        RANK() over (\n            partition by epoch_start\n            order by\n                total_fees_paid desc\n        ) as fees_rank,\n        RANK() over (\n            partition by epoch_start\n            order by\n                volume desc\n        ) as volume_rank\n    from\n        epoch_summary\n)\n\nselect *\nfrom\n    ranked_table\norder by\n    epoch_start,\n    volume_rank", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"lt_leaderboard\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.521498Z", "completed_at": "2025-03-04T12:53:08.534179Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.536162Z", "completed_at": "2025-03-04T12:53:08.536175Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024180173873901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_lt_redeemed_base_mainnet_token.bfe232a142", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token\nfrom \"analytics\".\"prod_raw_base_mainnet\".\"lt_redeemed_base_mainnet\"\nwhere token is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.516784Z", "completed_at": "2025-03-04T12:53:08.535421Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.538270Z", "completed_at": "2025-03-04T12:53:08.538277Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027074098587036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.lt_trades_base_mainnet", "compiled": true, "compiled_code": "with trades as (\n\n    select\n        a.id,\n        a.block_number,\n        a.ts,\n        a.transaction_hash,\n        a.contract,\n        a.event_name,\n        a.account,\n        a.token,\n        a.leverage,\n        upper(substring(a.token from '([^_]+)')) as market,\n        a.leveraged_token_amount,\n        a.base_asset_amount,\n        abs(a.base_asset_amount) as nominal_volume,\n        abs(a.base_asset_amount) * a.leverage as notional_volume,\n        abs(a.base_asset_amount) / abs(a.leveraged_token_amount) as token_price,\n        sum(a.leveraged_token_amount)\n            over (partition by contract order by ts)\n        as total_supply\n    from (\n\n        select\n            id,\n            block_number,\n            block_timestamp as ts,\n            transaction_hash,\n            contract, -- noqa\n            event_name,\n            recipient as account,\n            token,\n            cast(\n                regexp_replace(token, '.*_(long|short)', '') as int\n            ) as leverage,\n            \n    leveraged_token_amount / 1e18\n\n            as leveraged_token_amount,\n            \n    base_asset_amount / 1e18\n as base_asset_amount\n        from \"analytics\".\"prod_raw_base_mainnet\".\"lt_minted_base_mainnet\"\n        union all\n        select\n            id,\n            block_number,\n            block_timestamp as ts,\n            transaction_hash,\n            contract, -- noqa\n            event_name,\n            \"caller\" as account, -- noqa\n            token,\n            cast(\n                regexp_replace(token, '.*_(long|short)', '') as int\n            ) as leverage,\n            \n    leveraged_token_amount / 1e18\n\n            * -1 as leveraged_token_amount,\n            \n    base_asset_amount / 1e18\n * -1 as base_asset_amount\n        from \"analytics\".\"prod_raw_base_mainnet\".\"lt_redeemed_base_mainnet\"\n    ) as a\n)\n\nselect\n    *,\n    total_supply * token_price as vault_tvl,\n    total_supply * token_price * leverage as vault_oi\nfrom trades", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"lt_trades_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.527699Z", "completed_at": "2025-03-04T12:53:08.537102Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.539853Z", "completed_at": "2025-03-04T12:53:08.539861Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024699687957763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_market_updated_eth_mainnet_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.f0e721a249", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.540731Z", "completed_at": "2025-03-04T12:53:08.548974Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.555269Z", "completed_at": "2025-03-04T12:53:08.555280Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020618438720703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_market_updated_eth_mainnet_market_id__True__0.32701334f3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.550745Z", "completed_at": "2025-03-04T12:53:08.566734Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.568319Z", "completed_at": "2025-03-04T12:53:08.568330Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02217388153076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_collateral_type.fbe59aeb13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.556919Z", "completed_at": "2025-03-04T12:53:08.569267Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.571732Z", "completed_at": "2025-03-04T12:53:08.571741Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02414989471435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_credit_capacity.bc652bf021", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.562477Z", "completed_at": "2025-03-04T12:53:08.570432Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.578545Z", "completed_at": "2025-03-04T12:53:08.578553Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029112577438354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_event_name.e682d1b7d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.572632Z", "completed_at": "2025-03-04T12:53:08.582811Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.589207Z", "completed_at": "2025-03-04T12:53:08.589217Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021786928176879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_id.7444e98615", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.584018Z", "completed_at": "2025-03-04T12:53:08.596261Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.603064Z", "completed_at": "2025-03-04T12:53:08.603075Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023775577545166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_market_id.9fbceacdbc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.590809Z", "completed_at": "2025-03-04T12:53:08.602443Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.604729Z", "completed_at": "2025-03-04T12:53:08.604737Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02266836166381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_net_issuance.95ea8efb4e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.596896Z", "completed_at": "2025-03-04T12:53:08.605589Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.612328Z", "completed_at": "2025-03-04T12:53:08.612338Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029061555862426758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_token_amount.fe11f0ce69", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.606985Z", "completed_at": "2025-03-04T12:53:08.614666Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.617141Z", "completed_at": "2025-03-04T12:53:08.617149Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015575408935546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_transaction_hash.f31c00e39e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.623064Z", "completed_at": "2025-03-04T12:53:08.631581Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.638040Z", "completed_at": "2025-03-04T12:53:08.638054Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02409529685974121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_core_market_updated_eth_mainnet_id.d5c16089e9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.618679Z", "completed_at": "2025-03-04T12:53:08.636686Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.639088Z", "completed_at": "2025-03-04T12:53:08.639099Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025933265686035156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_eth_mainnet_ts.950a116067", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_market_updated_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.632212Z", "completed_at": "2025-03-04T12:53:08.640026Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.646676Z", "completed_at": "2025-03-04T12:53:08.646684Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028760194778442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_market_updated_base_sepolia_event_name__MarketCollateralWithdrawn__MarketCollateralDeposited__MarketUsdWithdrawn__MarketUsdDeposited.f97649ec10", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'MarketCollateralWithdrawn','MarketCollateralDeposited','MarketUsdWithdrawn','MarketUsdDeposited'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.640616Z", "completed_at": "2025-03-04T12:53:08.649012Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.651428Z", "completed_at": "2025-03-04T12:53:08.651436Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020598411560058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_market_updated_base_sepolia_market_id__True__0.9ac29d575a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.657434Z", "completed_at": "2025-03-04T12:53:08.668645Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.670589Z", "completed_at": "2025-03-04T12:53:08.670599Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022324323654174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_credit_capacity.1096ceee18", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect credit_capacity\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere credit_capacity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.652947Z", "completed_at": "2025-03-04T12:53:08.669870Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.678240Z", "completed_at": "2025-03-04T12:53:08.678249Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030646800994873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_collateral_type.5333cf7124", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.664370Z", "completed_at": "2025-03-04T12:53:08.676604Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.679884Z", "completed_at": "2025-03-04T12:53:08.679892Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02769780158996582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_event_name.027b71247d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.671529Z", "completed_at": "2025-03-04T12:53:08.682244Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.684777Z", "completed_at": "2025-03-04T12:53:08.684785Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0212709903717041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_id.34d77ebc84", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.686842Z", "completed_at": "2025-03-04T12:53:08.702906Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.704527Z", "completed_at": "2025-03-04T12:53:08.704540Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022998332977294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_market_id.e1e1cc407f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.693107Z", "completed_at": "2025-03-04T12:53:08.705371Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.711752Z", "completed_at": "2025-03-04T12:53:08.711763Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02831411361694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_net_issuance.094fc9701e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect net_issuance\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere net_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.698534Z", "completed_at": "2025-03-04T12:53:08.706027Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.712678Z", "completed_at": "2025-03-04T12:53:08.712685Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027141094207763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_token_amount.dfd33d6c7e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere token_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.706608Z", "completed_at": "2025-03-04T12:53:08.713698Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.716380Z", "completed_at": "2025-03-04T12:53:08.716390Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018720149993896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_transaction_hash.8b87578f5d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.719821Z", "completed_at": "2025-03-04T12:53:08.738807Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.745426Z", "completed_at": "2025-03-04T12:53:08.745440Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031325578689575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_market_updated_base_sepolia_ts.9f306426fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.726865Z", "completed_at": "2025-03-04T12:53:08.744138Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.746518Z", "completed_at": "2025-03-04T12:53:08.746528Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028767108917236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_core_market_updated_base_sepolia_id.469dae108f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_market_updated_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.732044Z", "completed_at": "2025-03-04T12:53:08.744842Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.748000Z", "completed_at": "2025-03-04T12:53:08.748008Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029592514038085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pools_arbitrum_mainnet_id__True__0.913c01840d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pools_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.739767Z", "completed_at": "2025-03-04T12:53:08.747427Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.750251Z", "completed_at": "2025-03-04T12:53:08.750259Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024288415908813477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_arbitrum_mainnet_block_number.7aac324156", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pools_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.761419Z", "completed_at": "2025-03-04T12:53:08.778255Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.779773Z", "completed_at": "2025-03-04T12:53:08.779786Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027492284774780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_arbitrum_mainnet_id.61336667c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pools_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.756692Z", "completed_at": "2025-03-04T12:53:08.779061Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.781970Z", "completed_at": "2025-03-04T12:53:08.781980Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03027963638305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_arbitrum_mainnet_created_ts.b08fc3c233", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pools_arbitrum_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.766757Z", "completed_at": "2025-03-04T12:53:08.780799Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.783583Z", "completed_at": "2025-03-04T12:53:08.783594Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029954195022583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_arbitrum_mainnet_owner.4cc2187f96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pools_arbitrum_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.771567Z", "completed_at": "2025-03-04T12:53:08.781404Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.784650Z", "completed_at": "2025-03-04T12:53:08.784657Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02925562858581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pools_arbitrum_sepolia_id__True__0.d4e586601a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pools_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.791273Z", "completed_at": "2025-03-04T12:53:08.810683Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.813111Z", "completed_at": "2025-03-04T12:53:08.813124Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027090072631835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_arbitrum_sepolia_block_number.8044e9af90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pools_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.797304Z", "completed_at": "2025-03-04T12:53:08.811849Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.814647Z", "completed_at": "2025-03-04T12:53:08.814655Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02658987045288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_arbitrum_sepolia_created_ts.56d3c1e25b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pools_arbitrum_sepolia\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.801884Z", "completed_at": "2025-03-04T12:53:08.812476Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.815514Z", "completed_at": "2025-03-04T12:53:08.815521Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026204824447631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_arbitrum_sepolia_id.0242b18493", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pools_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.806429Z", "completed_at": "2025-03-04T12:53:08.814036Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.817135Z", "completed_at": "2025-03-04T12:53:08.817143Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0271756649017334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_arbitrum_sepolia_owner.5ee993817b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pools_arbitrum_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.824221Z", "completed_at": "2025-03-04T12:53:08.844805Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.846478Z", "completed_at": "2025-03-04T12:53:08.846491Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02731919288635254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pools_base_mainnet_id__True__0.2b14986ce3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_pools_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.829829Z", "completed_at": "2025-03-04T12:53:08.845684Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.847996Z", "completed_at": "2025-03-04T12:53:08.848006Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027455806732177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_base_mainnet_block_number.cc61b3ca43", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pools_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.836152Z", "completed_at": "2025-03-04T12:53:08.847359Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.850165Z", "completed_at": "2025-03-04T12:53:08.850173Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02898693084716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_base_mainnet_created_ts.a07bb6b8fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pools_base_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.840480Z", "completed_at": "2025-03-04T12:53:08.848884Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.851748Z", "completed_at": "2025-03-04T12:53:08.851756Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029354333877563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_base_mainnet_id.1f1f3ad095", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pools_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.857640Z", "completed_at": "2025-03-04T12:53:08.877845Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.879698Z", "completed_at": "2025-03-04T12:53:08.879709Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027210235595703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_base_mainnet_owner.a2cfe04f87", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pools_base_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.862743Z", "completed_at": "2025-03-04T12:53:08.880607Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.883289Z", "completed_at": "2025-03-04T12:53:08.883297Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029473543167114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pools_base_sepolia_id__True__0.6010b3107d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_pools_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.868109Z", "completed_at": "2025-03-04T12:53:08.881274Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.884185Z", "completed_at": "2025-03-04T12:53:08.884195Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028477191925048828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_base_sepolia_block_number.68462f9c7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pools_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.872660Z", "completed_at": "2025-03-04T12:53:08.882635Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.885754Z", "completed_at": "2025-03-04T12:53:08.885765Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028853654861450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_base_sepolia_created_ts.ddc75dd279", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pools_base_sepolia\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.890513Z", "completed_at": "2025-03-04T12:53:08.906892Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.912174Z", "completed_at": "2025-03-04T12:53:08.912185Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027232646942138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_base_sepolia_id.b91a0ef35b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pools_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.898127Z", "completed_at": "2025-03-04T12:53:08.913314Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.916007Z", "completed_at": "2025-03-04T12:53:08.916015Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02688884735107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_base_sepolia_owner.e551fe7bc6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pools_base_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.902587Z", "completed_at": "2025-03-04T12:53:08.913970Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.916904Z", "completed_at": "2025-03-04T12:53:08.916914Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027144908905029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_pools_eth_mainnet_id__True__0.e529c0ad91", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_pools_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.907520Z", "completed_at": "2025-03-04T12:53:08.915392Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.918427Z", "completed_at": "2025-03-04T12:53:08.918437Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0231626033782959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_eth_mainnet_block_number.d5795e3469", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pools_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.923235Z", "completed_at": "2025-03-04T12:53:08.940726Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.946251Z", "completed_at": "2025-03-04T12:53:08.946263Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028601646423339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_eth_mainnet_created_ts.85e7c6f7d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pools_eth_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.936545Z", "completed_at": "2025-03-04T12:53:08.947339Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.949427Z", "completed_at": "2025-03-04T12:53:08.949435Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02695298194885254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_eth_mainnet_owner.13db5fad75", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pools_eth_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.932164Z", "completed_at": "2025-03-04T12:53:08.948063Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.950893Z", "completed_at": "2025-03-04T12:53:08.950901Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029052257537841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pools_eth_mainnet_id.ac06cb59ca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pools_eth_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.941373Z", "completed_at": "2025-03-04T12:53:08.950270Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.953118Z", "completed_at": "2025-03-04T12:53:08.953128Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02360844612121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_arbitrum_mainnet_pool_id__True__0.411a2ea602", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.957239Z", "completed_at": "2025-03-04T12:53:08.968041Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.975478Z", "completed_at": "2025-03-04T12:53:08.975490Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023822546005249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_mainnet_account_id.2adc95113c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.963728Z", "completed_at": "2025-03-04T12:53:08.976389Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.982825Z", "completed_at": "2025-03-04T12:53:08.982834Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027657270431518555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_mainnet_amount.375d9b98af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.969267Z", "completed_at": "2025-03-04T12:53:08.982077Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.985072Z", "completed_at": "2025-03-04T12:53:08.985079Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028591632843017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_mainnet_block_number.954a0fdf17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.976983Z", "completed_at": "2025-03-04T12:53:08.984456Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:08.987217Z", "completed_at": "2025-03-04T12:53:08.987228Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02496933937072754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_mainnet_collateral_type.ba8bb06771", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.989396Z", "completed_at": "2025-03-04T12:53:08.997634Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.007785Z", "completed_at": "2025-03-04T12:53:09.007800Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024102449417114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_mainnet_pool_id.0706d99bc3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:08.998237Z", "completed_at": "2025-03-04T12:53:09.013828Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.015918Z", "completed_at": "2025-03-04T12:53:09.015928Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027306556701660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_mainnet_transaction_hash.6a8e54c252", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.003353Z", "completed_at": "2025-03-04T12:53:09.015098Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.018048Z", "completed_at": "2025-03-04T12:53:09.018058Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02328324317932129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_mainnet_ts.6d52d9f09c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.009073Z", "completed_at": "2025-03-04T12:53:09.016832Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.019604Z", "completed_at": "2025-03-04T12:53:09.019612Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02333211898803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_arbitrum_sepolia_pool_id__True__0.0ec85b0399", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.023047Z", "completed_at": "2025-03-04T12:53:09.032233Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.042607Z", "completed_at": "2025-03-04T12:53:09.042624Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025373458862304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_sepolia_account_id.45720a8ffb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.032851Z", "completed_at": "2025-03-04T12:53:09.048134Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.050374Z", "completed_at": "2025-03-04T12:53:09.050385Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02878403663635254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_sepolia_amount.43a9be48cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.038178Z", "completed_at": "2025-03-04T12:53:09.049752Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.052550Z", "completed_at": "2025-03-04T12:53:09.052558Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02294468879699707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_sepolia_block_number.7b40b6a61f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.043766Z", "completed_at": "2025-03-04T12:53:09.051313Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.054091Z", "completed_at": "2025-03-04T12:53:09.054098Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02326226234436035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_sepolia_collateral_type.aef6de9ec1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.057636Z", "completed_at": "2025-03-04T12:53:09.069722Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.077521Z", "completed_at": "2025-03-04T12:53:09.077534Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025776147842407227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_sepolia_pool_id.2084f5f832", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.065274Z", "completed_at": "2025-03-04T12:53:09.082988Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.085844Z", "completed_at": "2025-03-04T12:53:09.085853Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029680728912353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_sepolia_transaction_hash.333c0c5e61", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.071079Z", "completed_at": "2025-03-04T12:53:09.084633Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.087448Z", "completed_at": "2025-03-04T12:53:09.087456Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02502584457397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_arbitrum_sepolia_ts.94cc660ca9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.078532Z", "completed_at": "2025-03-04T12:53:09.085273Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.088300Z", "completed_at": "2025-03-04T12:53:09.088308Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024510860443115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_base_mainnet_pool_id__True__0.5e68f64c49", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.092366Z", "completed_at": "2025-03-04T12:53:09.099442Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.109288Z", "completed_at": "2025-03-04T12:53:09.109302Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022626876831054688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_mainnet_account_id.4f9de5ef81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.100662Z", "completed_at": "2025-03-04T12:53:09.115862Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.117872Z", "completed_at": "2025-03-04T12:53:09.117884Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026228666305541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_mainnet_amount.29761360a6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.105008Z", "completed_at": "2025-03-04T12:53:09.117207Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.119908Z", "completed_at": "2025-03-04T12:53:09.119916Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023192405700683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_mainnet_block_number.6ae22c8ac4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.110384Z", "completed_at": "2025-03-04T12:53:09.118723Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.121425Z", "completed_at": "2025-03-04T12:53:09.121435Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024028301239013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_mainnet_collateral_type.72fe90c3b9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.122353Z", "completed_at": "2025-03-04T12:53:09.131256Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.133683Z", "completed_at": "2025-03-04T12:53:09.133694Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01717662811279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_mainnet_pool_id.01d3ed0f62", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.139647Z", "completed_at": "2025-03-04T12:53:09.150182Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.152122Z", "completed_at": "2025-03-04T12:53:09.152132Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021550893783569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_mainnet_ts.2b8d4be103", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.134576Z", "completed_at": "2025-03-04T12:53:09.150820Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.153607Z", "completed_at": "2025-03-04T12:53:09.153617Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024552583694458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_mainnet_transaction_hash.0764eca614", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.144780Z", "completed_at": "2025-03-04T12:53:09.153007Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.159609Z", "completed_at": "2025-03-04T12:53:09.159619Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02724289894104004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_base_sepolia_pool_id__True__0.e99f9bdac0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.154493Z", "completed_at": "2025-03-04T12:53:09.161974Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.164513Z", "completed_at": "2025-03-04T12:53:09.164521Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015044689178466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_sepolia_account_id.aa037160fb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.166603Z", "completed_at": "2025-03-04T12:53:09.179387Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.185056Z", "completed_at": "2025-03-04T12:53:09.185067Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023872852325439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_sepolia_amount.5be777c996", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.172341Z", "completed_at": "2025-03-04T12:53:09.186003Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.192339Z", "completed_at": "2025-03-04T12:53:09.192347Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029240846633911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_sepolia_block_number.2f1e619103", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.180019Z", "completed_at": "2025-03-04T12:53:09.191671Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.194032Z", "completed_at": "2025-03-04T12:53:09.194041Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02879047393798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_sepolia_collateral_type.3b36d49350", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.186719Z", "completed_at": "2025-03-04T12:53:09.194904Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.197421Z", "completed_at": "2025-03-04T12:53:09.197429Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018776655197143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_sepolia_pool_id.5d2388a5a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.198936Z", "completed_at": "2025-03-04T12:53:09.206167Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.216353Z", "completed_at": "2025-03-04T12:53:09.216365Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023184537887573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_sepolia_transaction_hash.79420348fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.211690Z", "completed_at": "2025-03-04T12:53:09.219013Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.227165Z", "completed_at": "2025-03-04T12:53:09.227173Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02394866943359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_eth_mainnet_pool_id__True__0.c3af88d954", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.207376Z", "completed_at": "2025-03-04T12:53:09.226576Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.228788Z", "completed_at": "2025-03-04T12:53:09.228799Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0306088924407959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_base_sepolia_ts.be998526ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.219659Z", "completed_at": "2025-03-04T12:53:09.230230Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.236588Z", "completed_at": "2025-03-04T12:53:09.236596Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029925823211669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_eth_mainnet_account_id.d686918ab7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.230903Z", "completed_at": "2025-03-04T12:53:09.238813Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.245055Z", "completed_at": "2025-03-04T12:53:09.245065Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02033853530883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_eth_mainnet_amount.4a0d8649af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.240671Z", "completed_at": "2025-03-04T12:53:09.251922Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.253923Z", "completed_at": "2025-03-04T12:53:09.253934Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018108606338500977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_eth_mainnet_block_number.76ac645e79", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.246727Z", "completed_at": "2025-03-04T12:53:09.254813Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.261178Z", "completed_at": "2025-03-04T12:53:09.261186Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023708105087280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_eth_mainnet_collateral_type.9e0a6d3551", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.255382Z", "completed_at": "2025-03-04T12:53:09.266529Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.268757Z", "completed_at": "2025-03-04T12:53:09.268768Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02281332015991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_eth_mainnet_pool_id.fd6c3981fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.262186Z", "completed_at": "2025-03-04T12:53:09.269659Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.272144Z", "completed_at": "2025-03-04T12:53:09.272152Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01903080940246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_eth_mainnet_transaction_hash.801e733838", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.273033Z", "completed_at": "2025-03-04T12:53:09.286544Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.293167Z", "completed_at": "2025-03-04T12:53:09.293177Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026064157485961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_eth_mainnet_ts.5f32fba981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.281243Z", "completed_at": "2025-03-04T12:53:09.292428Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.294807Z", "completed_at": "2025-03-04T12:53:09.294815Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024077892303466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_vault_collateral_base_mainnet_amount__True__0.031c10a818", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.287914Z", "completed_at": "2025-03-04T12:53:09.296377Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.303075Z", "completed_at": "2025-03-04T12:53:09.303083Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023342370986938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_vault_collateral_base_mainnet_collateral_value__True__0.ffab802571", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.297048Z", "completed_at": "2025-03-04T12:53:09.305341Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.311569Z", "completed_at": "2025-03-04T12:53:09.311579Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02457737922668457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_vault_collateral_base_mainnet_pool_id__True__0.3c62ac166d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.307268Z", "completed_at": "2025-03-04T12:53:09.320188Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.322154Z", "completed_at": "2025-03-04T12:53:09.322164Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019943952560424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_vault_collateral_base_mainnet_amount.43a56286ca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.313276Z", "completed_at": "2025-03-04T12:53:09.323019Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.329316Z", "completed_at": "2025-03-04T12:53:09.329325Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025334596633911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_vault_collateral_base_mainnet_block_number.fc803534fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.323625Z", "completed_at": "2025-03-04T12:53:09.334942Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.337168Z", "completed_at": "2025-03-04T12:53:09.337179Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024642229080200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_vault_collateral_base_mainnet_collateral_type.e2cbb7867d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.330371Z", "completed_at": "2025-03-04T12:53:09.338671Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.345279Z", "completed_at": "2025-03-04T12:53:09.345291Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023944854736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_vault_collateral_base_mainnet_collateral_value.b35c2ac09a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.340618Z", "completed_at": "2025-03-04T12:53:09.352668Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.354881Z", "completed_at": "2025-03-04T12:53:09.354892Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019291400909423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_vault_collateral_base_mainnet_contract_address.f7e3ffefb9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract_address\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\nwhere contract_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.348344Z", "completed_at": "2025-03-04T12:53:09.360065Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.362255Z", "completed_at": "2025-03-04T12:53:09.362265Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023107290267944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_vault_collateral_base_mainnet_pool_id.1ea1a9fb17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.355828Z", "completed_at": "2025-03-04T12:53:09.363164Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.371568Z", "completed_at": "2025-03-04T12:53:09.371577Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024785280227661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_vault_collateral_base_mainnet_ts.878073b7e8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_vault_collateral_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.363769Z", "completed_at": "2025-03-04T12:53:09.374441Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.380584Z", "completed_at": "2025-03-04T12:53:09.380592Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02658677101135254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_pnl_arbitrum_mainnet_market_id__True__0.15bda011aa", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_pnl_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.375098Z", "completed_at": "2025-03-04T12:53:09.386601Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.392285Z", "completed_at": "2025-03-04T12:53:09.392295Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022185564041137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_pnl_arbitrum_mainnet_market_id.1e2f5a44a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_pnl_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.381570Z", "completed_at": "2025-03-04T12:53:09.393180Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.395872Z", "completed_at": "2025-03-04T12:53:09.395882Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0228121280670166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_pnl_arbitrum_mainnet_ts.8937da4ac3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_pnl_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.388030Z", "completed_at": "2025-03-04T12:53:09.395204Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.397990Z", "completed_at": "2025-03-04T12:53:09.397997Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01815199851989746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::interval\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nmax_debt_block as (\n    select\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as \"hour\",\n        max(block_number) as max_block_number\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n),\n\nfilt_issuance as (\n    select\n        i.pool_id,\n        i.collateral_type,\n        i.amount,\n        case\n            when\n                i.block_number <= d.max_block_number\n                or d.max_block_number is null then i.ts\n            else i.ts + interval '1 hour'\n        end as ts\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_arbitrum_mainnet\"\n        as i\n    left join max_debt_block as d\n        on date_trunc(\n            'hour',\n            i.ts\n        ) = d.hour\n        and i.pool_id = d.pool_id\n        and lower(\n            i.collateral_type\n        ) = lower(\n            d.collateral_type\n        )\n    where\n        i.block_number <= (\n            select\n                max(\n                    max_block_number\n                ) as b\n            from\n                max_debt_block\n        )\n),\n\nissuance as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        sum(amount) as hourly_issuance\n    from\n        filt_issuance\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    coalesce(\n        i.hourly_issuance,\n        0\n    ) as hourly_issuance\nfrom\n    dim\nleft join issuance as i\n    on\n        dim.pool_id = i.pool_id\n        and lower(\n            dim.collateral_type\n        ) = lower(\n            i.collateral_type\n        )\n        and dim.ts = i.ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.399571Z", "completed_at": "2025-03-04T12:53:09.411457Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.413519Z", "completed_at": "2025-03-04T12:53:09.413529Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01981973648071289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_debt_arbitrum_mainnet_pool_id__True__0.15db752b00", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.407058Z", "completed_at": "2025-03-04T12:53:09.415002Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.427252Z", "completed_at": "2025-03-04T12:53:09.427262Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030054807662963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_mainnet_block_number.f6d01f24fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.415600Z", "completed_at": "2025-03-04T12:53:09.429971Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.432435Z", "completed_at": "2025-03-04T12:53:09.432444Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026458740234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_mainnet_collateral_type.a3b9300e6c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.422728Z", "completed_at": "2025-03-04T12:53:09.430621Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.433330Z", "completed_at": "2025-03-04T12:53:09.433337Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021309375762939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_mainnet_debt.5ff363252c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.434212Z", "completed_at": "2025-03-04T12:53:09.445405Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.447577Z", "completed_at": "2025-03-04T12:53:09.447588Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0193328857421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_mainnet_pool_id.dc562b5c31", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.440991Z", "completed_at": "2025-03-04T12:53:09.449042Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.455258Z", "completed_at": "2025-03-04T12:53:09.455268Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023586034774780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_mainnet_ts.aac8a7264c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.450867Z", "completed_at": "2025-03-04T12:53:09.462357Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.464968Z", "completed_at": "2025-03-04T12:53:09.464975Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018932342529296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::interval\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nmax_debt_block as (\n    select\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as \"hour\",\n        max(block_number) as max_block_number\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n),\n\nfilt_issuance as (\n    select\n        i.pool_id,\n        i.collateral_type,\n        i.amount,\n        case\n            when\n                i.block_number <= d.max_block_number\n                or d.max_block_number is null then i.ts\n            else i.ts + interval '1 hour'\n        end as ts\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_arbitrum_sepolia\"\n        as i\n    left join max_debt_block as d\n        on date_trunc(\n            'hour',\n            i.ts\n        ) = d.hour\n        and i.pool_id = d.pool_id\n        and lower(\n            i.collateral_type\n        ) = lower(\n            d.collateral_type\n        )\n    where\n        i.block_number <= (\n            select\n                max(\n                    max_block_number\n                ) as b\n            from\n                max_debt_block\n        )\n),\n\nissuance as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        sum(amount) as hourly_issuance\n    from\n        filt_issuance\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    coalesce(\n        i.hourly_issuance,\n        0\n    ) as hourly_issuance\nfrom\n    dim\nleft join issuance as i\n    on\n        dim.pool_id = i.pool_id\n        and lower(\n            dim.collateral_type\n        ) = lower(\n            i.collateral_type\n        )\n        and dim.ts = i.ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.456312Z", "completed_at": "2025-03-04T12:53:09.463754Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.472109Z", "completed_at": "2025-03-04T12:53:09.472117Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025410890579223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_debt_arbitrum_sepolia_pool_id__True__0.ec7d22b029", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.465861Z", "completed_at": "2025-03-04T12:53:09.480475Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.482419Z", "completed_at": "2025-03-04T12:53:09.482428Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02161860466003418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_sepolia_block_number.9fe11ea9dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.475338Z", "completed_at": "2025-03-04T12:53:09.483271Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.489949Z", "completed_at": "2025-03-04T12:53:09.489959Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025760650634765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_sepolia_collateral_type.a6fdff57f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.484594Z", "completed_at": "2025-03-04T12:53:09.496760Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.499336Z", "completed_at": "2025-03-04T12:53:09.499345Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01970982551574707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_sepolia_debt.652029afcf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.490880Z", "completed_at": "2025-03-04T12:53:09.498736Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.505331Z", "completed_at": "2025-03-04T12:53:09.505342Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02437901496887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_sepolia_pool_id.4539ef9df3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.500232Z", "completed_at": "2025-03-04T12:53:09.511754Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.513901Z", "completed_at": "2025-03-04T12:53:09.513911Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01864314079284668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_arbitrum_sepolia_ts.0ce19a05b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.507057Z", "completed_at": "2025-03-04T12:53:09.516701Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.524938Z", "completed_at": "2025-03-04T12:53:09.524946Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026903390884399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_pnl_arbitrum_sepolia_market_id__True__0.78cda1ee25", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_pnl_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.517901Z", "completed_at": "2025-03-04T12:53:09.531021Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.537009Z", "completed_at": "2025-03-04T12:53:09.537020Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024043560028076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_pnl_arbitrum_sepolia_market_id.e7e798c2a6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_pnl_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.525837Z", "completed_at": "2025-03-04T12:53:09.538081Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.540205Z", "completed_at": "2025-03-04T12:53:09.540213Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025482177734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_pnl_arbitrum_sepolia_ts.9b3b9b4145", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_pnl_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.532376Z", "completed_at": "2025-03-04T12:53:09.541046Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.543600Z", "completed_at": "2025-03-04T12:53:09.543611Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01945209503173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_pnl_base_sepolia_market_id__True__0.2546d9a255", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_pnl_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.544498Z", "completed_at": "2025-03-04T12:53:09.555603Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.557663Z", "completed_at": "2025-03-04T12:53:09.557672Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019090652465820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_pnl_base_sepolia_market_id.f6d4268d28", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_pnl_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.551211Z", "completed_at": "2025-03-04T12:53:09.562894Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.564902Z", "completed_at": "2025-03-04T12:53:09.564911Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02276921272277832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_pnl_base_sepolia_ts.74b2ae0437", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_pnl_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.558614Z", "completed_at": "2025-03-04T12:53:09.572527Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.574656Z", "completed_at": "2025-03-04T12:53:09.574666Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025086164474487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_hourly_base_sepolia", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::interval\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nmax_debt_block as (\n    select\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as \"hour\",\n        max(block_number) as max_block_number\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n),\n\nfilt_issuance as (\n    select\n        i.pool_id,\n        i.collateral_type,\n        i.amount,\n        case\n            when\n                i.block_number <= d.max_block_number\n                or d.max_block_number is null then i.ts\n            else i.ts + interval '1 hour'\n        end as ts\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_base_sepolia\"\n        as i\n    left join max_debt_block as d\n        on date_trunc(\n            'hour',\n            i.ts\n        ) = d.hour\n        and i.pool_id = d.pool_id\n        and lower(\n            i.collateral_type\n        ) = lower(\n            d.collateral_type\n        )\n    where\n        i.block_number <= (\n            select\n                max(\n                    max_block_number\n                ) as b\n            from\n                max_debt_block\n        )\n),\n\nissuance as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        sum(amount) as hourly_issuance\n    from\n        filt_issuance\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    coalesce(\n        i.hourly_issuance,\n        0\n    ) as hourly_issuance\nfrom\n    dim\nleft join issuance as i\n    on\n        dim.pool_id = i.pool_id\n        and lower(\n            dim.collateral_type\n        ) = lower(\n            i.collateral_type\n        )\n        and dim.ts = i.ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.565853Z", "completed_at": "2025-03-04T12:53:09.576146Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.582800Z", "completed_at": "2025-03-04T12:53:09.582809Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02602243423461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_debt_base_sepolia_pool_id__True__0.0228ac48ff", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.578090Z", "completed_at": "2025-03-04T12:53:09.590150Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.592245Z", "completed_at": "2025-03-04T12:53:09.592252Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019204139709472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_sepolia_block_number.d6752d8232", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.585808Z", "completed_at": "2025-03-04T12:53:09.597454Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.599510Z", "completed_at": "2025-03-04T12:53:09.599519Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022880077362060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_sepolia_collateral_type.5daff7c138", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.593194Z", "completed_at": "2025-03-04T12:53:09.604847Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.607032Z", "completed_at": "2025-03-04T12:53:09.607040Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022854328155517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_sepolia_debt.235edf4e17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.600429Z", "completed_at": "2025-03-04T12:53:09.608540Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.614748Z", "completed_at": "2025-03-04T12:53:09.614756Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023346900939941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_sepolia_pool_id.bb5f56d624", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.610367Z", "completed_at": "2025-03-04T12:53:09.617650Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.626246Z", "completed_at": "2025-03-04T12:53:09.626254Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020764827728271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_sepolia_ts.955bd8bfe6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.618308Z", "completed_at": "2025-03-04T12:53:09.632901Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.639359Z", "completed_at": "2025-03-04T12:53:09.639367Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030367374420166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_pnl_base_mainnet_market_id__True__0.58f61a0590", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_pnl_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.627274Z", "completed_at": "2025-03-04T12:53:09.637986Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.640373Z", "completed_at": "2025-03-04T12:53:09.640381Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024255990982055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_pnl_base_mainnet_market_id.915c961b40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_pnl_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.633701Z", "completed_at": "2025-03-04T12:53:09.641302Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.643860Z", "completed_at": "2025-03-04T12:53:09.643868Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01849079132080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_pnl_base_mainnet_ts.aa0943ea1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_pnl_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.644747Z", "completed_at": "2025-03-04T12:53:09.651772Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.658260Z", "completed_at": "2025-03-04T12:53:09.658270Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01978921890258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_hourly_base_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::interval\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nmax_debt_block as (\n    select\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        max(block_number) as max_block_number\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n),\n\nfilt_issuance as (\n    select\n        i.pool_id,\n        i.collateral_type,\n        i.amount,\n        case\n            when\n                i.block_number <= d.max_block_number\n                or d.max_block_number is null then i.ts\n            else i.ts + interval '1 hour'\n        end as ts\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_base_mainnet\"\n        as i\n    left join max_debt_block as d\n        on date_trunc(\n            'hour',\n            i.ts\n        ) = d.ts\n        and i.pool_id = d.pool_id\n        and lower(\n            i.collateral_type\n        ) = lower(\n            d.collateral_type\n        )\n    where\n        i.block_number <= (\n            select\n                max(\n                    max_block_number\n                ) as b\n            from\n                max_debt_block\n        )\n),\n\nissuance as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        sum(amount) as hourly_issuance\n    from\n        filt_issuance\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    coalesce(\n        i.hourly_issuance,\n        0\n    ) as hourly_issuance\nfrom\n    dim\nleft join issuance as i\n    on\n        dim.pool_id = i.pool_id\n        and lower(\n            dim.collateral_type\n        ) = lower(\n            i.collateral_type\n        )\n        and dim.ts = i.ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.653585Z", "completed_at": "2025-03-04T12:53:09.672390Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.674896Z", "completed_at": "2025-03-04T12:53:09.674908Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025965213775634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_debt_base_mainnet_pool_id__True__0.a1f5ec7b1b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.659183Z", "completed_at": "2025-03-04T12:53:09.672984Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.675806Z", "completed_at": "2025-03-04T12:53:09.675814Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026216983795166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_mainnet_block_number.dd32fc50c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.665395Z", "completed_at": "2025-03-04T12:53:09.674296Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.681064Z", "completed_at": "2025-03-04T12:53:09.681071Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028225183486938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_mainnet_collateral_type.92a752ffea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.676674Z", "completed_at": "2025-03-04T12:53:09.684921Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.687349Z", "completed_at": "2025-03-04T12:53:09.687357Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015661001205444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_mainnet_debt.5b37c10505", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.689379Z", "completed_at": "2025-03-04T12:53:09.703943Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.706325Z", "completed_at": "2025-03-04T12:53:09.706338Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022143125534057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_mainnet_pool_id.8e9e20797d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.694582Z", "completed_at": "2025-03-04T12:53:09.704537Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.707233Z", "completed_at": "2025-03-04T12:53:09.707241Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021813392639160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_base_mainnet_ts.f49a23ebcd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.698889Z", "completed_at": "2025-03-04T12:53:09.705109Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.708117Z", "completed_at": "2025-03-04T12:53:09.708127Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022098302841186523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_migration_hourly_eth_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nmigration as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        sum(debt_amount) as hourly_debt_migrated\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_eth_mainnet\"\n    group by\n        date_trunc('hour', ts),\n        pool_id,\n        collateral_type\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    coalesce(\n        m.hourly_debt_migrated,\n        0\n    ) as hourly_debt_migrated\nfrom\n    dim\nleft join migration as m\n    on\n        dim.pool_id = m.pool_id\n        and lower(\n            dim.collateral_type\n        ) = lower(\n            m.collateral_type\n        )\n        and dim.ts = m.ts", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_hourly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.709022Z", "completed_at": "2025-03-04T12:53:09.717030Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.719624Z", "completed_at": "2025-03-04T12:53:09.719635Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016783475875854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_issuance_hourly_eth_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::interval\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nmax_debt_block as (\n    select\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as \"hour\",\n        max(block_number) as max_block_number\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n),\n\nfilt_issuance as (\n    select\n        i.pool_id,\n        i.collateral_type,\n        i.amount,\n        case\n            when\n                i.block_number <= d.max_block_number\n                or d.max_block_number is null then i.ts\n            else i.ts + interval '1 hour'\n        end as ts\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_eth_mainnet\"\n        as i\n    left join max_debt_block as d\n        on date_trunc(\n            'hour',\n            i.ts\n        ) = d.hour\n        and i.pool_id = d.pool_id\n        and lower(\n            i.collateral_type\n        ) = lower(\n            d.collateral_type\n        )\n    where\n        i.block_number <= (\n            select\n                max(\n                    max_block_number\n                ) as b\n            from\n                max_debt_block\n        )\n),\n\nissuance as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        sum(amount) as hourly_issuance\n    from\n        filt_issuance\n    group by\n        date_trunc(\n            'hour',\n            ts\n        ),\n        pool_id,\n        collateral_type\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    coalesce(\n        i.hourly_issuance,\n        0\n    ) as hourly_issuance\nfrom\n    dim\nleft join issuance as i\n    on\n        dim.pool_id = i.pool_id\n        and lower(\n            dim.collateral_type\n        ) = lower(\n            i.collateral_type\n        )\n        and dim.ts = i.ts", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_hourly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.721087Z", "completed_at": "2025-03-04T12:53:09.738233Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.740235Z", "completed_at": "2025-03-04T12:53:09.740245Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024730920791625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_debt_eth_mainnet_pool_id__True__0.9ab83c23dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.727784Z", "completed_at": "2025-03-04T12:53:09.739634Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.746167Z", "completed_at": "2025-03-04T12:53:09.746175Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029840707778930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_eth_mainnet_block_number.d707149fdd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.732865Z", "completed_at": "2025-03-04T12:53:09.745432Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.747865Z", "completed_at": "2025-03-04T12:53:09.747873Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03015923500061035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_eth_mainnet_collateral_type.2f39d51963", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.741202Z", "completed_at": "2025-03-04T12:53:09.749385Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.752004Z", "completed_at": "2025-03-04T12:53:09.752011Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014492511749267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_eth_mainnet_debt.100ad3cae1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.755337Z", "completed_at": "2025-03-04T12:53:09.770712Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.773403Z", "completed_at": "2025-03-04T12:53:09.773416Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023510456085205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_eth_mainnet_pool_id.088122bb77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.760507Z", "completed_at": "2025-03-04T12:53:09.774347Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.781657Z", "completed_at": "2025-03-04T12:53:09.781667Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030447959899902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_debt_eth_mainnet_ts.0a20d36f28", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.765549Z", "completed_at": "2025-03-04T12:53:09.780257Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.782948Z", "completed_at": "2025-03-04T12:53:09.782956Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02960801124572754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_account_activity_arbitrum_mainnet_account_action__Delegated__Withdrawn__Claimed.94c04e5ebf", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        account_action as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_activity_arbitrum_mainnet\"\n    group by account_action\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Delegated','Withdrawn','Claimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.775065Z", "completed_at": "2025-03-04T12:53:09.784517Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.787069Z", "completed_at": "2025-03-04T12:53:09.787078Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022424697875976562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_arbitrum_mainnet_account_action.5ab3d262bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_action\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_activity_arbitrum_mainnet\"\nwhere account_action is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.789214Z", "completed_at": "2025-03-04T12:53:09.796687Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.807244Z", "completed_at": "2025-03-04T12:53:09.807259Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023505210876464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_arbitrum_mainnet_account_id.2e7d753ec3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_activity_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.797287Z", "completed_at": "2025-03-04T12:53:09.815822Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.818387Z", "completed_at": "2025-03-04T12:53:09.818396Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03055882453918457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_arbitrum_mainnet_block_timestamp.4a8634e95d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_account_activity_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.801894Z", "completed_at": "2025-03-04T12:53:09.816536Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.819294Z", "completed_at": "2025-03-04T12:53:09.819301Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030794858932495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_arbitrum_mainnet_amount_deposited.e481f3fc24", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_deposited\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_collateral_arbitrum_mainnet\"\nwhere amount_deposited is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.808501Z", "completed_at": "2025-03-04T12:53:09.817815Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.820804Z", "completed_at": "2025-03-04T12:53:09.820811Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024880170822143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_arbitrum_mainnet_collateral_type.6824e3181d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_collateral_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.823026Z", "completed_at": "2025-03-04T12:53:09.830756Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.833100Z", "completed_at": "2025-03-04T12:53:09.833109Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0160825252532959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_arbitrum_mainnet_ts.e1e47715a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_pool_collateral_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.833992Z", "completed_at": "2025-03-04T12:53:09.849344Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.851282Z", "completed_at": "2025-03-04T12:53:09.851292Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02268385887145996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_account_activity_arbitrum_sepolia_account_action__Delegated__Withdrawn__Claimed.d8230d3bc8", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        account_action as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_activity_arbitrum_sepolia\"\n    group by account_action\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Delegated','Withdrawn','Claimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.843599Z", "completed_at": "2025-03-04T12:53:09.850672Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.853415Z", "completed_at": "2025-03-04T12:53:09.853425Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023399829864501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_arbitrum_sepolia_account_id.b5f7bf7735", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_activity_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.838780Z", "completed_at": "2025-03-04T12:53:09.852193Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.855011Z", "completed_at": "2025-03-04T12:53:09.855022Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025774240493774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_arbitrum_sepolia_account_action.0cb71cc83d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_action\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_activity_arbitrum_sepolia\"\nwhere account_action is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.855914Z", "completed_at": "2025-03-04T12:53:09.863630Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.866041Z", "completed_at": "2025-03-04T12:53:09.866050Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016130924224853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_arbitrum_sepolia_block_timestamp.9ae638f161", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_account_activity_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.866940Z", "completed_at": "2025-03-04T12:53:09.884016Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.885637Z", "completed_at": "2025-03-04T12:53:09.885648Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024372577667236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_arbitrum_sepolia_amount_deposited.feb182d7c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_deposited\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_collateral_arbitrum_sepolia\"\nwhere amount_deposited is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.874380Z", "completed_at": "2025-03-04T12:53:09.886510Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.889008Z", "completed_at": "2025-03-04T12:53:09.889015Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026137113571166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_arbitrum_sepolia_collateral_type.05d462c474", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_collateral_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.879768Z", "completed_at": "2025-03-04T12:53:09.888361Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.895318Z", "completed_at": "2025-03-04T12:53:09.895327Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030631303787231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_arbitrum_sepolia_ts.33284497f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_pool_collateral_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.889891Z", "completed_at": "2025-03-04T12:53:09.897725Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.904123Z", "completed_at": "2025-03-04T12:53:09.904133Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019487380981445312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_account_activity_base_mainnet_account_action__Delegated__Withdrawn__Claimed.18332843a2", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        account_action as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_mainnet\".\"fct_core_account_activity_base_mainnet\"\n    group by account_action\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Delegated','Withdrawn','Claimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.899646Z", "completed_at": "2025-03-04T12:53:09.907220Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.913450Z", "completed_at": "2025-03-04T12:53:09.913485Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019073963165283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_base_mainnet_account_action.9d7e27fe75", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_action\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_account_activity_base_mainnet\"\nwhere account_action is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.908413Z", "completed_at": "2025-03-04T12:53:09.922092Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.928532Z", "completed_at": "2025-03-04T12:53:09.928544Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029666900634765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_base_mainnet_account_id.b74fe5dfc2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_account_activity_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.914406Z", "completed_at": "2025-03-04T12:53:09.927212Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.929597Z", "completed_at": "2025-03-04T12:53:09.929605Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02456974983215332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_base_mainnet_block_timestamp.76eeb87508", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_account_activity_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.922914Z", "completed_at": "2025-03-04T12:53:09.930413Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.932961Z", "completed_at": "2025-03-04T12:53:09.932968Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020261049270629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_base_mainnet_amount_deposited.9fabc246a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_deposited\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pool_collateral_base_mainnet\"\nwhere amount_deposited is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.933844Z", "completed_at": "2025-03-04T12:53:09.942384Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.952740Z", "completed_at": "2025-03-04T12:53:09.952752Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02503824234008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_base_mainnet_collateral_type.63ab148d0c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pool_collateral_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.942988Z", "completed_at": "2025-03-04T12:53:09.953977Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.960199Z", "completed_at": "2025-03-04T12:53:09.960207Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022037506103515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_base_mainnet_ts.4e638376c4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_pool_collateral_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.947394Z", "completed_at": "2025-03-04T12:53:09.958881Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.961237Z", "completed_at": "2025-03-04T12:53:09.961244Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022316932678222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_account_activity_base_sepolia_account_action__Delegated__Withdrawn__Claimed.3cf2f9cfe5", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        account_action as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_sepolia\".\"fct_core_account_activity_base_sepolia\"\n    group by account_action\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Delegated','Withdrawn','Claimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.954607Z", "completed_at": "2025-03-04T12:53:09.962801Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.965331Z", "completed_at": "2025-03-04T12:53:09.965339Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023639440536499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_base_sepolia_account_action.35ccccb136", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_action\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_account_activity_base_sepolia\"\nwhere account_action is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.967478Z", "completed_at": "2025-03-04T12:53:09.976747Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.986606Z", "completed_at": "2025-03-04T12:53:09.986619Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02457737922668457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_base_sepolia_account_id.a01fed41fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_account_activity_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.977324Z", "completed_at": "2025-03-04T12:53:09.987928Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.994331Z", "completed_at": "2025-03-04T12:53:09.994340Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02828502655029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_base_sepolia_block_timestamp.7e113000a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_account_activity_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.981577Z", "completed_at": "2025-03-04T12:53:09.992876Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:09.995377Z", "completed_at": "2025-03-04T12:53:09.995385Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028656959533691406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_base_sepolia_amount_deposited.c9a6a6e3d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_deposited\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pool_collateral_base_sepolia\"\nwhere amount_deposited is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:09.988531Z", "completed_at": "2025-03-04T12:53:09.997605Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.000141Z", "completed_at": "2025-03-04T12:53:10.000149Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024168968200683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_base_sepolia_collateral_type.98bdc1fe0e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pool_collateral_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.001657Z", "completed_at": "2025-03-04T12:53:10.014101Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.022676Z", "completed_at": "2025-03-04T12:53:10.022688Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02650761604309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_base_sepolia_ts.706747681b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_pool_collateral_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.008521Z", "completed_at": "2025-03-04T12:53:10.022030Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.028961Z", "completed_at": "2025-03-04T12:53:10.028971Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02957320213317871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_account_activity_eth_mainnet_account_action__Delegated__Withdrawn__Claimed.8433626c68", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        account_action as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_activity_eth_mainnet\"\n    group by account_action\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Delegated','Withdrawn','Claimed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.014719Z", "completed_at": "2025-03-04T12:53:10.028185Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.030763Z", "completed_at": "2025-03-04T12:53:10.030775Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029855012893676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_eth_mainnet_account_action.63906622b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_action\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_activity_eth_mainnet\"\nwhere account_action is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.023728Z", "completed_at": "2025-03-04T12:53:10.032263Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.034947Z", "completed_at": "2025-03-04T12:53:10.034955Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021711111068725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_eth_mainnet_account_id.5ca5cffa07", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_activity_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.044109Z", "completed_at": "2025-03-04T12:53:10.055071Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.060938Z", "completed_at": "2025-03-04T12:53:10.060955Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026862382888793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_eth_mainnet_amount_deposited.b943283ec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_deposited\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_collateral_eth_mainnet\"\nwhere amount_deposited is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.038262Z", "completed_at": "2025-03-04T12:53:10.055672Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.062694Z", "completed_at": "2025-03-04T12:53:10.062702Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02985358238220215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_account_activity_eth_mainnet_block_timestamp.cf7cc4679f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_account_activity_eth_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.049625Z", "completed_at": "2025-03-04T12:53:10.062111Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.064436Z", "completed_at": "2025-03-04T12:53:10.064444Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02816462516784668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_eth_mainnet_collateral_type.217e5cb420", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_collateral_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.056379Z", "completed_at": "2025-03-04T12:53:10.065286Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.067908Z", "completed_at": "2025-03-04T12:53:10.067916Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019315481185913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_pool_collateral_eth_mainnet_ts.61a1043b04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_pool_collateral_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.071921Z", "completed_at": "2025-03-04T12:53:10.090336Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.096592Z", "completed_at": "2025-03-04T12:53:10.096605Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0301816463470459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_arbitrum_mainnet_created_ts.093f33990b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_accounts_arbitrum_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.084853Z", "completed_at": "2025-03-04T12:53:10.091048Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.097876Z", "completed_at": "2025-03-04T12:53:10.097884Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027983665466308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_arbitrum_mainnet_owner.d6529405d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_accounts_arbitrum_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.080339Z", "completed_at": "2025-03-04T12:53:10.091659Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.098767Z", "completed_at": "2025-03-04T12:53:10.098775Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030102014541625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_arbitrum_mainnet_id.81f17d5942", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_accounts_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.092206Z", "completed_at": "2025-03-04T12:53:10.100406Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.103189Z", "completed_at": "2025-03-04T12:53:10.103200Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02367401123046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_accounts_arbitrum_mainnet_id.b814c43956", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_accounts_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.108158Z", "completed_at": "2025-03-04T12:53:10.127017Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.133477Z", "completed_at": "2025-03-04T12:53:10.133492Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03118586540222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_arbitrum_sepolia_created_ts.881963b12b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_accounts_arbitrum_sepolia\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.118940Z", "completed_at": "2025-03-04T12:53:10.132764Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.135159Z", "completed_at": "2025-03-04T12:53:10.135170Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030539512634277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_arbitrum_sepolia_owner.ab695ba4ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_accounts_arbitrum_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.114224Z", "completed_at": "2025-03-04T12:53:10.134426Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.137346Z", "completed_at": "2025-03-04T12:53:10.137354Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.033386945724487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_arbitrum_sepolia_id.b4e2371e87", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_accounts_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.127906Z", "completed_at": "2025-03-04T12:53:10.136083Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.138925Z", "completed_at": "2025-03-04T12:53:10.138933Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025632858276367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_accounts_arbitrum_sepolia_id.30854048b9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_accounts_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.144785Z", "completed_at": "2025-03-04T12:53:10.164384Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.166182Z", "completed_at": "2025-03-04T12:53:10.166195Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026538848876953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_base_mainnet_created_ts.cc57ba5d93", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_accounts_base_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.150307Z", "completed_at": "2025-03-04T12:53:10.165530Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.167774Z", "completed_at": "2025-03-04T12:53:10.167785Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026798009872436523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_base_mainnet_id.cf1e1e2af0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_accounts_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.155565Z", "completed_at": "2025-03-04T12:53:10.167154Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.169893Z", "completed_at": "2025-03-04T12:53:10.169900Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027019500732421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_base_mainnet_owner.b581a2df74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_accounts_base_mainnet\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.160158Z", "completed_at": "2025-03-04T12:53:10.168600Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.171400Z", "completed_at": "2025-03-04T12:53:10.171407Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02735614776611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_accounts_base_mainnet_id.2a6de2d0f2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_accounts_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.177267Z", "completed_at": "2025-03-04T12:53:10.194814Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.201040Z", "completed_at": "2025-03-04T12:53:10.201055Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028905391693115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_base_sepolia_created_ts.00ac8e7106", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_accounts_base_sepolia\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.185156Z", "completed_at": "2025-03-04T12:53:10.200177Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.202855Z", "completed_at": "2025-03-04T12:53:10.202866Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029331684112548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_base_sepolia_id.e4031edaa1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_accounts_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.190319Z", "completed_at": "2025-03-04T12:53:10.202199Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.205036Z", "completed_at": "2025-03-04T12:53:10.205045Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029655933380126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_accounts_base_sepolia_owner.578268eb9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect owner\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_accounts_base_sepolia\"\nwhere owner is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.195545Z", "completed_at": "2025-03-04T12:53:10.203709Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.206635Z", "completed_at": "2025-03-04T12:53:10.206643Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030073881149291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_accounts_base_sepolia_id.1ca885b5ec", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_accounts_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.212598Z", "completed_at": "2025-03-04T12:53:10.232277Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.238326Z", "completed_at": "2025-03-04T12:53:10.238338Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03098464012145996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_account_arbitrum_mainnet_total_reward__True__0.2126781091", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_account_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.218857Z", "completed_at": "2025-03-04T12:53:10.237596Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.240041Z", "completed_at": "2025-03-04T12:53:10.240051Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03130698204040527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_arbitrum_mainnet_account_id.68826803be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_account_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.224677Z", "completed_at": "2025-03-04T12:53:10.239419Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.242239Z", "completed_at": "2025-03-04T12:53:10.242248Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03158855438232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_arbitrum_mainnet_total_reward.59cc57cac9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_reward\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_account_arbitrum_mainnet\"\nwhere total_reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.233094Z", "completed_at": "2025-03-04T12:53:10.241565Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.244489Z", "completed_at": "2025-03-04T12:53:10.244497Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.032633304595947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_arbitrum_mainnet_ts.3e5e9ca92a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_account_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.249165Z", "completed_at": "2025-03-04T12:53:10.261236Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.271436Z", "completed_at": "2025-03-04T12:53:10.271448Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027769804000854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_account_arbitrum_sepolia_total_reward__True__0.2e9337311c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_account_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.255806Z", "completed_at": "2025-03-04T12:53:10.270709Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.272648Z", "completed_at": "2025-03-04T12:53:10.272658Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026730775833129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_arbitrum_sepolia_account_id.43bf639764", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_account_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.266392Z", "completed_at": "2025-03-04T12:53:10.273579Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.276153Z", "completed_at": "2025-03-04T12:53:10.276164Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02191615104675293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_arbitrum_sepolia_ts.17212bb7f0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_account_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.261839Z", "completed_at": "2025-03-04T12:53:10.274156Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.277072Z", "completed_at": "2025-03-04T12:53:10.277080Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0292360782623291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_arbitrum_sepolia_total_reward.7a99180d9d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_reward\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_account_arbitrum_sepolia\"\nwhere total_reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.290231Z", "completed_at": "2025-03-04T12:53:10.300660Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.306535Z", "completed_at": "2025-03-04T12:53:10.306548Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028071880340576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_base_mainnet_account_id.dd5099ce59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_account_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.283012Z", "completed_at": "2025-03-04T12:53:10.305658Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.308185Z", "completed_at": "2025-03-04T12:53:10.308195Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030352115631103516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_account_base_mainnet_total_reward__True__0.a35af51633", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_account_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.296194Z", "completed_at": "2025-03-04T12:53:10.307450Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.310362Z", "completed_at": "2025-03-04T12:53:10.310370Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0287320613861084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_base_mainnet_total_reward.2a8b87e55c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_reward\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_account_base_mainnet\"\nwhere total_reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.301359Z", "completed_at": "2025-03-04T12:53:10.309103Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.311936Z", "completed_at": "2025-03-04T12:53:10.311944Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029660701751708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_base_mainnet_ts.5a3efee9f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_account_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.318053Z", "completed_at": "2025-03-04T12:53:10.334903Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.340314Z", "completed_at": "2025-03-04T12:53:10.340328Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027710914611816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_account_base_sepolia_total_reward__True__0.42888d54ae", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_account_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.323716Z", "completed_at": "2025-03-04T12:53:10.341417Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.343398Z", "completed_at": "2025-03-04T12:53:10.343405Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029270648956298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_base_sepolia_account_id.f56cf61194", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_account_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.330638Z", "completed_at": "2025-03-04T12:53:10.341991Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.344408Z", "completed_at": "2025-03-04T12:53:10.344416Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028394222259521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_base_sepolia_total_reward.24d48c7864", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_reward\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_account_base_sepolia\"\nwhere total_reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.335691Z", "completed_at": "2025-03-04T12:53:10.345261Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.347845Z", "completed_at": "2025-03-04T12:53:10.347853Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030611753463745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_account_base_sepolia_ts.c34644894f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_account_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.351197Z", "completed_at": "2025-03-04T12:53:10.362803Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.368775Z", "completed_at": "2025-03-04T12:53:10.368787Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023038864135742188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_interest_charged_arbitrum_mainnet_event_name__InterestCharged.290d5610b6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestCharged'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.358096Z", "completed_at": "2025-03-04T12:53:10.376198Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.378213Z", "completed_at": "2025-03-04T12:53:10.378222Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029021263122558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_interest_charged_arbitrum_mainnet_account_id__True__0.8b99042cb7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.363411Z", "completed_at": "2025-03-04T12:53:10.376846Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.379170Z", "completed_at": "2025-03-04T12:53:10.379178Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029326200485229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_interest_charged_arbitrum_mainnet_interest__True__0.7cdf7632d5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.369900Z", "completed_at": "2025-03-04T12:53:10.380714Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.383242Z", "completed_at": "2025-03-04T12:53:10.383249Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02604842185974121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_mainnet_account_id.f870459206", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.385357Z", "completed_at": "2025-03-04T12:53:10.397580Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.403401Z", "completed_at": "2025-03-04T12:53:10.403413Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02348613739013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_mainnet_block_number.f9a6bea511", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.392930Z", "completed_at": "2025-03-04T12:53:10.404380Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.410956Z", "completed_at": "2025-03-04T12:53:10.410965Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02697467803955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_mainnet_block_timestamp.a02a2dca08", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.398153Z", "completed_at": "2025-03-04T12:53:10.409525Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.411991Z", "completed_at": "2025-03-04T12:53:10.411999Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0273592472076416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_mainnet_contract.2994a59949", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.405130Z", "completed_at": "2025-03-04T12:53:10.413565Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.416127Z", "completed_at": "2025-03-04T12:53:10.416135Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023989439010620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_mainnet_event_name.2eb4ea378d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.418286Z", "completed_at": "2025-03-04T12:53:10.430802Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.438019Z", "completed_at": "2025-03-04T12:53:10.438036Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025240421295166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_mainnet_id.e65a5a6b7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.432836Z", "completed_at": "2025-03-04T12:53:10.443798Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.445921Z", "completed_at": "2025-03-04T12:53:10.445931Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028372764587402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_mainnet_transaction_hash.a51ba7ae00", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.425701Z", "completed_at": "2025-03-04T12:53:10.444385Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.446891Z", "completed_at": "2025-03-04T12:53:10.446902Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029974699020385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_mainnet_interest.9af6483895", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere interest is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.439404Z", "completed_at": "2025-03-04T12:53:10.447752Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.450325Z", "completed_at": "2025-03-04T12:53:10.450333Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0254366397857666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_interest_charged_arbitrum_mainnet_id.176ba58d24", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_interest_charged_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.453765Z", "completed_at": "2025-03-04T12:53:10.465697Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.472081Z", "completed_at": "2025-03-04T12:53:10.472094Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023891210556030273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_interest_charged_arbitrum_sepolia_event_name__InterestCharged.51e1e7a8ae", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestCharged'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.460880Z", "completed_at": "2025-03-04T12:53:10.473000Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.481947Z", "completed_at": "2025-03-04T12:53:10.481958Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030219316482543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_interest_charged_arbitrum_sepolia_account_id__True__0.9112ebe432", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.466439Z", "completed_at": "2025-03-04T12:53:10.478870Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.482881Z", "completed_at": "2025-03-04T12:53:10.482889Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03050398826599121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_interest_charged_arbitrum_sepolia_interest__True__0.c64881a8aa", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.473752Z", "completed_at": "2025-03-04T12:53:10.485196Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.487785Z", "completed_at": "2025-03-04T12:53:10.487792Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027762651443481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_sepolia_account_id.90ca2a0ca7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.489315Z", "completed_at": "2025-03-04T12:53:10.502193Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.508379Z", "completed_at": "2025-03-04T12:53:10.508392Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024649381637573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_sepolia_block_number.bcf0e9c27a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.496653Z", "completed_at": "2025-03-04T12:53:10.509276Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.516304Z", "completed_at": "2025-03-04T12:53:10.516316Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029314756393432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_sepolia_block_timestamp.a258f49c6c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.502956Z", "completed_at": "2025-03-04T12:53:10.515585Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.518637Z", "completed_at": "2025-03-04T12:53:10.518645Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030064821243286133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_sepolia_contract.d14beb1667", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.509997Z", "completed_at": "2025-03-04T12:53:10.518062Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.520785Z", "completed_at": "2025-03-04T12:53:10.520793Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019312620162963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_sepolia_event_name.08086a65e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.522955Z", "completed_at": "2025-03-04T12:53:10.531054Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.543652Z", "completed_at": "2025-03-04T12:53:10.543665Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02642965316772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_sepolia_id.38605d52c9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.531651Z", "completed_at": "2025-03-04T12:53:10.549127Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.551339Z", "completed_at": "2025-03-04T12:53:10.551349Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029177427291870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_sepolia_interest.9aabfab72d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere interest is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.539017Z", "completed_at": "2025-03-04T12:53:10.550644Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.553530Z", "completed_at": "2025-03-04T12:53:10.553538Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02522110939025879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_arbitrum_sepolia_transaction_hash.a2955227b8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.544786Z", "completed_at": "2025-03-04T12:53:10.552917Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.555683Z", "completed_at": "2025-03-04T12:53:10.555690Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025981903076171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_interest_charged_arbitrum_sepolia_id.418f459da1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_interest_charged_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.557893Z", "completed_at": "2025-03-04T12:53:10.565493Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.572053Z", "completed_at": "2025-03-04T12:53:10.572065Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019869565963745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_interest_charged_base_mainnet_event_name__InterestCharged.b8b39fbb4d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestCharged'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.566682Z", "completed_at": "2025-03-04T12:53:10.584664Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.586395Z", "completed_at": "2025-03-04T12:53:10.586405Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02933979034423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_interest_charged_base_mainnet_account_id__True__0.d4da8249b8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.572974Z", "completed_at": "2025-03-04T12:53:10.587360Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.589917Z", "completed_at": "2025-03-04T12:53:10.589927Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026589155197143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_interest_charged_base_mainnet_interest__True__0.b25a9c1b50", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.577726Z", "completed_at": "2025-03-04T12:53:10.588614Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.812646Z", "completed_at": "2025-03-04T12:53:10.812662Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.24797344207763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_mainnet_account_id.2830ac0b93", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.590824Z", "completed_at": "2025-03-04T12:53:10.816021Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.818444Z", "completed_at": "2025-03-04T12:53:10.818452Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.23294782638549805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_mainnet_block_number.47e9d47bb4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.819326Z", "completed_at": "2025-03-04T12:53:10.830509Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.836517Z", "completed_at": "2025-03-04T12:53:10.836531Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022869110107421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_mainnet_block_timestamp.60136d09c1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.826102Z", "completed_at": "2025-03-04T12:53:10.838190Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.844592Z", "completed_at": "2025-03-04T12:53:10.844601Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027529001235961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_mainnet_contract.8e7dd8a6ef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.831252Z", "completed_at": "2025-03-04T12:53:10.839448Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.846117Z", "completed_at": "2025-03-04T12:53:10.846125Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028393030166625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_mainnet_event_name.eaf9eac9c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.840105Z", "completed_at": "2025-03-04T12:53:10.848453Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.856177Z", "completed_at": "2025-03-04T12:53:10.856187Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020596981048583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_mainnet_id.a798ff42d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.850332Z", "completed_at": "2025-03-04T12:53:10.859188Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.865590Z", "completed_at": "2025-03-04T12:53:10.865601Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02021956443786621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_mainnet_interest.073a973712", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere interest is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.860354Z", "completed_at": "2025-03-04T12:53:10.871751Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.877755Z", "completed_at": "2025-03-04T12:53:10.877765Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028178930282592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_mainnet_transaction_hash.f85d4df49f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.866490Z", "completed_at": "2025-03-04T12:53:10.878646Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.881345Z", "completed_at": "2025-03-04T12:53:10.881357Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02434849739074707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_interest_charged_base_mainnet_id.31ca39738f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_interest_charged_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.873136Z", "completed_at": "2025-03-04T12:53:10.880792Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.883485Z", "completed_at": "2025-03-04T12:53:10.883493Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018657684326171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_interest_charged_base_sepolia_event_name__InterestCharged.ff861d06a4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'InterestCharged'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.885015Z", "completed_at": "2025-03-04T12:53:10.896677Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.898734Z", "completed_at": "2025-03-04T12:53:10.898744Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0196077823638916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_interest_charged_base_sepolia_account_id__True__0.3edc04f3c6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.892066Z", "completed_at": "2025-03-04T12:53:10.900229Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.911930Z", "completed_at": "2025-03-04T12:53:10.911939Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02921295166015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_interest_charged_base_sepolia_interest__True__0.cbe80d3cfc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not interest >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.900837Z", "completed_at": "2025-03-04T12:53:10.914439Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.917031Z", "completed_at": "2025-03-04T12:53:10.917043Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025900602340698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_sepolia_account_id.86fbe78f66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.907677Z", "completed_at": "2025-03-04T12:53:10.916419Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.923144Z", "completed_at": "2025-03-04T12:53:10.923154Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025896549224853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_sepolia_block_number.b5c567e21f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.917927Z", "completed_at": "2025-03-04T12:53:10.929949Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.932673Z", "completed_at": "2025-03-04T12:53:10.932683Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019787311553955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_sepolia_block_timestamp.0a73b599b9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.924966Z", "completed_at": "2025-03-04T12:53:10.932087Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.934730Z", "completed_at": "2025-03-04T12:53:10.934737Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019011974334716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_sepolia_contract.d0f4674d07", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.936217Z", "completed_at": "2025-03-04T12:53:10.948219Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.955154Z", "completed_at": "2025-03-04T12:53:10.955165Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024652481079101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_sepolia_event_name.237b079041", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.940767Z", "completed_at": "2025-03-04T12:53:10.948786Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.957296Z", "completed_at": "2025-03-04T12:53:10.957306Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026011943817138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_sepolia_id.eb661d1506", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.949982Z", "completed_at": "2025-03-04T12:53:10.964524Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.967091Z", "completed_at": "2025-03-04T12:53:10.967102Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021237850189208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_sepolia_interest.201254f262", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere interest is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.958190Z", "completed_at": "2025-03-04T12:53:10.965899Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.968573Z", "completed_at": "2025-03-04T12:53:10.968584Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021808624267578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_interest_charged_base_sepolia_transaction_hash.aaef59efbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.970722Z", "completed_at": "2025-03-04T12:53:10.981677Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.984152Z", "completed_at": "2025-03-04T12:53:10.984165Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01907825469970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_interest_charged_base_sepolia_id.53669ecac5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_interest_charged_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.975989Z", "completed_at": "2025-03-04T12:53:10.983565Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:10.995997Z", "completed_at": "2025-03-04T12:53:10.996009Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029656648635864258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_liq_position_arbitrum_mainnet", "compiled": true, "compiled_code": "with liquidations as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        account_id,\n        market_id,\n        \n    amount_liquidated / 1e18\n as amount_liquidated,\n        \n    current_position_size / 1e18\n as position_size\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_position_liquidated_arbitrum_mainnet\"\n),\n\nmarkets as (\n    select\n        id,\n        market_symbol\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\"\n)\n\nselect\n    l.id,\n    l.ts,\n    l.block_number,\n    l.transaction_hash,\n    l.market_id,\n    m.market_symbol,\n    l.amount_liquidated,\n    l.position_size,\n    CAST(\n        l.account_id as text\n    ) as account_id\nfrom\n    liquidations as l\nleft join markets as m\n    on l.market_id = m.id", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.991686Z", "completed_at": "2025-03-04T12:53:10.997985Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.000872Z", "completed_at": "2025-03-04T12:53:11.000881Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019994258880615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_orders_arbitrum_mainnet", "compiled": true, "compiled_code": "with arbitrum as (\n    select\n        oc.id,\n        oc.block_timestamp as ts,\n        oc.block_number,\n        oc.transaction_hash,\n        oc.contract,\n        oc.market_id,\n        markets.market_symbol,\n        CAST(\n            oc.account_id as text\n        ) as account_id,\n        oc.order_type,\n        \n    oc.size_delta / 1e18\n as size,\n        \n    oc.acceptable_price / 1e18\n as acceptable_price,\n        oc.settlement_time,\n        oc.expiration_time,\n        \n    LEFT(\n        REGEXP_REPLACE(\n            encode(\n                DECODE(REPLACE(oc.tracking_code, '0x', ''), 'hex'),\n                'escape'\n            ) :: text,\n            '\\\\000',\n            '',\n            'g'\n        ),\n        20\n    )\n as tracking_code,\n        oc.sender\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_committed_arbitrum_mainnet\"\n        as oc\n    left join \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\" as markets\n        on oc.market_id = markets.id\n)\n\nselect *\nfrom\n    arbitrum", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:10.985058Z", "completed_at": "2025-03-04T12:53:10.998563Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.001760Z", "completed_at": "2025-03-04T12:53:11.001768Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021811723709106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_history_arbitrum_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        mu.id,\n        mu.block_timestamp as ts,\n        mu.block_number,\n        mu.transaction_hash,\n        m.id as market_id,\n        m.market_symbol,\n        \n    price / 1e18\n as price,\n        \n    skew / 1e18\n as skew,\n        \n    size / 1e18\n as size,\n        \n    size_delta / 1e18\n as size_delta,\n        \n    current_funding_rate / 1e18\n as funding_rate,\n        \n    current_funding_velocity / 1e18\n as funding_velocity,\n        \n    interest_rate / 1e18\n as interest_rate,\n        \n    current_funding_rate / 1e18\n * 365.25 as funding_rate_apr,\n        \n    current_funding_rate / 1e18\n * 365.25\n        + \n    interest_rate / 1e18\n as long_rate_apr,\n        \n    current_funding_rate / 1e18\n * -1 * 365.25\n        + \n    interest_rate / 1e18\n as short_rate_apr,\n        LAG(\n    size / 1e18\n, 1, 0) over (\n            partition by m.market_symbol\n            order by\n                mu.block_timestamp\n        ) as prev_size\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_market_updated_arbitrum_mainnet\" as mu\n    left join \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\" as m\n        on mu.market_id = m.id\n),\n\noi as (\n    select\n        id,\n        ts,\n        size * price as market_oi_usd,\n        LAG(\n            size * price,\n            1,\n            0\n        ) over (\n            partition by market_symbol\n            order by\n                ts asc\n        ) as prev_market_oi_usd,\n        (\n            size + skew\n        ) * price / 2 as long_oi,\n        (\n            size - skew\n        ) * price / 2 as short_oi,\n        case\n            when size * price = 0 then null\n            else ((size + skew) * price / 2) / (\n                size * price\n            )\n        end as long_oi_pct,\n        case\n            when size * price = 0 then null\n            else ((size - skew) * price / 2) / (\n                size * price\n            )\n        end as short_oi_pct\n    from\n        base\n),\n\ntotal_oi as (\n    select\n        id,\n        SUM(\n            market_oi_usd - prev_market_oi_usd\n        ) over (\n            order by\n                ts asc\n        ) as total_oi_usd\n    from\n        oi\n)\n\nselect\n    base.*,\n    ROUND(\n        oi.market_oi_usd,\n        2\n    ) as market_oi_usd,\n    ROUND(\n        total_oi.total_oi_usd,\n        2\n    ) as total_oi_usd,\n    ROUND(\n        oi.long_oi,\n        2\n    ) as long_oi,\n    ROUND(\n        oi.short_oi,\n        2\n    ) as short_oi,\n    oi.long_oi_pct,\n    oi.short_oi_pct\nfrom\n    base\ninner join oi\n    on base.id = oi.id\ninner join total_oi\n    on base.id = total_oi.id", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.006724Z", "completed_at": "2025-03-04T12:53:11.021674Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.027549Z", "completed_at": "2025-03-04T12:53:11.027562Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027777671813964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_trades_arbitrum_mainnet", "compiled": true, "compiled_code": "with arbitrum as (\n    select\n        pos.id,\n        pos.block_timestamp as ts,\n        pos.block_number,\n        pos.transaction_hash,\n        pos.contract,\n        pos.market_id,\n        markets.market_symbol,\n        CAST(\n            pos.account_id as text\n        ) as account_id,\n        \n    fill_price / 1e18\n as fill_price,\n        \n    pnl / 1e18\n as pnl,\n        \n    accrued_funding / 1e18\n as accrued_funding,\n        \n    size_delta / 1e18\n as trade_size,\n        \n    new_size / 1e18\n as position_size,\n        \n    total_fees / 1e18\n as total_fees,\n        \n    referral_fees / 1e18\n as referral_fees,\n        \n    collected_fees / 1e18\n as collected_fees,\n        \n    settlement_reward / 1e18\n as settlement_reward,\n        \n    LEFT(\n        REGEXP_REPLACE(\n            encode(\n                DECODE(REPLACE(tracking_code, '0x', ''), 'hex'),\n                'escape'\n            ) :: text,\n            '\\\\000',\n            '',\n            'g'\n        ),\n        20\n    )\n as tracking_code,\n        pos.settler\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_order_settled_arbitrum_mainnet\" as pos\n    left join \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\" as markets\n        on pos.market_id = markets.id\n)\n\nselect\n    *,\n    ABS(\n        fill_price * trade_size\n    ) as notional_trade_size,\n    fill_price * position_size as notional_position_size,\n    total_fees - referral_fees - collected_fees - settlement_reward as lp_fees,\n    total_fees - settlement_reward as exchange_fees\nfrom\n    arbitrum", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.016122Z", "completed_at": "2025-03-04T12:53:11.028486Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.035974Z", "completed_at": "2025-03-04T12:53:11.035984Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03345918655395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_markets_arbitrum_mainnet_id__True__0.1cff4e3aae", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.023040Z", "completed_at": "2025-03-04T12:53:11.034398Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.038289Z", "completed_at": "2025-03-04T12:53:11.038301Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023667573928833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_mainnet_block_number.9856206ec2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.029099Z", "completed_at": "2025-03-04T12:53:11.037694Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.040505Z", "completed_at": "2025-03-04T12:53:11.040513Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025104284286499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_mainnet_created_ts.5210e0d803", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.042685Z", "completed_at": "2025-03-04T12:53:11.057260Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.063060Z", "completed_at": "2025-03-04T12:53:11.063077Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0261688232421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_mainnet_id.8bc5d0147f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.051010Z", "completed_at": "2025-03-04T12:53:11.068289Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.070640Z", "completed_at": "2025-03-04T12:53:11.070650Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028735876083374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_mainnet_market_name.6d1107f677", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_name\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\"\nwhere market_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.058523Z", "completed_at": "2025-03-04T12:53:11.069859Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.072865Z", "completed_at": "2025-03-04T12:53:11.072876Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024749040603637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_mainnet_market_symbol.052367dc06", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_markets_arbitrum_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.064189Z", "completed_at": "2025-03-04T12:53:11.071590Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.074390Z", "completed_at": "2025-03-04T12:53:11.074398Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02477574348449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_liq_position_arbitrum_sepolia", "compiled": true, "compiled_code": "with liquidations as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        account_id,\n        market_id,\n        \n    amount_liquidated / 1e18\n as amount_liquidated,\n        \n    current_position_size / 1e18\n as position_size\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_position_liquidated_arbitrum_sepolia\"\n),\n\nmarkets as (\n    select\n        id,\n        market_symbol\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\"\n)\n\nselect\n    l.id,\n    l.ts,\n    l.block_number,\n    l.transaction_hash,\n    l.market_id,\n    m.market_symbol,\n    l.amount_liquidated,\n    l.position_size,\n    CAST(\n        l.account_id as text\n    ) as account_id\nfrom\n    liquidations as l\nleft join markets as m\n    on l.market_id = m.id", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.077975Z", "completed_at": "2025-03-04T12:53:11.093833Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.108155Z", "completed_at": "2025-03-04T12:53:11.108170Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03612685203552246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_history_arbitrum_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        mu.id,\n        mu.block_timestamp as ts,\n        mu.block_number,\n        mu.transaction_hash,\n        m.id as market_id,\n        m.market_symbol,\n        \n    price / 1e18\n as price,\n        \n    skew / 1e18\n as skew,\n        \n    size / 1e18\n as size,\n        \n    size_delta / 1e18\n as size_delta,\n        \n    current_funding_rate / 1e18\n as funding_rate,\n        \n    current_funding_velocity / 1e18\n as funding_velocity,\n        \n    interest_rate / 1e18\n as interest_rate,\n        \n    current_funding_rate / 1e18\n * 365.25 as funding_rate_apr,\n        \n    current_funding_rate / 1e18\n * 365.25\n        + \n    interest_rate / 1e18\n as long_rate_apr,\n        \n    current_funding_rate / 1e18\n * -1 * 365.25\n        + \n    interest_rate / 1e18\n as short_rate_apr,\n        LAG(\n    size / 1e18\n, 1, 0) over (\n            partition by m.market_symbol\n            order by\n                mu.block_timestamp\n        ) as prev_size\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_market_updated_arbitrum_sepolia\" as mu\n    left join \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\" as m\n        on mu.market_id = m.id\n),\n\noi as (\n    select\n        id,\n        ts,\n        size * price as market_oi_usd,\n        LAG(\n            size * price,\n            1,\n            0\n        ) over (\n            partition by market_symbol\n            order by\n                ts asc\n        ) as prev_market_oi_usd,\n        (\n            size + skew\n        ) * price / 2 as long_oi,\n        (\n            size - skew\n        ) * price / 2 as short_oi,\n        case\n            when size * price = 0 then null\n            else ((size + skew) * price / 2) / (\n                size * price\n            )\n        end as long_oi_pct,\n        case\n            when size * price = 0 then null\n            else ((size - skew) * price / 2) / (\n                size * price\n            )\n        end as short_oi_pct\n    from\n        base\n),\n\ntotal_oi as (\n    select\n        id,\n        SUM(\n            market_oi_usd - prev_market_oi_usd\n        ) over (\n            order by\n                ts asc\n        ) as total_oi_usd\n    from\n        oi\n)\n\nselect\n    base.*,\n    ROUND(\n        oi.market_oi_usd,\n        2\n    ) as market_oi_usd,\n    ROUND(\n        total_oi.total_oi_usd,\n        2\n    ) as total_oi_usd,\n    ROUND(\n        oi.long_oi,\n        2\n    ) as long_oi,\n    ROUND(\n        oi.short_oi,\n        2\n    ) as short_oi,\n    oi.long_oi_pct,\n    oi.short_oi_pct\nfrom\n    base\ninner join oi\n    on base.id = oi.id\ninner join total_oi\n    on base.id = total_oi.id", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.088412Z", "completed_at": "2025-03-04T12:53:11.109247Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.112290Z", "completed_at": "2025-03-04T12:53:11.112299Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03581643104553223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_orders_arbitrum_sepolia", "compiled": true, "compiled_code": "with arbitrum as (\n    select\n        oc.id,\n        oc.block_timestamp as ts,\n        oc.block_number,\n        oc.transaction_hash,\n        oc.contract,\n        oc.market_id,\n        markets.market_symbol,\n        CAST(\n            oc.account_id as text\n        ) as account_id,\n        oc.order_type,\n        \n    oc.size_delta / 1e18\n as size,\n        \n    oc.acceptable_price / 1e18\n as acceptable_price,\n        oc.settlement_time,\n        oc.expiration_time,\n        \n    LEFT(\n        REGEXP_REPLACE(\n            encode(\n                DECODE(REPLACE(oc.tracking_code, '0x', ''), 'hex'),\n                'escape'\n            ) :: text,\n            '\\\\000',\n            '',\n            'g'\n        ),\n        20\n    )\n as tracking_code,\n        oc.sender\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_committed_arbitrum_sepolia\"\n        as oc\n    left join \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\" as markets\n        on oc.market_id = markets.id\n)\n\nselect *\nfrom\n    arbitrum", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.094475Z", "completed_at": "2025-03-04T12:53:11.111115Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.114557Z", "completed_at": "2025-03-04T12:53:11.114567Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029000043869018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_trades_arbitrum_sepolia", "compiled": true, "compiled_code": "with arbitrum as (\n    select\n        pos.id,\n        pos.block_timestamp as ts,\n        pos.block_number,\n        pos.transaction_hash,\n        pos.contract,\n        pos.market_id,\n        markets.market_symbol,\n        CAST(\n            pos.account_id as text\n        ) as account_id,\n        \n    fill_price / 1e18\n as fill_price,\n        \n    pnl / 1e18\n as pnl,\n        \n    accrued_funding / 1e18\n as accrued_funding,\n        \n    size_delta / 1e18\n as trade_size,\n        \n    new_size / 1e18\n as position_size,\n        \n    total_fees / 1e18\n as total_fees,\n        \n    referral_fees / 1e18\n as referral_fees,\n        \n    collected_fees / 1e18\n as collected_fees,\n        \n    settlement_reward / 1e18\n as settlement_reward,\n        \n    LEFT(\n        REGEXP_REPLACE(\n            encode(\n                DECODE(REPLACE(tracking_code, '0x', ''), 'hex'),\n                'escape'\n            ) :: text,\n            '\\\\000',\n            '',\n            'g'\n        ),\n        20\n    )\n as tracking_code,\n        pos.settler\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_order_settled_arbitrum_sepolia\" as pos\n    left join \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\" as markets\n        on pos.market_id = markets.id\n)\n\nselect\n    *,\n    ABS(\n        fill_price * trade_size\n    ) as notional_trade_size,\n    fill_price * position_size as notional_position_size,\n    total_fees - referral_fees - collected_fees - settlement_reward as lp_fees,\n    total_fees - settlement_reward as exchange_fees\nfrom\n    arbitrum", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.100880Z", "completed_at": "2025-03-04T12:53:11.113955Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.116998Z", "completed_at": "2025-03-04T12:53:11.117005Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030101776123046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_markets_arbitrum_sepolia_id__True__0.809baf15c9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.119939Z", "completed_at": "2025-03-04T12:53:11.128187Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.138495Z", "completed_at": "2025-03-04T12:53:11.138508Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02534198760986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_sepolia_block_number.29c62666b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.128791Z", "completed_at": "2025-03-04T12:53:11.144921Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.147097Z", "completed_at": "2025-03-04T12:53:11.147110Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028536081314086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_sepolia_created_ts.c925538049", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.134115Z", "completed_at": "2025-03-04T12:53:11.145672Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.148669Z", "completed_at": "2025-03-04T12:53:11.148677Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02328634262084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_sepolia_id.1aae92d10b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.139633Z", "completed_at": "2025-03-04T12:53:11.148061Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.150838Z", "completed_at": "2025-03-04T12:53:11.150845Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02398371696472168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_sepolia_market_name.2fb670f3c9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_name\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\"\nwhere market_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.152385Z", "completed_at": "2025-03-04T12:53:11.163075Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.175324Z", "completed_at": "2025-03-04T12:53:11.175336Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02913045883178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_arbitrum_sepolia_market_symbol.894efe853d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_markets_arbitrum_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.163649Z", "completed_at": "2025-03-04T12:53:11.181097Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.183307Z", "completed_at": "2025-03-04T12:53:11.183318Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025902271270751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_liq_position_base_mainnet", "compiled": true, "compiled_code": "with liquidations as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        account_id,\n        market_id,\n        \n    amount_liquidated / 1e18\n as amount_liquidated,\n        \n    current_position_size / 1e18\n as position_size\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_position_liquidated_base_mainnet\"\n),\n\nmarkets as (\n    select\n        id,\n        market_symbol\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\"\n)\n\nselect\n    l.id,\n    l.ts,\n    l.block_number,\n    l.transaction_hash,\n    l.market_id,\n    m.market_symbol,\n    l.amount_liquidated,\n    l.position_size,\n    CAST(\n        l.account_id as text\n    ) as account_id\nfrom\n    liquidations as l\nleft join markets as m\n    on l.market_id = m.id", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.168710Z", "completed_at": "2025-03-04T12:53:11.182613Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.185522Z", "completed_at": "2025-03-04T12:53:11.185532Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02523660659790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_history_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        mu.id,\n        mu.block_timestamp as ts,\n        mu.block_number,\n        mu.transaction_hash,\n        m.id as market_id,\n        m.market_symbol,\n        \n    price / 1e18\n as price,\n        \n    skew / 1e18\n as skew,\n        \n    size / 1e18\n as size,\n        \n    size_delta / 1e18\n as size_delta,\n        \n    current_funding_rate / 1e18\n as funding_rate,\n        \n    current_funding_velocity / 1e18\n as funding_velocity,\n        \n    interest_rate / 1e18\n as interest_rate,\n        \n    current_funding_rate / 1e18\n * 365.25 as funding_rate_apr,\n        \n    current_funding_rate / 1e18\n * 365.25\n        + \n    interest_rate / 1e18\n as long_rate_apr,\n        \n    current_funding_rate / 1e18\n * -1 * 365.25\n        + \n    interest_rate / 1e18\n as short_rate_apr,\n        LAG(\n    size / 1e18\n, 1, 0) over (\n            partition by m.market_symbol\n            order by\n                mu.block_timestamp\n        ) as prev_size\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_market_updated_base_mainnet\" as mu\n    left join \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\" as m\n        on mu.market_id = m.id\n),\n\noi as (\n    select\n        id,\n        ts,\n        size * price as market_oi_usd,\n        LAG(\n            size * price,\n            1,\n            0\n        ) over (\n            partition by market_symbol\n            order by\n                ts asc\n        ) as prev_market_oi_usd,\n        (\n            size + skew\n        ) * price / 2 as long_oi,\n        (\n            size - skew\n        ) * price / 2 as short_oi,\n        case\n            when size * price = 0 then null\n            else ((size + skew) * price / 2) / (\n                size * price\n            )\n        end as long_oi_pct,\n        case\n            when size * price = 0 then null\n            else ((size - skew) * price / 2) / (\n                size * price\n            )\n        end as short_oi_pct\n    from\n        base\n),\n\ntotal_oi as (\n    select\n        id,\n        SUM(\n            market_oi_usd - prev_market_oi_usd\n        ) over (\n            order by\n                ts asc\n        ) as total_oi_usd\n    from\n        oi\n)\n\nselect\n    base.*,\n    ROUND(\n        oi.market_oi_usd,\n        2\n    ) as market_oi_usd,\n    ROUND(\n        total_oi.total_oi_usd,\n        2\n    ) as total_oi_usd,\n    ROUND(\n        oi.long_oi,\n        2\n    ) as long_oi,\n    ROUND(\n        oi.short_oi,\n        2\n    ) as short_oi,\n    oi.long_oi_pct,\n    oi.short_oi_pct\nfrom\n    base\ninner join oi\n    on base.id = oi.id\ninner join total_oi\n    on base.id = total_oi.id", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.176391Z", "completed_at": "2025-03-04T12:53:11.184273Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.187387Z", "completed_at": "2025-03-04T12:53:11.187397Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025713682174682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_orders_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        oc.id,\n        oc.block_timestamp as ts,\n        oc.block_number,\n        oc.transaction_hash,\n        oc.contract,\n        oc.market_id,\n        markets.market_symbol,\n        CAST(\n            oc.account_id as text\n        ) as account_id,\n        oc.order_type,\n        \n    oc.size_delta / 1e18\n as size,\n        \n    oc.acceptable_price / 1e18\n as acceptable_price,\n        oc.settlement_time,\n        oc.expiration_time,\n        \n    LEFT(\n        REGEXP_REPLACE(\n            encode(\n                DECODE(REPLACE(oc.tracking_code, '0x', ''), 'hex'),\n                'escape'\n            ) :: text,\n            '\\\\000',\n            '',\n            'g'\n        ),\n        20\n    )\n as tracking_code,\n        oc.sender\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_committed_base_mainnet\"\n        as oc\n    left join \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\" as markets\n        on oc.market_id = markets.id\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.191681Z", "completed_at": "2025-03-04T12:53:11.205803Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.213937Z", "completed_at": "2025-03-04T12:53:11.213951Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029218673706054688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_trades_base_mainnet", "compiled": true, "compiled_code": "with base as (\n    select\n        pos.id,\n        pos.block_timestamp as ts,\n        pos.block_number,\n        pos.transaction_hash,\n        pos.contract,\n        pos.market_id,\n        markets.market_symbol,\n        CAST(\n            pos.account_id as text\n        ) as account_id,\n        \n    fill_price / 1e18\n as fill_price,\n        \n    pnl / 1e18\n as pnl,\n        \n    accrued_funding / 1e18\n as accrued_funding,\n        \n    size_delta / 1e18\n as trade_size,\n        \n    new_size / 1e18\n as position_size,\n        \n    total_fees / 1e18\n as total_fees,\n        \n    referral_fees / 1e18\n as referral_fees,\n        \n    collected_fees / 1e18\n as collected_fees,\n        \n    settlement_reward / 1e18\n as settlement_reward,\n        \n    LEFT(\n        REGEXP_REPLACE(\n            encode(\n                DECODE(REPLACE(tracking_code, '0x', ''), 'hex'),\n                'escape'\n            ) :: text,\n            '\\\\000',\n            '',\n            'g'\n        ),\n        20\n    )\n as tracking_code,\n        pos.settler\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_order_settled_base_mainnet\" as pos\n    left join \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\" as markets\n        on pos.market_id = markets.id\n)\n\nselect\n    *,\n    ABS(\n        fill_price * trade_size\n    ) as notional_trade_size,\n    fill_price * position_size as notional_position_size,\n    total_fees - referral_fees - collected_fees - settlement_reward as lp_fees,\n    total_fees - settlement_reward as exchange_fees\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.200872Z", "completed_at": "2025-03-04T12:53:11.219330Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.222457Z", "completed_at": "2025-03-04T12:53:11.222485Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03291440010070801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_markets_base_mainnet_id__True__0.ac58557180", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.207001Z", "completed_at": "2025-03-04T12:53:11.220813Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.224627Z", "completed_at": "2025-03-04T12:53:11.224638Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026483774185180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_mainnet_block_number.6792b019f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.214964Z", "completed_at": "2025-03-04T12:53:11.223394Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.226179Z", "completed_at": "2025-03-04T12:53:11.226190Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026764631271362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_mainnet_created_ts.b73d9a0c8a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.229652Z", "completed_at": "2025-03-04T12:53:11.237197Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.247486Z", "completed_at": "2025-03-04T12:53:11.247500Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023679733276367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_mainnet_id.bd1fc06532", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.237803Z", "completed_at": "2025-03-04T12:53:11.254633Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.256832Z", "completed_at": "2025-03-04T12:53:11.256843Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0286562442779541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_mainnet_market_name.303acf9a19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_name\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\"\nwhere market_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.243036Z", "completed_at": "2025-03-04T12:53:11.255931Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.259074Z", "completed_at": "2025-03-04T12:53:11.259086Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02481842041015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_mainnet_market_symbol.c8dc99abfc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_markets_base_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.248636Z", "completed_at": "2025-03-04T12:53:11.258447Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.261288Z", "completed_at": "2025-03-04T12:53:11.261296Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025526762008666992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_liq_position_base_sepolia", "compiled": true, "compiled_code": "with liquidations as (\n    select\n        id,\n        block_timestamp as ts,\n        block_number,\n        transaction_hash,\n        account_id,\n        market_id,\n        \n    amount_liquidated / 1e18\n as amount_liquidated,\n        \n    current_position_size / 1e18\n as position_size\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_position_liquidated_base_sepolia\"\n),\n\nmarkets as (\n    select\n        id,\n        market_symbol\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\"\n)\n\nselect\n    l.id,\n    l.ts,\n    l.block_number,\n    l.transaction_hash,\n    l.market_id,\n    m.market_symbol,\n    l.amount_liquidated,\n    l.position_size,\n    CAST(\n        l.account_id as text\n    ) as account_id\nfrom\n    liquidations as l\nleft join markets as m\n    on l.market_id = m.id", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.263485Z", "completed_at": "2025-03-04T12:53:11.274501Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.286897Z", "completed_at": "2025-03-04T12:53:11.286911Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029224395751953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_history_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        mu.id,\n        mu.block_timestamp as ts,\n        mu.block_number,\n        mu.transaction_hash,\n        m.id as market_id,\n        m.market_symbol,\n        \n    price / 1e18\n as price,\n        \n    skew / 1e18\n as skew,\n        \n    size / 1e18\n as size,\n        \n    size_delta / 1e18\n as size_delta,\n        \n    current_funding_rate / 1e18\n as funding_rate,\n        \n    current_funding_velocity / 1e18\n as funding_velocity,\n        \n    interest_rate / 1e18\n as interest_rate,\n        \n    current_funding_rate / 1e18\n * 365.25 as funding_rate_apr,\n        \n    current_funding_rate / 1e18\n * 365.25\n        + \n    interest_rate / 1e18\n as long_rate_apr,\n        \n    current_funding_rate / 1e18\n * -1 * 365.25\n        + \n    interest_rate / 1e18\n as short_rate_apr,\n        LAG(\n    size / 1e18\n, 1, 0) over (\n            partition by m.market_symbol\n            order by\n                mu.block_timestamp\n        ) as prev_size\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_market_updated_base_sepolia\" as mu\n    left join \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\" as m\n        on mu.market_id = m.id\n),\n\noi as (\n    select\n        id,\n        ts,\n        size * price as market_oi_usd,\n        LAG(\n            size * price,\n            1,\n            0\n        ) over (\n            partition by market_symbol\n            order by\n                ts asc\n        ) as prev_market_oi_usd,\n        (\n            size + skew\n        ) * price / 2 as long_oi,\n        (\n            size - skew\n        ) * price / 2 as short_oi,\n        case\n            when size * price = 0 then null\n            else ((size + skew) * price / 2) / (\n                size * price\n            )\n        end as long_oi_pct,\n        case\n            when size * price = 0 then null\n            else ((size - skew) * price / 2) / (\n                size * price\n            )\n        end as short_oi_pct\n    from\n        base\n),\n\ntotal_oi as (\n    select\n        id,\n        SUM(\n            market_oi_usd - prev_market_oi_usd\n        ) over (\n            order by\n                ts asc\n        ) as total_oi_usd\n    from\n        oi\n)\n\nselect\n    base.*,\n    ROUND(\n        oi.market_oi_usd,\n        2\n    ) as market_oi_usd,\n    ROUND(\n        total_oi.total_oi_usd,\n        2\n    ) as total_oi_usd,\n    ROUND(\n        oi.long_oi,\n        2\n    ) as long_oi,\n    ROUND(\n        oi.short_oi,\n        2\n    ) as short_oi,\n    oi.long_oi_pct,\n    oi.short_oi_pct\nfrom\n    base\ninner join oi\n    on base.id = oi.id\ninner join total_oi\n    on base.id = total_oi.id", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.275120Z", "completed_at": "2025-03-04T12:53:11.293804Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.297310Z", "completed_at": "2025-03-04T12:53:11.297321Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03457903861999512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_orders_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        oc.id,\n        oc.block_timestamp as ts,\n        oc.block_number,\n        oc.transaction_hash,\n        oc.contract,\n        oc.market_id,\n        markets.market_symbol,\n        CAST(\n            oc.account_id as text\n        ) as account_id,\n        oc.order_type,\n        \n    oc.size_delta / 1e18\n as size,\n        \n    oc.acceptable_price / 1e18\n as acceptable_price,\n        oc.settlement_time,\n        oc.expiration_time,\n        \n    LEFT(\n        REGEXP_REPLACE(\n            encode(\n                DECODE(REPLACE(oc.tracking_code, '0x', ''), 'hex'),\n                'escape'\n            ) :: text,\n            '\\\\000',\n            '',\n            'g'\n        ),\n        20\n    )\n as tracking_code,\n        oc.sender\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_committed_base_sepolia\"\n        as oc\n    left join \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\" as markets\n        on oc.market_id = markets.id\n)\n\nselect *\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.280770Z", "completed_at": "2025-03-04T12:53:11.295441Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.298962Z", "completed_at": "2025-03-04T12:53:11.298973Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027721881866455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_trades_base_sepolia", "compiled": true, "compiled_code": "with base as (\n    select\n        pos.id,\n        pos.block_timestamp as ts,\n        pos.block_number,\n        pos.transaction_hash,\n        pos.contract,\n        pos.market_id,\n        markets.market_symbol,\n        CAST(\n            pos.account_id as text\n        ) as account_id,\n        \n    fill_price / 1e18\n as fill_price,\n        \n    pnl / 1e18\n as pnl,\n        \n    accrued_funding / 1e18\n as accrued_funding,\n        \n    size_delta / 1e18\n as trade_size,\n        \n    new_size / 1e18\n as position_size,\n        \n    total_fees / 1e18\n as total_fees,\n        \n    referral_fees / 1e18\n as referral_fees,\n        \n    collected_fees / 1e18\n as collected_fees,\n        \n    settlement_reward / 1e18\n as settlement_reward,\n        \n    LEFT(\n        REGEXP_REPLACE(\n            encode(\n                DECODE(REPLACE(tracking_code, '0x', ''), 'hex'),\n                'escape'\n            ) :: text,\n            '\\\\000',\n            '',\n            'g'\n        ),\n        20\n    )\n as tracking_code,\n        pos.settler\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_order_settled_base_sepolia\" as pos\n    left join \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\" as markets\n        on pos.market_id = markets.id\n)\n\nselect\n    *,\n    ABS(\n        fill_price * trade_size\n    ) as notional_trade_size,\n    fill_price * position_size as notional_position_size,\n    total_fees - referral_fees - collected_fees - settlement_reward as lp_fees,\n    total_fees - settlement_reward as exchange_fees\nfrom\n    base", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.288001Z", "completed_at": "2025-03-04T12:53:11.296753Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.299882Z", "completed_at": "2025-03-04T12:53:11.299889Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02683568000793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_markets_base_sepolia_id__True__0.8545400fda", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.301519Z", "completed_at": "2025-03-04T12:53:11.315229Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.317600Z", "completed_at": "2025-03-04T12:53:11.317612Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022896528244018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_sepolia_block_number.5b8bc4dbc4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.323313Z", "completed_at": "2025-03-04T12:53:11.333858Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.336775Z", "completed_at": "2025-03-04T12:53:11.336786Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022960424423217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_sepolia_id.908ad69766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.328080Z", "completed_at": "2025-03-04T12:53:11.334878Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.337687Z", "completed_at": "2025-03-04T12:53:11.337697Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023163318634033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_sepolia_market_name.47a0ccb5b2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_name\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\"\nwhere market_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.318457Z", "completed_at": "2025-03-04T12:53:11.335498Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.338580Z", "completed_at": "2025-03-04T12:53:11.338587Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025559425354003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_sepolia_created_ts.ec1571d5b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.342015Z", "completed_at": "2025-03-04T12:53:11.349498Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.356074Z", "completed_at": "2025-03-04T12:53:11.356086Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020138025283813477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_markets_base_sepolia_market_symbol.e4e36d90ae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_markets_base_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.351246Z", "completed_at": "2025-03-04T12:53:11.369303Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.372202Z", "completed_at": "2025-03-04T12:53:11.372214Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025548934936523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_previous_order_expired_arbitrum_mainnet_event_name__PreviousOrderExpired.cc80b83dc0", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PreviousOrderExpired'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.363722Z", "completed_at": "2025-03-04T12:53:11.371072Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.373750Z", "completed_at": "2025-03-04T12:53:11.373761Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025699853897094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_previous_order_expired_arbitrum_mainnet_market_id__True__0.50cedb6de2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.357023Z", "completed_at": "2025-03-04T12:53:11.371650Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.374644Z", "completed_at": "2025-03-04T12:53:11.374651Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02718949317932129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_previous_order_expired_arbitrum_mainnet_account_id__True__0.a2d2b55a91", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.376191Z", "completed_at": "2025-03-04T12:53:11.385000Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.387358Z", "completed_at": "2025-03-04T12:53:11.387368Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01719975471496582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_mainnet_account_id.df728b2bac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.393308Z", "completed_at": "2025-03-04T12:53:11.404158Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.406746Z", "completed_at": "2025-03-04T12:53:11.406757Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023173809051513672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_mainnet_block_timestamp.eda2a5583d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.388254Z", "completed_at": "2025-03-04T12:53:11.404869Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.407664Z", "completed_at": "2025-03-04T12:53:11.407671Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02495098114013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_mainnet_block_number.804dd95eda", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.398214Z", "completed_at": "2025-03-04T12:53:11.406143Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.409122Z", "completed_at": "2025-03-04T12:53:11.409130Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024881601333618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_mainnet_contract.f6af6435d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.411326Z", "completed_at": "2025-03-04T12:53:11.422614Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.429153Z", "completed_at": "2025-03-04T12:53:11.429165Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02381730079650879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_mainnet_event_name.459d1c304b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.424400Z", "completed_at": "2025-03-04T12:53:11.440853Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.442973Z", "completed_at": "2025-03-04T12:53:11.442983Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023205995559692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_mainnet_id.b67d812890", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.434945Z", "completed_at": "2025-03-04T12:53:11.442319Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.445054Z", "completed_at": "2025-03-04T12:53:11.445061Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02383708953857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_mainnet_transaction_hash.2023a1cf08", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.430145Z", "completed_at": "2025-03-04T12:53:11.443866Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.446668Z", "completed_at": "2025-03-04T12:53:11.446676Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02620720863342285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_mainnet_market_id.50b3ee03b6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.447533Z", "completed_at": "2025-03-04T12:53:11.455024Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.457479Z", "completed_at": "2025-03-04T12:53:11.457488Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01598191261291504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_previous_order_expired_arbitrum_mainnet_id.3d9ee42bda", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_previous_order_expired_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.458359Z", "completed_at": "2025-03-04T12:53:11.476693Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.478362Z", "completed_at": "2025-03-04T12:53:11.478374Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02559518814086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_previous_order_expired_arbitrum_sepolia_event_name__PreviousOrderExpired.48e00fa2d6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PreviousOrderExpired'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.463957Z", "completed_at": "2025-03-04T12:53:11.479349Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.481881Z", "completed_at": "2025-03-04T12:53:11.481892Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02759861946105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_previous_order_expired_arbitrum_sepolia_account_id__True__0.923099e195", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.471908Z", "completed_at": "2025-03-04T12:53:11.480550Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.488015Z", "completed_at": "2025-03-04T12:53:11.488029Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03194928169250488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_previous_order_expired_arbitrum_sepolia_market_id__True__0.110e709d41", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.482863Z", "completed_at": "2025-03-04T12:53:11.492054Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.499299Z", "completed_at": "2025-03-04T12:53:11.499315Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02195453643798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_sepolia_account_id.b3fe07a0f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.493997Z", "completed_at": "2025-03-04T12:53:11.502385Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.514148Z", "completed_at": "2025-03-04T12:53:11.514161Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025192975997924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_sepolia_block_number.fbd3fb89cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.503081Z", "completed_at": "2025-03-04T12:53:11.516012Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.525006Z", "completed_at": "2025-03-04T12:53:11.525016Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03244280815124512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_sepolia_block_timestamp.ce344ae972", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.508490Z", "completed_at": "2025-03-04T12:53:11.517253Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.526651Z", "completed_at": "2025-03-04T12:53:11.526660Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.033426761627197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_sepolia_contract.9368b6d3c9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.517941Z", "completed_at": "2025-03-04T12:53:11.529129Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.536202Z", "completed_at": "2025-03-04T12:53:11.536213Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022913217544555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_sepolia_event_name.867c7e9c9e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.531037Z", "completed_at": "2025-03-04T12:53:11.545843Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.552267Z", "completed_at": "2025-03-04T12:53:11.552279Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02645254135131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_sepolia_id.8f347add74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.540836Z", "completed_at": "2025-03-04T12:53:11.553918Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.560960Z", "completed_at": "2025-03-04T12:53:11.560972Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03073596954345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_sepolia_market_id.bf6ab6d240", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.547261Z", "completed_at": "2025-03-04T12:53:11.560204Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.562657Z", "completed_at": "2025-03-04T12:53:11.562665Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024709224700927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_arbitrum_sepolia_transaction_hash.75fb5800ee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.555416Z", "completed_at": "2025-03-04T12:53:11.564169Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.566766Z", "completed_at": "2025-03-04T12:53:11.566774Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020267724990844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_previous_order_expired_arbitrum_sepolia_id.c4a0a04380", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_previous_order_expired_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.567636Z", "completed_at": "2025-03-04T12:53:11.582808Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.589545Z", "completed_at": "2025-03-04T12:53:11.589558Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02778172492980957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_previous_order_expired_base_mainnet_event_name__PreviousOrderExpired.1769035769", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PreviousOrderExpired'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.575336Z", "completed_at": "2025-03-04T12:53:11.588963Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.596024Z", "completed_at": "2025-03-04T12:53:11.596033Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030032873153686523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_previous_order_expired_base_mainnet_account_id__True__0.0f31e1095c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.583416Z", "completed_at": "2025-03-04T12:53:11.595274Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.597795Z", "completed_at": "2025-03-04T12:53:11.597802Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0253753662109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_previous_order_expired_base_mainnet_market_id__True__0.59d73bf004", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.590600Z", "completed_at": "2025-03-04T12:53:11.599325Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.601967Z", "completed_at": "2025-03-04T12:53:11.601975Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01989293098449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_mainnet_account_id.e7aae917c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.605565Z", "completed_at": "2025-03-04T12:53:11.623933Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.625947Z", "completed_at": "2025-03-04T12:53:11.625959Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02611088752746582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_mainnet_block_number.89b98bd9a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.611230Z", "completed_at": "2025-03-04T12:53:11.625232Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.632303Z", "completed_at": "2025-03-04T12:53:11.632312Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031152725219726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_mainnet_block_timestamp.da7b51b840", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.617223Z", "completed_at": "2025-03-04T12:53:11.631585Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.634096Z", "completed_at": "2025-03-04T12:53:11.634104Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030766725540161133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_mainnet_contract.bd6be0f02f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.626940Z", "completed_at": "2025-03-04T12:53:11.635003Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.637667Z", "completed_at": "2025-03-04T12:53:11.637676Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02139592170715332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_mainnet_event_name.473a967d1d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.641616Z", "completed_at": "2025-03-04T12:53:11.658081Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.664068Z", "completed_at": "2025-03-04T12:53:11.664082Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027951478958129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_mainnet_id.627b6b6b63", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.652705Z", "completed_at": "2025-03-04T12:53:11.663287Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.665726Z", "completed_at": "2025-03-04T12:53:11.665737Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026093721389770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_mainnet_transaction_hash.573aaff2f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.647963Z", "completed_at": "2025-03-04T12:53:11.664983Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.667917Z", "completed_at": "2025-03-04T12:53:11.667927Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02950596809387207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_mainnet_market_id.8bf9effd5e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.659055Z", "completed_at": "2025-03-04T12:53:11.666585Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.669480Z", "completed_at": "2025-03-04T12:53:11.669490Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022284507751464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_previous_order_expired_base_mainnet_id.220846a37a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_previous_order_expired_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.683228Z", "completed_at": "2025-03-04T12:53:11.698195Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.699848Z", "completed_at": "2025-03-04T12:53:11.699861Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028309345245361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_previous_order_expired_base_sepolia_account_id__True__0.b2f7060dcd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.675422Z", "completed_at": "2025-03-04T12:53:11.698944Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.701433Z", "completed_at": "2025-03-04T12:53:11.701441Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03122258186340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_previous_order_expired_base_sepolia_event_name__PreviousOrderExpired.e124d4bad8", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'PreviousOrderExpired'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.688777Z", "completed_at": "2025-03-04T12:53:11.700824Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.703626Z", "completed_at": "2025-03-04T12:53:11.703634Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03013300895690918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_previous_order_expired_base_sepolia_market_id__True__0.b23f5ced4b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.693590Z", "completed_at": "2025-03-04T12:53:11.702301Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.705184Z", "completed_at": "2025-03-04T12:53:11.705192Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030487775802612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_sepolia_account_id.e2bf90a189", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.711149Z", "completed_at": "2025-03-04T12:53:11.728920Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.734903Z", "completed_at": "2025-03-04T12:53:11.734917Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02900218963623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_sepolia_block_number.1ff7a5705c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.717007Z", "completed_at": "2025-03-04T12:53:11.734115Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.736095Z", "completed_at": "2025-03-04T12:53:11.736104Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028821945190429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_sepolia_block_timestamp.4b41a82d13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.729577Z", "completed_at": "2025-03-04T12:53:11.737728Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.740254Z", "completed_at": "2025-03-04T12:53:11.740261Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02982926368713379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_sepolia_event_name.daad0addfa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.722413Z", "completed_at": "2025-03-04T12:53:11.738359Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.741134Z", "completed_at": "2025-03-04T12:53:11.741142Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03193497657775879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_sepolia_contract.b0da841bdf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.745211Z", "completed_at": "2025-03-04T12:53:11.757216Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.767542Z", "completed_at": "2025-03-04T12:53:11.767553Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028059005737304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_sepolia_id.480d04976b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.751410Z", "completed_at": "2025-03-04T12:53:11.762680Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.768607Z", "completed_at": "2025-03-04T12:53:11.768615Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026678085327148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_sepolia_market_id.17181fe5f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.757949Z", "completed_at": "2025-03-04T12:53:11.769540Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.772246Z", "completed_at": "2025-03-04T12:53:11.772253Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022355079650878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_previous_order_expired_base_sepolia_transaction_hash.e1f21d4fd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.763244Z", "completed_at": "2025-03-04T12:53:11.770873Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.773806Z", "completed_at": "2025-03-04T12:53:11.773813Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023124217987060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_previous_order_expired_base_sepolia_id.38211e4c5d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_previous_order_expired_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.778492Z", "completed_at": "2025-03-04T12:53:11.801188Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.802861Z", "completed_at": "2025-03-04T12:53:11.802873Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02986907958984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_markets_arbitrum_mainnet_id__True__0.fc6e00e4d7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_markets_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.786045Z", "completed_at": "2025-03-04T12:53:11.801963Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.804454Z", "completed_at": "2025-03-04T12:53:11.804484Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029912710189819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_arbitrum_mainnet_block_number.8e6492baa4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_markets_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.796775Z", "completed_at": "2025-03-04T12:53:11.803832Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.806632Z", "completed_at": "2025-03-04T12:53:11.806640Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021349191665649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_arbitrum_mainnet_id.0f47b50907", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_markets_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.792067Z", "completed_at": "2025-03-04T12:53:11.805322Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.808217Z", "completed_at": "2025-03-04T12:53:11.808224Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030450820922851562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_arbitrum_mainnet_created_ts.d20eea3054", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_markets_arbitrum_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.814189Z", "completed_at": "2025-03-04T12:53:11.836216Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.837862Z", "completed_at": "2025-03-04T12:53:11.837878Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02886962890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_arbitrum_mainnet_token_address.19fe19c198", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_address\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_markets_arbitrum_mainnet\"\nwhere token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.819783Z", "completed_at": "2025-03-04T12:53:11.837071Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.838940Z", "completed_at": "2025-03-04T12:53:11.838951Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028634071350097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_markets_arbitrum_sepolia_id__True__0.181ee7b620", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_markets_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.825394Z", "completed_at": "2025-03-04T12:53:11.839843Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.842423Z", "completed_at": "2025-03-04T12:53:11.842434Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03022313117980957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_arbitrum_sepolia_block_number.50ad9758fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_markets_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.831967Z", "completed_at": "2025-03-04T12:53:11.840455Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.843322Z", "completed_at": "2025-03-04T12:53:11.843329Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0298464298248291, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_arbitrum_sepolia_created_ts.d5e3080b9d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_markets_arbitrum_sepolia\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.854379Z", "completed_at": "2025-03-04T12:53:11.869631Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.871224Z", "completed_at": "2025-03-04T12:53:11.871239Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026500701904296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_arbitrum_sepolia_token_address.1b182f5b09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_address\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_markets_arbitrum_sepolia\"\nwhere token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.849279Z", "completed_at": "2025-03-04T12:53:11.870330Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.872776Z", "completed_at": "2025-03-04T12:53:11.872787Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02869272232055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_arbitrum_sepolia_id.8e20da3df9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_markets_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.865172Z", "completed_at": "2025-03-04T12:53:11.872133Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.874961Z", "completed_at": "2025-03-04T12:53:11.874968Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026394367218017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_base_mainnet_block_number.dd426b1fb6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_markets_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.860361Z", "completed_at": "2025-03-04T12:53:11.874260Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.877158Z", "completed_at": "2025-03-04T12:53:11.877168Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029250383377075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_markets_base_mainnet_id__True__0.51d4e415e8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_spot_markets_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.881848Z", "completed_at": "2025-03-04T12:53:11.899698Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.906072Z", "completed_at": "2025-03-04T12:53:11.906085Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029709339141845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_base_mainnet_created_ts.746ff1f9ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_markets_base_mainnet\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.890199Z", "completed_at": "2025-03-04T12:53:11.905200Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.907866Z", "completed_at": "2025-03-04T12:53:11.907877Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02924060821533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_base_mainnet_id.b85cc0ba41", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_markets_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.895442Z", "completed_at": "2025-03-04T12:53:11.907187Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.909615Z", "completed_at": "2025-03-04T12:53:11.909624Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029083967208862305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_base_mainnet_token_address.454ffd144a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_address\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_markets_base_mainnet\"\nwhere token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.900640Z", "completed_at": "2025-03-04T12:53:11.910457Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.913082Z", "completed_at": "2025-03-04T12:53:11.913090Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024255752563476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_markets_base_sepolia_id__True__0.f6b3a1dac3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_spot_markets_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.917093Z", "completed_at": "2025-03-04T12:53:11.935076Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.941797Z", "completed_at": "2025-03-04T12:53:11.941810Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03018498420715332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_base_sepolia_block_number.25cd7e84c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_markets_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.923344Z", "completed_at": "2025-03-04T12:53:11.940402Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.942853Z", "completed_at": "2025-03-04T12:53:11.942861Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028987884521484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_base_sepolia_created_ts.69423c5ddb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_markets_base_sepolia\"\nwhere created_ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.927880Z", "completed_at": "2025-03-04T12:53:11.941150Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.943798Z", "completed_at": "2025-03-04T12:53:11.943806Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028736114501953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_base_sepolia_id.a355928e0f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_markets_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.936086Z", "completed_at": "2025-03-04T12:53:11.944696Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.947351Z", "completed_at": "2025-03-04T12:53:11.947359Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02477574348449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_markets_base_sepolia_token_address.af639aa1d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_address\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_markets_base_sepolia\"\nwhere token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.953258Z", "completed_at": "2025-03-04T12:53:11.968483Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.974854Z", "completed_at": "2025-03-04T12:53:11.974867Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026720762252807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_atomics_arbitrum_mainnet_synth_market_id__True__0.a856a28abf", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.958389Z", "completed_at": "2025-03-04T12:53:11.969122Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.975813Z", "completed_at": "2025-03-04T12:53:11.975821Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026963472366333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_mainnet_amount.2a29d582dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.962872Z", "completed_at": "2025-03-04T12:53:11.974272Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.976803Z", "completed_at": "2025-03-04T12:53:11.976811Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027329444885253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_mainnet_block_number.4090627930", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.969807Z", "completed_at": "2025-03-04T12:53:11.978346Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:11.981056Z", "completed_at": "2025-03-04T12:53:11.981063Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028522491455078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_mainnet_id.58d62fa75b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.988007Z", "completed_at": "2025-03-04T12:53:12.007752Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.009877Z", "completed_at": "2025-03-04T12:53:12.009891Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029687881469726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_mainnet_price.8c5fac0d4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.993429Z", "completed_at": "2025-03-04T12:53:12.008610Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.010850Z", "completed_at": "2025-03-04T12:53:12.010858Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028990983963012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_mainnet_referrer.8f3d6e7ca8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:11.997839Z", "completed_at": "2025-03-04T12:53:12.009238Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.012251Z", "completed_at": "2025-03-04T12:53:12.012258Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029758214950561523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_mainnet_synth_market_id.3ce730fbe0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.003421Z", "completed_at": "2025-03-04T12:53:12.011667Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.014527Z", "completed_at": "2025-03-04T12:53:12.014534Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02198004722595215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_mainnet_ts.8faded4450", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.021072Z", "completed_at": "2025-03-04T12:53:12.042412Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.044106Z", "completed_at": "2025-03-04T12:53:12.044117Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028161287307739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_mainnet_tx_hash.fc4480c793", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tx_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere tx_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.032953Z", "completed_at": "2025-03-04T12:53:12.043445Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.045674Z", "completed_at": "2025-03-04T12:53:12.045682Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027762889862060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_atomics_arbitrum_sepolia_synth_market_id__True__0.783d66767d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.025993Z", "completed_at": "2025-03-04T12:53:12.045045Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.047825Z", "completed_at": "2025-03-04T12:53:12.047833Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03117656707763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_spot_atomics_arbitrum_mainnet_id.103cfc1fee", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.037833Z", "completed_at": "2025-03-04T12:53:12.046520Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.049312Z", "completed_at": "2025-03-04T12:53:12.049319Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029541015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_sepolia_amount.08628c0e8d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.055294Z", "completed_at": "2025-03-04T12:53:12.070829Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.078727Z", "completed_at": "2025-03-04T12:53:12.078741Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02867412567138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_sepolia_block_number.8b344f291a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.060988Z", "completed_at": "2025-03-04T12:53:12.076867Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.080457Z", "completed_at": "2025-03-04T12:53:12.080499Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029047250747680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_sepolia_id.491922c0de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.066274Z", "completed_at": "2025-03-04T12:53:12.079915Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.082827Z", "completed_at": "2025-03-04T12:53:12.082835Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029450178146362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_sepolia_price.685e079a35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.071585Z", "completed_at": "2025-03-04T12:53:12.082224Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.084993Z", "completed_at": "2025-03-04T12:53:12.085000Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030415773391723633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_sepolia_referrer.ab47b8a4dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.089581Z", "completed_at": "2025-03-04T12:53:12.105790Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.111765Z", "completed_at": "2025-03-04T12:53:12.111780Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027579307556152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_sepolia_synth_market_id.b6c3e19705", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.096001Z", "completed_at": "2025-03-04T12:53:12.111004Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.113515Z", "completed_at": "2025-03-04T12:53:12.113523Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027109146118164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_sepolia_ts.892f2a57c7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.101355Z", "completed_at": "2025-03-04T12:53:12.112872Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.115692Z", "completed_at": "2025-03-04T12:53:12.115700Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027495145797729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_arbitrum_sepolia_tx_hash.e8c13a9755", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tx_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere tx_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.106597Z", "completed_at": "2025-03-04T12:53:12.114352Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.117237Z", "completed_at": "2025-03-04T12:53:12.117245Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022716999053955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_spot_atomics_arbitrum_sepolia_id.ac19d3d198", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.123214Z", "completed_at": "2025-03-04T12:53:12.141227Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.147227Z", "completed_at": "2025-03-04T12:53:12.147240Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0292513370513916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_atomics_base_mainnet_synth_market_id__True__0.09c446094a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.129180Z", "completed_at": "2025-03-04T12:53:12.146501Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.148923Z", "completed_at": "2025-03-04T12:53:12.148931Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029627561569213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_mainnet_amount.f9fe9bd5d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.136756Z", "completed_at": "2025-03-04T12:53:12.148236Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.151196Z", "completed_at": "2025-03-04T12:53:12.151204Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029935836791992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_mainnet_block_number.f27d399305", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.141981Z", "completed_at": "2025-03-04T12:53:12.150532Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.153445Z", "completed_at": "2025-03-04T12:53:12.153453Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030965328216552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_mainnet_id.627bbbf01f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.158155Z", "completed_at": "2025-03-04T12:53:12.174858Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.183019Z", "completed_at": "2025-03-04T12:53:12.183032Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030397653579711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_mainnet_price.425623addf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.164748Z", "completed_at": "2025-03-04T12:53:12.180848Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.184212Z", "completed_at": "2025-03-04T12:53:12.184222Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02929997444152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_mainnet_referrer.ab87d661dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.170321Z", "completed_at": "2025-03-04T12:53:12.185072Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.187826Z", "completed_at": "2025-03-04T12:53:12.187836Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031000137329101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_mainnet_synth_market_id.6f09447421", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.175677Z", "completed_at": "2025-03-04T12:53:12.186569Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.189356Z", "completed_at": "2025-03-04T12:53:12.189366Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026154041290283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_mainnet_ts.8e16294c15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.194027Z", "completed_at": "2025-03-04T12:53:12.210871Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.216895Z", "completed_at": "2025-03-04T12:53:12.216909Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028343677520751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_mainnet_tx_hash.95b2db0403", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tx_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere tx_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.199674Z", "completed_at": "2025-03-04T12:53:12.211561Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.217948Z", "completed_at": "2025-03-04T12:53:12.217959Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02782154083251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_spot_atomics_base_mainnet_id.43d4b7c878", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.205923Z", "completed_at": "2025-03-04T12:53:12.218811Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.221569Z", "completed_at": "2025-03-04T12:53:12.221580Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028301000595092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_atomics_base_sepolia_synth_market_id__True__0.391b470dd2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.212136Z", "completed_at": "2025-03-04T12:53:12.220955Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.223758Z", "completed_at": "2025-03-04T12:53:12.223765Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025165081024169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_sepolia_amount.81264c756d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.228198Z", "completed_at": "2025-03-04T12:53:12.242507Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.253312Z", "completed_at": "2025-03-04T12:53:12.253326Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.031036376953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_sepolia_block_number.16d75a4323", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.233088Z", "completed_at": "2025-03-04T12:53:12.252686Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.255108Z", "completed_at": "2025-03-04T12:53:12.255116Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03212380409240723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_sepolia_id.dfc0db9ed4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.243123Z", "completed_at": "2025-03-04T12:53:12.254479Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.257333Z", "completed_at": "2025-03-04T12:53:12.257341Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02991628646850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_sepolia_price.ce30d003ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.247897Z", "completed_at": "2025-03-04T12:53:12.256061Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.258891Z", "completed_at": "2025-03-04T12:53:12.258899Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018839359283447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_sepolia_referrer.7533de1c2b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referrer\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere referrer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.264905Z", "completed_at": "2025-03-04T12:53:12.281050Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.288863Z", "completed_at": "2025-03-04T12:53:12.288876Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029253244400024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_sepolia_synth_market_id.e8f636df14", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.270657Z", "completed_at": "2025-03-04T12:53:12.286747Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.290545Z", "completed_at": "2025-03-04T12:53:12.290555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029561758041381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_sepolia_ts.4bca6422cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.276257Z", "completed_at": "2025-03-04T12:53:12.289969Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.292895Z", "completed_at": "2025-03-04T12:53:12.292902Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029952526092529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_atomics_base_sepolia_tx_hash.6d969998c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tx_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere tx_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.281671Z", "completed_at": "2025-03-04T12:53:12.292193Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.295082Z", "completed_at": "2025-03-04T12:53:12.295090Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030922651290893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_spot_atomics_base_sepolia_id.6c8ed0bc2a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.299840Z", "completed_at": "2025-03-04T12:53:12.317811Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.324197Z", "completed_at": "2025-03-04T12:53:12.324213Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029923439025878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_synth_supply_arbitrum_mainnet", "compiled": true, "compiled_code": "with wrapper as (\n    select\n        ts,\n        block_number,\n        synth_market_id,\n        amount_wrapped as change_amount\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\n),\n\natomics as (\n    select\n        ts,\n        block_number,\n        synth_market_id,\n        amount as change_amount\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\n    union all\n    select\n        ts,\n        block_number,\n        0 as synth_market_id,\n        amount * price * -1 as change_amount\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_atomics_arbitrum_mainnet\"\n),\n\nusd_changes as (\n    select\n        block_timestamp as ts,\n        block_number,\n        0 as synth_market_id,\n        \n    amount / 1e18\n as change_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_minted_arbitrum_mainnet\"\n    union all\n    select\n        block_timestamp as ts,\n        block_number,\n        0 as synth_market_id,\n        -1 * \n    amount / 1e18\n as change_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_usd_burned_arbitrum_mainnet\"\n),\n\nall_changes as (\n    select *\n    from\n        wrapper\n    union all\n    select *\n    from\n        atomics\n    union all\n    select *\n    from\n        usd_changes\n)\n\nselect\n    ts,\n    block_number,\n    synth_market_id,\n    SUM(change_amount) over (\n        partition by synth_market_id\n        order by\n            ts,\n            block_number\n    ) as supply\nfrom\n    all_changes", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_synth_supply_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.306995Z", "completed_at": "2025-03-04T12:53:12.323415Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.325951Z", "completed_at": "2025-03-04T12:53:12.325960Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029414653778076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_wrapper_arbitrum_mainnet_synth_market_id__True__0.f6decdacf4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.313129Z", "completed_at": "2025-03-04T12:53:12.325354Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.328129Z", "completed_at": "2025-03-04T12:53:12.328137Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02964162826538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_mainnet_amount_wrapped.f91b4eedc8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_wrapped\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\nwhere amount_wrapped is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.318614Z", "completed_at": "2025-03-04T12:53:12.326901Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.330006Z", "completed_at": "2025-03-04T12:53:12.330014Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024590492248535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_mainnet_block_number.d1c04e4c89", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.336001Z", "completed_at": "2025-03-04T12:53:12.353663Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.360121Z", "completed_at": "2025-03-04T12:53:12.360135Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02938985824584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_mainnet_id.4d99f875a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.341714Z", "completed_at": "2025-03-04T12:53:12.359338Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.361890Z", "completed_at": "2025-03-04T12:53:12.361898Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029820919036865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_mainnet_synth_market_id.f0195bb21f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.349105Z", "completed_at": "2025-03-04T12:53:12.361273Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.364116Z", "completed_at": "2025-03-04T12:53:12.364124Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030098676681518555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_mainnet_ts.91d9f782bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.354442Z", "completed_at": "2025-03-04T12:53:12.362838Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.365721Z", "completed_at": "2025-03-04T12:53:12.365729Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030482053756713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_mainnet_tx_hash.4401566d1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tx_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\nwhere tx_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.378121Z", "completed_at": "2025-03-04T12:53:12.397120Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.398738Z", "completed_at": "2025-03-04T12:53:12.398751Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030909299850463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_synth_supply_arbitrum_sepolia", "compiled": true, "compiled_code": "with wrapper as (\n    select\n        ts,\n        block_number,\n        synth_market_id,\n        amount_wrapped as change_amount\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\n),\n\natomics as (\n    select\n        ts,\n        block_number,\n        synth_market_id,\n        amount as change_amount\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\n    union all\n    select\n        ts,\n        block_number,\n        0 as synth_market_id,\n        amount * price * -1 as change_amount\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_atomics_arbitrum_sepolia\"\n),\n\nusd_changes as (\n    select\n        block_timestamp as ts,\n        block_number,\n        0 as synth_market_id,\n        \n    amount / 1e18\n as change_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_minted_arbitrum_sepolia\"\n    union all\n    select\n        block_timestamp as ts,\n        block_number,\n        0 as synth_market_id,\n        -1 * \n    amount / 1e18\n as change_amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_usd_burned_arbitrum_sepolia\"\n),\n\nall_changes as (\n    select *\n    from\n        wrapper\n    union all\n    select *\n    from\n        atomics\n    union all\n    select *\n    from\n        usd_changes\n)\n\nselect\n    ts,\n    block_number,\n    synth_market_id,\n    SUM(change_amount) over (\n        partition by synth_market_id\n        order by\n            ts,\n            block_number\n    ) as supply\nfrom\n    all_changes", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_synth_supply_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.372105Z", "completed_at": "2025-03-04T12:53:12.397749Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.400882Z", "completed_at": "2025-03-04T12:53:12.400891Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03438067436218262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_spot_wrapper_arbitrum_mainnet_id.2107017636", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_spot_wrapper_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.392222Z", "completed_at": "2025-03-04T12:53:12.399707Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.402453Z", "completed_at": "2025-03-04T12:53:12.402490Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031183719635009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_sepolia_amount_wrapped.77a6a551fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_wrapped\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\nwhere amount_wrapped is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.384552Z", "completed_at": "2025-03-04T12:53:12.400243Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.403661Z", "completed_at": "2025-03-04T12:53:12.403671Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03360247611999512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_wrapper_arbitrum_sepolia_synth_market_id__True__0.38952f7e02", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.410351Z", "completed_at": "2025-03-04T12:53:12.426926Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.433942Z", "completed_at": "2025-03-04T12:53:12.433955Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028903722763061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_sepolia_block_number.11ac634180", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.422096Z", "completed_at": "2025-03-04T12:53:12.432660Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.435036Z", "completed_at": "2025-03-04T12:53:12.435044Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026643753051757812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_sepolia_synth_market_id.73a4297f2a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.416978Z", "completed_at": "2025-03-04T12:53:12.433351Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.436516Z", "completed_at": "2025-03-04T12:53:12.436524Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029381990432739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_sepolia_id.e4af3a2e01", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.427584Z", "completed_at": "2025-03-04T12:53:12.435897Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.438869Z", "completed_at": "2025-03-04T12:53:12.438879Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02987194061279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_sepolia_ts.cac57bdf22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.445613Z", "completed_at": "2025-03-04T12:53:12.469400Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.471800Z", "completed_at": "2025-03-04T12:53:12.471813Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03154325485229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_arbitrum_sepolia_tx_hash.bc4c1e86f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tx_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\nwhere tx_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.453217Z", "completed_at": "2025-03-04T12:53:12.470238Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.473377Z", "completed_at": "2025-03-04T12:53:12.473386Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.032384395599365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_spot_wrapper_arbitrum_sepolia_id.ef7877efab", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_spot_wrapper_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.458646Z", "completed_at": "2025-03-04T12:53:12.471202Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.474291Z", "completed_at": "2025-03-04T12:53:12.474299Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03184819221496582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_synth_supply_base_mainnet", "compiled": true, "compiled_code": "with wrapper as (\n    select\n        ts,\n        block_number,\n        synth_market_id,\n        amount_wrapped as change_amount\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\n),\n\natomics as (\n    select\n        ts,\n        block_number,\n        synth_market_id,\n        amount as change_amount\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\n    union all\n    select\n        ts,\n        block_number,\n        0 as synth_market_id,\n        amount * price * -1 as change_amount\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_spot_atomics_base_mainnet\"\n),\n\nusd_changes as (\n    select\n        block_timestamp as ts,\n        block_number,\n        0 as synth_market_id,\n        \n    amount / 1e18\n as change_amount\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_minted_base_mainnet\"\n    union all\n    select\n        block_timestamp as ts,\n        block_number,\n        0 as synth_market_id,\n        -1 * \n    amount / 1e18\n as change_amount\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_usd_burned_base_mainnet\"\n),\n\nall_changes as (\n    select *\n    from\n        wrapper\n    union all\n    select *\n    from\n        atomics\n    union all\n    select *\n    from\n        usd_changes\n)\n\nselect\n    ts,\n    block_number,\n    synth_market_id,\n    SUM(change_amount) over (\n        partition by synth_market_id\n        order by\n            ts,\n            block_number\n    ) as supply\nfrom\n    all_changes", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_synth_supply_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.464397Z", "completed_at": "2025-03-04T12:53:12.472790Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.475911Z", "completed_at": "2025-03-04T12:53:12.475919Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03164315223693848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_wrapper_base_mainnet_synth_market_id__True__0.69216a8846", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.483361Z", "completed_at": "2025-03-04T12:53:12.505862Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.508794Z", "completed_at": "2025-03-04T12:53:12.508806Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030620574951171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_mainnet_amount_wrapped.957e1a74f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_wrapped\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\nwhere amount_wrapped is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.494089Z", "completed_at": "2025-03-04T12:53:12.507037Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.509763Z", "completed_at": "2025-03-04T12:53:12.509773Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029540061950683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_mainnet_id.b1091139a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.501296Z", "completed_at": "2025-03-04T12:53:12.507628Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.510659Z", "completed_at": "2025-03-04T12:53:12.510667Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029180049896240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_mainnet_synth_market_id.4d8b77f2da", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.489336Z", "completed_at": "2025-03-04T12:53:12.508170Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.511533Z", "completed_at": "2025-03-04T12:53:12.511544Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03194117546081543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_mainnet_block_number.9220599356", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.525725Z", "completed_at": "2025-03-04T12:53:12.541084Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.542121Z", "completed_at": "2025-03-04T12:53:12.542134Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026412248611450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_mainnet_tx_hash.eb92a57d59", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tx_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\nwhere tx_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.530737Z", "completed_at": "2025-03-04T12:53:12.543936Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.546330Z", "completed_at": "2025-03-04T12:53:12.546339Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029644489288330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_spot_wrapper_base_mainnet_id.c51e21223d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.520408Z", "completed_at": "2025-03-04T12:53:12.544500Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.547240Z", "completed_at": "2025-03-04T12:53:12.547250Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03220200538635254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_mainnet_ts.b646319cc9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_spot_wrapper_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.535351Z", "completed_at": "2025-03-04T12:53:12.545064Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.548161Z", "completed_at": "2025-03-04T12:53:12.548171Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030856847763061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_synth_supply_base_sepolia", "compiled": true, "compiled_code": "with wrapper as (\n    select\n        ts,\n        block_number,\n        synth_market_id,\n        amount_wrapped as change_amount\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\n),\n\natomics as (\n    select\n        ts,\n        block_number,\n        synth_market_id,\n        amount as change_amount\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\n    union all\n    select\n        ts,\n        block_number,\n        0 as synth_market_id,\n        amount * price * -1 as change_amount\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_spot_atomics_base_sepolia\"\n),\n\nusd_changes as (\n    select\n        block_timestamp as ts,\n        block_number,\n        0 as synth_market_id,\n        \n    amount / 1e18\n as change_amount\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_minted_base_sepolia\"\n    union all\n    select\n        block_timestamp as ts,\n        block_number,\n        0 as synth_market_id,\n        -1 * \n    amount / 1e18\n as change_amount\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_usd_burned_base_sepolia\"\n),\n\nall_changes as (\n    select *\n    from\n        wrapper\n    union all\n    select *\n    from\n        atomics\n    union all\n    select *\n    from\n        usd_changes\n)\n\nselect\n    ts,\n    block_number,\n    synth_market_id,\n    SUM(change_amount) over (\n        partition by synth_market_id\n        order by\n            ts,\n            block_number\n    ) as supply\nfrom\n    all_changes", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_synth_supply_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.551814Z", "completed_at": "2025-03-04T12:53:12.563412Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.574717Z", "completed_at": "2025-03-04T12:53:12.574732Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029233694076538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_spot_wrapper_base_sepolia_synth_market_id__True__0.f4eedf4f3f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.564612Z", "completed_at": "2025-03-04T12:53:12.581121Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.583307Z", "completed_at": "2025-03-04T12:53:12.583319Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02351236343383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_sepolia_amount_wrapped.447890a6f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_wrapped\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\nwhere amount_wrapped is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.569772Z", "completed_at": "2025-03-04T12:53:12.581846Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.584298Z", "completed_at": "2025-03-04T12:53:12.584306Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02358269691467285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_sepolia_block_number.05149fa391", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.575877Z", "completed_at": "2025-03-04T12:53:12.585192Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.587856Z", "completed_at": "2025-03-04T12:53:12.587864Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0264739990234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_sepolia_id.6458cf0796", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.591223Z", "completed_at": "2025-03-04T12:53:12.608947Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.612522Z", "completed_at": "2025-03-04T12:53:12.612536Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026897430419921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_sepolia_synth_market_id.54687d51aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.598830Z", "completed_at": "2025-03-04T12:53:12.613717Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.620425Z", "completed_at": "2025-03-04T12:53:12.620436Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03125810623168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_sepolia_ts.8708b13a31", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.603828Z", "completed_at": "2025-03-04T12:53:12.619107Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.621528Z", "completed_at": "2025-03-04T12:53:12.621536Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031668901443481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_spot_wrapper_base_sepolia_tx_hash.0df62cff0d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tx_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\nwhere tx_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.614291Z", "completed_at": "2025-03-04T12:53:12.623040Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.625567Z", "completed_at": "2025-03-04T12:53:12.625576Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02766895294189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_spot_wrapper_base_sepolia_id.3a2fb8ee86", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_spot_wrapper_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.627711Z", "completed_at": "2025-03-04T12:53:12.635995Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.647256Z", "completed_at": "2025-03-04T12:53:12.647270Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02499699592590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_arbitrum_mainnet_amount__True__0.debd774d66", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.641994Z", "completed_at": "2025-03-04T12:53:12.653693Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.656007Z", "completed_at": "2025-03-04T12:53:12.656019Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029092073440551758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_mainnet_amount.5d537baae4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.636621Z", "completed_at": "2025-03-04T12:53:12.654452Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.657565Z", "completed_at": "2025-03-04T12:53:12.657576Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031263113021850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_arbitrum_mainnet_pool_id__True__0.071c26474c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.648582Z", "completed_at": "2025-03-04T12:53:12.656927Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.659812Z", "completed_at": "2025-03-04T12:53:12.659823Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0245816707611084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_mainnet_collateral_type.d5a70bb05b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.663963Z", "completed_at": "2025-03-04T12:53:12.678933Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.689398Z", "completed_at": "2025-03-04T12:53:12.689413Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03114461898803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_mainnet_distributor.78e1e8f668", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.673650Z", "completed_at": "2025-03-04T12:53:12.688821Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.691296Z", "completed_at": "2025-03-04T12:53:12.691305Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029428958892822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_mainnet_pool_id.ed851987e8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.679616Z", "completed_at": "2025-03-04T12:53:12.690672Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.693527Z", "completed_at": "2025-03-04T12:53:12.693535Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03034210205078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_mainnet_token_symbol.0fd511c8cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.684285Z", "completed_at": "2025-03-04T12:53:12.692863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.695752Z", "completed_at": "2025-03-04T12:53:12.695760Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023647308349609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_mainnet_ts.19a49fa7ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.700359Z", "completed_at": "2025-03-04T12:53:12.723622Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.725812Z", "completed_at": "2025-03-04T12:53:12.725824Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03086233139038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_collateral_modified_arbitrum_mainnet_event_name__CollateralModified.250d86c2ff", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'CollateralModified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.706788Z", "completed_at": "2025-03-04T12:53:12.724527Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.726806Z", "completed_at": "2025-03-04T12:53:12.726814Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02964162826538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_modified_arbitrum_mainnet_synth_market_id__True__0.574a94c14b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.712283Z", "completed_at": "2025-03-04T12:53:12.725127Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.728276Z", "completed_at": "2025-03-04T12:53:12.728286Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029221534729003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_mainnet_block_number.1f44ed82ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.719141Z", "completed_at": "2025-03-04T12:53:12.727693Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.730589Z", "completed_at": "2025-03-04T12:53:12.730597Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025291919708251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_mainnet_block_timestamp.46d64b9bc1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.742078Z", "completed_at": "2025-03-04T12:53:12.757138Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.758712Z", "completed_at": "2025-03-04T12:53:12.758724Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026058673858642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_mainnet_event_name.45d8e8ebbb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.737188Z", "completed_at": "2025-03-04T12:53:12.757804Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.760313Z", "completed_at": "2025-03-04T12:53:12.760321Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03036975860595703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_mainnet_contract.c3c6e86c96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.747812Z", "completed_at": "2025-03-04T12:53:12.759689Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.764746Z", "completed_at": "2025-03-04T12:53:12.764757Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03072834014892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_mainnet_id.1b5f600118", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.752621Z", "completed_at": "2025-03-04T12:53:12.763236Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.766292Z", "completed_at": "2025-03-04T12:53:12.766303Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03043985366821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_mainnet_sender.66d35dd8ca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.772218Z", "completed_at": "2025-03-04T12:53:12.787866Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.793960Z", "completed_at": "2025-03-04T12:53:12.793973Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026932716369628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_mainnet_synth_market_id.b88231df26", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.777865Z", "completed_at": "2025-03-04T12:53:12.793151Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.795728Z", "completed_at": "2025-03-04T12:53:12.795739Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027329683303833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_mainnet_transaction_hash.918a7da077", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.783378Z", "completed_at": "2025-03-04T12:53:12.794991Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.798246Z", "completed_at": "2025-03-04T12:53:12.798255Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027981042861938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_collateral_modified_arbitrum_mainnet_id.bd707e28f4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_modified_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.788576Z", "completed_at": "2025-03-04T12:53:12.797298Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.800524Z", "completed_at": "2025-03-04T12:53:12.800531Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02903151512145996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_collateral_modified_arbitrum_sepolia_event_name__CollateralModified.4bfeebcda9", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'CollateralModified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.805308Z", "completed_at": "2025-03-04T12:53:12.821126Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.831444Z", "completed_at": "2025-03-04T12:53:12.831478Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031783103942871094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_modified_arbitrum_sepolia_synth_market_id__True__0.8692b0954c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.812602Z", "completed_at": "2025-03-04T12:53:12.832527Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.835371Z", "completed_at": "2025-03-04T12:53:12.835380Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03341269493103027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_sepolia_block_number.038db03a29", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.821759Z", "completed_at": "2025-03-04T12:53:12.834057Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.836960Z", "completed_at": "2025-03-04T12:53:12.836971Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03301501274108887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_sepolia_block_timestamp.3899d28cda", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.826849Z", "completed_at": "2025-03-04T12:53:12.834816Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.837856Z", "completed_at": "2025-03-04T12:53:12.837864Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02676844596862793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_sepolia_contract.b02eea7590", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.841998Z", "completed_at": "2025-03-04T12:53:12.850401Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.866504Z", "completed_at": "2025-03-04T12:53:12.866519Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030366897583007812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_sepolia_event_name.09d14b4d4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.855600Z", "completed_at": "2025-03-04T12:53:12.867899Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.870553Z", "completed_at": "2025-03-04T12:53:12.870561Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023707151412963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_sepolia_sender.490b67952f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.851038Z", "completed_at": "2025-03-04T12:53:12.869353Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.872090Z", "completed_at": "2025-03-04T12:53:12.872097Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030844926834106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_sepolia_id.8f1c27919f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.860070Z", "completed_at": "2025-03-04T12:53:12.869967Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.872961Z", "completed_at": "2025-03-04T12:53:12.872971Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0252685546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_sepolia_synth_market_id.7b6c2e9ecd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.877104Z", "completed_at": "2025-03-04T12:53:12.885457Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.900161Z", "completed_at": "2025-03-04T12:53:12.900175Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028893232345581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_arbitrum_sepolia_transaction_hash.bd038969b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.895343Z", "completed_at": "2025-03-04T12:53:12.901761Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.904267Z", "completed_at": "2025-03-04T12:53:12.904275Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021716833114624023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_arbitrum_sepolia_pool_id__True__0.82e7a1605d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.890569Z", "completed_at": "2025-03-04T12:53:12.902433Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.905244Z", "completed_at": "2025-03-04T12:53:12.905252Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02335071563720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_arbitrum_sepolia_amount__True__0.7328694eba", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.886059Z", "completed_at": "2025-03-04T12:53:12.903008Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.906139Z", "completed_at": "2025-03-04T12:53:12.906146Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02982306480407715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_collateral_modified_arbitrum_sepolia_id.7cb07d36dc", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_modified_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.912686Z", "completed_at": "2025-03-04T12:53:12.926090Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.935555Z", "completed_at": "2025-03-04T12:53:12.935572Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028704404830932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_sepolia_amount.2019cf2384", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.919417Z", "completed_at": "2025-03-04T12:53:12.936652Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.938405Z", "completed_at": "2025-03-04T12:53:12.938414Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02777576446533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_sepolia_collateral_type.9b8cfcd53f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.926725Z", "completed_at": "2025-03-04T12:53:12.939278Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.941813Z", "completed_at": "2025-03-04T12:53:12.941821Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03052043914794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_sepolia_distributor.575416cf09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.931049Z", "completed_at": "2025-03-04T12:53:12.939906Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.942711Z", "completed_at": "2025-03-04T12:53:12.942719Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030777692794799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_sepolia_pool_id.7e25d73251", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.946127Z", "completed_at": "2025-03-04T12:53:12.958353Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.964357Z", "completed_at": "2025-03-04T12:53:12.964369Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024061918258666992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_sepolia_token_symbol.6e44e80815", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.953014Z", "completed_at": "2025-03-04T12:53:12.965306Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.973631Z", "completed_at": "2025-03-04T12:53:12.973644Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029594898223876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_arbitrum_sepolia_ts.58ba7f8051", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.959708Z", "completed_at": "2025-03-04T12:53:12.974486Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.977256Z", "completed_at": "2025-03-04T12:53:12.977265Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025720596313476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_pool_rewards_base_mainnet_reward_type__liquidation__incentive.185271e2d3", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        reward_type as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\n    group by reward_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'liquidation','incentive'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.965962Z", "completed_at": "2025-03-04T12:53:12.975959Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.978765Z", "completed_at": "2025-03-04T12:53:12.978775Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026610136032104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_base_mainnet_amount__True__0.5a5b31d40e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.980968Z", "completed_at": "2025-03-04T12:53:12.988480Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:12.994836Z", "completed_at": "2025-03-04T12:53:12.994847Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019700288772583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_base_mainnet_pool_id__True__0.f01ac775cc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.989060Z", "completed_at": "2025-03-04T12:53:13.000317Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.006572Z", "completed_at": "2025-03-04T12:53:13.006584Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0270383358001709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_mainnet_amount.c7b92514fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:12.995855Z", "completed_at": "2025-03-04T12:53:13.007664Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.010183Z", "completed_at": "2025-03-04T12:53:13.010192Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023239612579345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_mainnet_collateral_type.2f7e01ccd0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.001088Z", "completed_at": "2025-03-04T12:53:13.008230Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.011078Z", "completed_at": "2025-03-04T12:53:13.011086Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023362159729003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_mainnet_distributor.5511d5880d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.014490Z", "completed_at": "2025-03-04T12:53:13.028268Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.034581Z", "completed_at": "2025-03-04T12:53:13.034593Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025866270065307617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_mainnet_pool_id.47db83edd0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.021114Z", "completed_at": "2025-03-04T12:53:13.033849Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.039896Z", "completed_at": "2025-03-04T12:53:13.039904Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027462482452392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_mainnet_reward_type.d5eb001951", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reward_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\nwhere reward_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.029573Z", "completed_at": "2025-03-04T12:53:13.040828Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.043734Z", "completed_at": "2025-03-04T12:53:13.043744Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024069547653198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_mainnet_token_symbol.1810912a65", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.035500Z", "completed_at": "2025-03-04T12:53:13.043058Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.045929Z", "completed_at": "2025-03-04T12:53:13.045936Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025647878646850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_mainnet_ts.af8563a243", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.049977Z", "completed_at": "2025-03-04T12:53:13.062069Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.074502Z", "completed_at": "2025-03-04T12:53:13.074514Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030007362365722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_collateral_modified_base_mainnet_event_name__CollateralModified.00f5016782", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'CollateralModified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.054928Z", "completed_at": "2025-03-04T12:53:13.062692Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.075620Z", "completed_at": "2025-03-04T12:53:13.075628Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03047037124633789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_modified_base_mainnet_synth_market_id__True__0.644f81887d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.063242Z", "completed_at": "2025-03-04T12:53:13.078214Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.080792Z", "completed_at": "2025-03-04T12:53:13.080800Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.031713008880615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_mainnet_block_number.45b34bf575", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.067799Z", "completed_at": "2025-03-04T12:53:13.078857Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.081833Z", "completed_at": "2025-03-04T12:53:13.081840Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022116661071777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_mainnet_block_timestamp.7c5c8a362c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.085257Z", "completed_at": "2025-03-04T12:53:13.096223Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.098643Z", "completed_at": "2025-03-04T12:53:13.098657Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019340038299560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_mainnet_contract.f078950840", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.089885Z", "completed_at": "2025-03-04T12:53:13.097398Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.104070Z", "completed_at": "2025-03-04T12:53:13.104084Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02407360076904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_mainnet_event_name.44267a4fa1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.099536Z", "completed_at": "2025-03-04T12:53:13.111195Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.113894Z", "completed_at": "2025-03-04T12:53:13.113906Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01952219009399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_mainnet_id.efa9bbeec9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.105125Z", "completed_at": "2025-03-04T12:53:13.112625Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.115377Z", "completed_at": "2025-03-04T12:53:13.115387Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020245790481567383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_mainnet_sender.b3270f32cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.117574Z", "completed_at": "2025-03-04T12:53:13.131456Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.133987Z", "completed_at": "2025-03-04T12:53:13.134000Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022108793258666992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_mainnet_synth_market_id.3a3dffb920", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.123116Z", "completed_at": "2025-03-04T12:53:13.132780Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.139374Z", "completed_at": "2025-03-04T12:53:13.139388Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02632427215576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_mainnet_transaction_hash.8cc455d504", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.134907Z", "completed_at": "2025-03-04T12:53:13.146855Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.149488Z", "completed_at": "2025-03-04T12:53:13.149497Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019773483276367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_collateral_modified_base_mainnet_id.9010e87027", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_modified_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.140370Z", "completed_at": "2025-03-04T12:53:13.148884Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.151656Z", "completed_at": "2025-03-04T12:53:13.151663Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02094864845275879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_base_sepolia_amount__True__0.da53fcc671", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.158281Z", "completed_at": "2025-03-04T12:53:13.165977Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.172584Z", "completed_at": "2025-03-04T12:53:13.172597Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024477243423461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_sepolia_amount.e8cf1e51d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.153213Z", "completed_at": "2025-03-04T12:53:13.166579Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.173701Z", "completed_at": "2025-03-04T12:53:13.173709Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026237964630126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_base_sepolia_pool_id__True__0.bb2309b03e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.167752Z", "completed_at": "2025-03-04T12:53:13.182153Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.184811Z", "completed_at": "2025-03-04T12:53:13.184822Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02137279510498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_sepolia_collateral_type.fcdb4bc8d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.174599Z", "completed_at": "2025-03-04T12:53:13.184198Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.186932Z", "completed_at": "2025-03-04T12:53:13.186939Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022387981414794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_sepolia_distributor.44cab292b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.189062Z", "completed_at": "2025-03-04T12:53:13.200443Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.202387Z", "completed_at": "2025-03-04T12:53:13.202399Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018993139266967773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_sepolia_pool_id.8de57769b7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.195107Z", "completed_at": "2025-03-04T12:53:13.203259Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.214189Z", "completed_at": "2025-03-04T12:53:13.214201Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028617143630981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_sepolia_token_symbol.7f69f8767a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.203882Z", "completed_at": "2025-03-04T12:53:13.215398Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.218000Z", "completed_at": "2025-03-04T12:53:13.218008Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02375626564025879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_base_sepolia_ts.3bc8aeff42", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.208589Z", "completed_at": "2025-03-04T12:53:13.216712Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.219512Z", "completed_at": "2025-03-04T12:53:13.219520Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019897937774658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_perp_collateral_modified_base_sepolia_event_name__CollateralModified.f6430341ee", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        event_name as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\n    group by event_name\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'CollateralModified'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.221677Z", "completed_at": "2025-03-04T12:53:13.230049Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.239157Z", "completed_at": "2025-03-04T12:53:13.239169Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023232460021972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_modified_base_sepolia_synth_market_id__True__0.6fb45ff630", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.230677Z", "completed_at": "2025-03-04T12:53:13.249768Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.252159Z", "completed_at": "2025-03-04T12:53:13.252170Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03192567825317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_sepolia_block_number.36ad8cb4d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.240242Z", "completed_at": "2025-03-04T12:53:13.251485Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.254355Z", "completed_at": "2025-03-04T12:53:13.254365Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025824785232543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_sepolia_block_timestamp.983f4f7464", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_timestamp\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere block_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.245180Z", "completed_at": "2025-03-04T12:53:13.253068Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.255907Z", "completed_at": "2025-03-04T12:53:13.255916Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026621580123901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_sepolia_contract.e1b2d1c3f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.259719Z", "completed_at": "2025-03-04T12:53:13.271729Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.279620Z", "completed_at": "2025-03-04T12:53:13.279633Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02605581283569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_sepolia_event_name.0d3e82bc99", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_name\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere event_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.267262Z", "completed_at": "2025-03-04T12:53:13.285196Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.287532Z", "completed_at": "2025-03-04T12:53:13.287542Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029520511627197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_sepolia_id.04ae0ab4fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.273081Z", "completed_at": "2025-03-04T12:53:13.286773Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.289696Z", "completed_at": "2025-03-04T12:53:13.289707Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025246858596801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_sepolia_sender.36cb6d7913", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sender\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere sender is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.280605Z", "completed_at": "2025-03-04T12:53:13.288387Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.291274Z", "completed_at": "2025-03-04T12:53:13.291285Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025570154190063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_sepolia_synth_market_id.a933a52d36", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.294823Z", "completed_at": "2025-03-04T12:53:13.307597Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.313826Z", "completed_at": "2025-03-04T12:53:13.313843Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024968862533569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_modified_base_sepolia_transaction_hash.834ecbfe7f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.303040Z", "completed_at": "2025-03-04T12:53:13.319509Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.321863Z", "completed_at": "2025-03-04T12:53:13.321873Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028561830520629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_collateral_modified_base_sepolia_id.a5b1b5d44a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_modified_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.308842Z", "completed_at": "2025-03-04T12:53:13.321082Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.324050Z", "completed_at": "2025-03-04T12:53:13.324061Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02398824691772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_eth_mainnet_amount__True__0.db5fff0dcd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.314866Z", "completed_at": "2025-03-04T12:53:13.323449Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.326246Z", "completed_at": "2025-03-04T12:53:13.326253Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024723291397094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_eth_mainnet_pool_id__True__0.e03ffa9a09", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.328481Z", "completed_at": "2025-03-04T12:53:13.343278Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.349270Z", "completed_at": "2025-03-04T12:53:13.349286Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02658367156982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_eth_mainnet_amount.313b524117", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.338777Z", "completed_at": "2025-03-04T12:53:13.354754Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.357045Z", "completed_at": "2025-03-04T12:53:13.357055Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029382944107055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_eth_mainnet_collateral_type.6ac8e6e2aa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.344710Z", "completed_at": "2025-03-04T12:53:13.356244Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.359258Z", "completed_at": "2025-03-04T12:53:13.359268Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02327561378479004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_eth_mainnet_distributor.7111e37b09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.350412Z", "completed_at": "2025-03-04T12:53:13.358008Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.360856Z", "completed_at": "2025-03-04T12:53:13.360866Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023470163345336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_eth_mainnet_pool_id.7fd59c6d8c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.364332Z", "completed_at": "2025-03-04T12:53:13.377149Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.388558Z", "completed_at": "2025-03-04T12:53:13.388570Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03008127212524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_eth_mainnet_token_symbol.4bbde77781", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.371844Z", "completed_at": "2025-03-04T12:53:13.387843Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.390368Z", "completed_at": "2025-03-04T12:53:13.390377Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027494192123413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_eth_mainnet_ts.e44412832a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.377795Z", "completed_at": "2025-03-04T12:53:13.389740Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.392084Z", "completed_at": "2025-03-04T12:53:13.392094Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023023366928100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_hourly_eth_mainnet", "compiled": true, "compiled_code": "with prices as (\n    select distinct\n        market_symbol,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        LAST_VALUE(price) over (\n            partition by DATE_TRUNC('hour', ts), market_symbol\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as price\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_prices_eth_mainnet\"\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                prices\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            prices\n    ) as m\n    group by\n        m.market_symbol\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        LAST(prices.price) over (\n            partition by dim.market_symbol\n            order by dim.ts\n            rows between unbounded preceding and current row\n        ) as price\n    from\n        dim\n    left join prices\n        on\n            dim.ts = prices.ts\n            and dim.market_symbol = prices.market_symbol\n),\n\nhourly_prices as (\n    select\n        ts,\n        market_symbol,\n        price\n    from\n        ffill\n)\n\nselect *\nfrom\n    hourly_prices\nwhere\n    price is not null", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.383362Z", "completed_at": "2025-03-04T12:53:13.392930Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.395488Z", "completed_at": "2025-03-04T12:53:13.395496Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025144577026367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_eth_mainnet_price__True__0.4a537a60cd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_prices_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.399845Z", "completed_at": "2025-03-04T12:53:13.415096Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.416681Z", "completed_at": "2025-03-04T12:53:13.416693Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022671222686767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_eth_mainnet_market_symbol.f1f5318f4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_prices_eth_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.410562Z", "completed_at": "2025-03-04T12:53:13.417688Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.424197Z", "completed_at": "2025-03-04T12:53:13.424206Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026384830474853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_eth_mainnet_ts.4a1a2f8c2d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_prices_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.405961Z", "completed_at": "2025-03-04T12:53:13.422887Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.425245Z", "completed_at": "2025-03-04T12:53:13.425252Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028670072555541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_eth_mainnet_price.fff835950c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_prices_eth_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.418282Z", "completed_at": "2025-03-04T12:53:13.426150Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.428757Z", "completed_at": "2025-03-04T12:53:13.428765Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023587465286254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_daily_base_mainnet_cumulative_snx_amount__True__0.40e1988439", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not cumulative_snx_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.432126Z", "completed_at": "2025-03-04T12:53:13.445955Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.452004Z", "completed_at": "2025-03-04T12:53:13.452017Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025414466857910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_daily_base_mainnet_cumulative_usd_amount__True__0.2fdc7f3ac4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not cumulative_usd_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.441330Z", "completed_at": "2025-03-04T12:53:13.453024Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.459375Z", "completed_at": "2025-03-04T12:53:13.459383Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029283761978149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_daily_base_mainnet_snx_amount__True__0.4dc1a7a815", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.446576Z", "completed_at": "2025-03-04T12:53:13.458061Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.460408Z", "completed_at": "2025-03-04T12:53:13.460416Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029667139053344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_daily_base_mainnet_usd_amount__True__0.b33cfd2e0e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not usd_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.453748Z", "completed_at": "2025-03-04T12:53:13.461300Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.463879Z", "completed_at": "2025-03-04T12:53:13.463886Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02343010902404785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_mainnet_cumulative_snx_amount.d9cc05c370", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_snx_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\nwhere cumulative_snx_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.467235Z", "completed_at": "2025-03-04T12:53:13.485215Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.491184Z", "completed_at": "2025-03-04T12:53:13.491196Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02943897247314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_mainnet_cumulative_usd_amount.4602f5b0ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_usd_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\nwhere cumulative_usd_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.473827Z", "completed_at": "2025-03-04T12:53:13.490393Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.492362Z", "completed_at": "2025-03-04T12:53:13.492372Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027138710021972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_mainnet_snx_amount.ea18aa299d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\nwhere snx_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.478240Z", "completed_at": "2025-03-04T12:53:13.493214Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.495863Z", "completed_at": "2025-03-04T12:53:13.495871Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029987335205078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_mainnet_ts.14a31d2a6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.486162Z", "completed_at": "2025-03-04T12:53:13.494602Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.497386Z", "completed_at": "2025-03-04T12:53:13.497393Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024460554122924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_mainnet_usd_amount.226e5c84b2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect usd_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_daily_base_mainnet\"\nwhere usd_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.502014Z", "completed_at": "2025-03-04T12:53:13.514297Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.525049Z", "completed_at": "2025-03-04T12:53:13.525063Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028455257415771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_hourly_base_mainnet_cumulative_snx_amount__True__0.0a50a1b2a1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not cumulative_snx_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.508078Z", "completed_at": "2025-03-04T12:53:13.519787Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.526298Z", "completed_at": "2025-03-04T12:53:13.526305Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028156280517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_hourly_base_mainnet_cumulative_usd_amount__True__0.897d810e27", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not cumulative_usd_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.515050Z", "completed_at": "2025-03-04T12:53:13.527375Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.529942Z", "completed_at": "2025-03-04T12:53:13.529950Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02867603302001953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_hourly_base_mainnet_snx_amount__True__0.34d4d71a42", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.520527Z", "completed_at": "2025-03-04T12:53:13.528610Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.531495Z", "completed_at": "2025-03-04T12:53:13.531503Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024309396743774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_hourly_base_mainnet_usd_amount__True__0.153efe66c5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not usd_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.536146Z", "completed_at": "2025-03-04T12:53:13.549651Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.559507Z", "completed_at": "2025-03-04T12:53:13.559524Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028834819793701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_mainnet_cumulative_snx_amount.3f13efe309", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_snx_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\nwhere cumulative_snx_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.543660Z", "completed_at": "2025-03-04T12:53:13.550231Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.560646Z", "completed_at": "2025-03-04T12:53:13.560653Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0283966064453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_mainnet_cumulative_usd_amount.d705144302", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_usd_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\nwhere cumulative_usd_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.550824Z", "completed_at": "2025-03-04T12:53:13.562683Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.565143Z", "completed_at": "2025-03-04T12:53:13.565153Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029725313186645508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_mainnet_snx_amount.8e18aeb895", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\nwhere snx_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.555165Z", "completed_at": "2025-03-04T12:53:13.563859Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.566671Z", "completed_at": "2025-03-04T12:53:13.566682Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02378368377685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_mainnet_ts.712dc7c106", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.570109Z", "completed_at": "2025-03-04T12:53:13.581890Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.590668Z", "completed_at": "2025-03-04T12:53:13.590680Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02629709243774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_mainnet_usd_amount.cbc2a221fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect usd_amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_buyback_hourly_base_mainnet\"\nwhere usd_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.575649Z", "completed_at": "2025-03-04T12:53:13.588373Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.596255Z", "completed_at": "2025-03-04T12:53:13.596270Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030374526977539062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_daily_base_sepolia_cumulative_snx_amount__True__0.ab215eff09", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not cumulative_snx_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.583219Z", "completed_at": "2025-03-04T12:53:13.598163Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.600857Z", "completed_at": "2025-03-04T12:53:13.600867Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026126861572265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_daily_base_sepolia_cumulative_usd_amount__True__0.f5fad30aa3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not cumulative_usd_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.591619Z", "completed_at": "2025-03-04T12:53:13.599611Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.602394Z", "completed_at": "2025-03-04T12:53:13.602404Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022196292877197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_daily_base_sepolia_snx_amount__True__0.378a6852a6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.611765Z", "completed_at": "2025-03-04T12:53:13.618868Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.629206Z", "completed_at": "2025-03-04T12:53:13.629220Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02760028839111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_sepolia_cumulative_snx_amount.c44f071e87", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_snx_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\nwhere cumulative_snx_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.605903Z", "completed_at": "2025-03-04T12:53:13.619512Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.630224Z", "completed_at": "2025-03-04T12:53:13.630232Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030148744583129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_daily_base_sepolia_usd_amount__True__0.e3dd96895e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not usd_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.620062Z", "completed_at": "2025-03-04T12:53:13.632860Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.635398Z", "completed_at": "2025-03-04T12:53:13.635406Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024546384811401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_sepolia_cumulative_usd_amount.f40974a9be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_usd_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\nwhere cumulative_usd_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.624567Z", "completed_at": "2025-03-04T12:53:13.633452Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.636264Z", "completed_at": "2025-03-04T12:53:13.636272Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02012157440185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_sepolia_snx_amount.113325e30a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\nwhere snx_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.646717Z", "completed_at": "2025-03-04T12:53:13.653448Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.660023Z", "completed_at": "2025-03-04T12:53:13.660040Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025409221649169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_sepolia_usd_amount.21bc5d392b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect usd_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\nwhere usd_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.639678Z", "completed_at": "2025-03-04T12:53:13.654659Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.665822Z", "completed_at": "2025-03-04T12:53:13.665836Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03191661834716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_daily_base_sepolia_ts.0b8a36c44c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_daily_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.655254Z", "completed_at": "2025-03-04T12:53:13.669370Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.671889Z", "completed_at": "2025-03-04T12:53:13.671900Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020800113677978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_hourly_base_sepolia_cumulative_snx_amount__True__0.6d52afd421", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not cumulative_snx_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.661103Z", "completed_at": "2025-03-04T12:53:13.670617Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.673361Z", "completed_at": "2025-03-04T12:53:13.673371Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021600008010864258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_hourly_base_sepolia_cumulative_usd_amount__True__0.e3d3aff3f1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not cumulative_usd_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.674271Z", "completed_at": "2025-03-04T12:53:13.687350Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.689797Z", "completed_at": "2025-03-04T12:53:13.689808Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021194934844970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_hourly_base_sepolia_snx_amount__True__0.40ea0d5e88", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not snx_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.680146Z", "completed_at": "2025-03-04T12:53:13.689188Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.701704Z", "completed_at": "2025-03-04T12:53:13.701717Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03184247016906738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_buyback_hourly_base_sepolia_usd_amount__True__0.89592b2e7d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not usd_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.690704Z", "completed_at": "2025-03-04T12:53:13.704486Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.707083Z", "completed_at": "2025-03-04T12:53:13.707092Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02130866050720215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_sepolia_cumulative_snx_amount.806ce65de6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_snx_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\nwhere cumulative_snx_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.697307Z", "completed_at": "2025-03-04T12:53:13.705840Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.708599Z", "completed_at": "2025-03-04T12:53:13.708607Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0219571590423584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_sepolia_cumulative_usd_amount.6347fe374e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_usd_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\nwhere cumulative_usd_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.710768Z", "completed_at": "2025-03-04T12:53:13.722339Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.724858Z", "completed_at": "2025-03-04T12:53:13.724868Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01979827880859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_sepolia_snx_amount.a856b40de9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect snx_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\nwhere snx_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.716234Z", "completed_at": "2025-03-04T12:53:13.724248Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.735019Z", "completed_at": "2025-03-04T12:53:13.735031Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028743982315063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_sepolia_ts.39dec90aa4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.725761Z", "completed_at": "2025-03-04T12:53:13.738584Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.740994Z", "completed_at": "2025-03-04T12:53:13.741005Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02029109001159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_buyback_hourly_base_sepolia_usd_amount.4f119280f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect usd_amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_buyback_hourly_base_sepolia\"\nwhere usd_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.730213Z", "completed_at": "2025-03-04T12:53:13.739788Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.742451Z", "completed_at": "2025-03-04T12:53:13.742480Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020922422409057617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_hourly_arbitrum_mainnet_pool_id__True__0.24b97cc6ba", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.751249Z", "completed_at": "2025-03-04T12:53:13.758360Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.760798Z", "completed_at": "2025-03-04T12:53:13.760811Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021726608276367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_arbitrum_mainnet_hourly_issuance.dcbdd9b577", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_hourly_arbitrum_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.743343Z", "completed_at": "2025-03-04T12:53:13.759596Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.766237Z", "completed_at": "2025-03-04T12:53:13.766250Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02846527099609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_arbitrum_mainnet_collateral_type.5b444b3e9d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_hourly_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.767289Z", "completed_at": "2025-03-04T12:53:13.774075Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.776533Z", "completed_at": "2025-03-04T12:53:13.776543Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018942832946777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_arbitrum_mainnet_ts.9170e8931e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_hourly_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.761708Z", "completed_at": "2025-03-04T12:53:13.775307Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.778050Z", "completed_at": "2025-03-04T12:53:13.778060Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021335363388061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_arbitrum_mainnet_pool_id.ad0bc3744f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_hourly_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.778978Z", "completed_at": "2025-03-04T12:53:13.791884Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.794433Z", "completed_at": "2025-03-04T12:53:13.794446Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021160364151000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_hourly_arbitrum_sepolia_pool_id__True__0.1156081282", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.784725Z", "completed_at": "2025-03-04T12:53:13.793127Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.803323Z", "completed_at": "2025-03-04T12:53:13.803335Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02876424789428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_arbitrum_sepolia_collateral_type.56203ac00f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_hourly_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.804279Z", "completed_at": "2025-03-04T12:53:13.812036Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.814377Z", "completed_at": "2025-03-04T12:53:13.814387Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023246288299560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_arbitrum_sepolia_pool_id.cf6825af38", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_hourly_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.795475Z", "completed_at": "2025-03-04T12:53:13.812639Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.815278Z", "completed_at": "2025-03-04T12:53:13.815286Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0250089168548584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_arbitrum_sepolia_hourly_issuance.24747bdf20", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_hourly_arbitrum_sepolia\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.816174Z", "completed_at": "2025-03-04T12:53:13.828157Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.830579Z", "completed_at": "2025-03-04T12:53:13.830589Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019988536834716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_arbitrum_sepolia_ts.1cc52a2fae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_hourly_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.820798Z", "completed_at": "2025-03-04T12:53:13.828793Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.831448Z", "completed_at": "2025-03-04T12:53:13.831456Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02012944221496582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_hourly_base_sepolia_pool_id__True__0.9d327cf662", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.832937Z", "completed_at": "2025-03-04T12:53:13.844927Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.847426Z", "completed_at": "2025-03-04T12:53:13.847436Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02002406120300293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_base_sepolia_collateral_type.1a6b56fdf4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_hourly_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.839067Z", "completed_at": "2025-03-04T12:53:13.846880Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.859333Z", "completed_at": "2025-03-04T12:53:13.859341Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030115365982055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_base_sepolia_hourly_issuance.938e34bef0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_hourly_base_sepolia\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.853486Z", "completed_at": "2025-03-04T12:53:13.862091Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.864573Z", "completed_at": "2025-03-04T12:53:13.864581Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02041149139404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_base_sepolia_ts.27f6b37554", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_hourly_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.848310Z", "completed_at": "2025-03-04T12:53:13.862703Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.865432Z", "completed_at": "2025-03-04T12:53:13.865440Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021959543228149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_base_sepolia_pool_id.10ae437d68", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_hourly_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.873801Z", "completed_at": "2025-03-04T12:53:13.881196Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.891325Z", "completed_at": "2025-03-04T12:53:13.891336Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027548789978027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_base_mainnet_collateral_type.21efec6e56", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_hourly_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.868810Z", "completed_at": "2025-03-04T12:53:13.886274Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.892409Z", "completed_at": "2025-03-04T12:53:13.892417Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029285430908203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_hourly_base_mainnet_pool_id__True__0.82c0a98d47", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.886922Z", "completed_at": "2025-03-04T12:53:13.894210Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.896846Z", "completed_at": "2025-03-04T12:53:13.896853Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017964839935302734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_base_mainnet_pool_id.03eddab767", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_hourly_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.881829Z", "completed_at": "2025-03-04T12:53:13.895549Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.898354Z", "completed_at": "2025-03-04T12:53:13.898361Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02044677734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_base_mainnet_hourly_issuance.1bde70000d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_hourly_base_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.902042Z", "completed_at": "2025-03-04T12:53:13.916756Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.927088Z", "completed_at": "2025-03-04T12:53:13.927102Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031083106994628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_base_mainnet_ts.af3f6a895d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_hourly_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.909748Z", "completed_at": "2025-03-04T12:53:13.917313Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.928220Z", "completed_at": "2025-03-04T12:53:13.928228Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030598163604736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_migration_hourly_eth_mainnet_hourly_debt_migrated__True__0.2c5355cf5c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_debt_migrated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.922589Z", "completed_at": "2025-03-04T12:53:13.930110Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.932719Z", "completed_at": "2025-03-04T12:53:13.932729Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018338441848754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_hourly_eth_mainnet_collateral_type.e0ef271f9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_hourly_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.917911Z", "completed_at": "2025-03-04T12:53:13.931331Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.934234Z", "completed_at": "2025-03-04T12:53:13.934244Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02529597282409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_migration_hourly_eth_mainnet_pool_id__True__0.a0670cc5c1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.943490Z", "completed_at": "2025-03-04T12:53:13.950105Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.962874Z", "completed_at": "2025-03-04T12:53:13.962887Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029418468475341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_hourly_eth_mainnet_pool_id.55def21e95", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_hourly_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.937694Z", "completed_at": "2025-03-04T12:53:13.950705Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.963896Z", "completed_at": "2025-03-04T12:53:13.963905Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03195929527282715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_hourly_eth_mainnet_hourly_debt_migrated.99b91b00b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_debt_migrated\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_hourly_eth_mainnet\"\nwhere hourly_debt_migrated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.951275Z", "completed_at": "2025-03-04T12:53:13.965047Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.967669Z", "completed_at": "2025-03-04T12:53:13.967680Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025046586990356445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_migration_hourly_eth_mainnet_ts.a201c86ec0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_hourly_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.958119Z", "completed_at": "2025-03-04T12:53:13.967055Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.969848Z", "completed_at": "2025-03-04T12:53:13.969855Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022085189819335938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_issuance_hourly_eth_mainnet_pool_id__True__0.2f6d1cabb6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.973878Z", "completed_at": "2025-03-04T12:53:13.985104Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.995071Z", "completed_at": "2025-03-04T12:53:13.995087Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026669979095458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_eth_mainnet_collateral_type.04853a2f55", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_hourly_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.978528Z", "completed_at": "2025-03-04T12:53:13.985715Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:13.996234Z", "completed_at": "2025-03-04T12:53:13.996243Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0271756649017334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_eth_mainnet_hourly_issuance.3ee79944a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_hourly_eth_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.986273Z", "completed_at": "2025-03-04T12:53:13.998944Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.001506Z", "completed_at": "2025-03-04T12:53:14.001514Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02841496467590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_eth_mainnet_pool_id.0bd0e6635e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_hourly_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:13.990737Z", "completed_at": "2025-03-04T12:53:14.000194Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.002976Z", "completed_at": "2025-03-04T12:53:14.002984Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020180463790893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_issuance_hourly_eth_mainnet_ts.d84f234266", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_hourly_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.005081Z", "completed_at": "2025-03-04T12:53:14.019981Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.026649Z", "completed_at": "2025-03-04T12:53:14.026666Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02720952033996582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_arbitrum_mainnet_amount_liquidated__True__0.e71d50fb97", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_liquidated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.013017Z", "completed_at": "2025-03-04T12:53:14.020630Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.027774Z", "completed_at": "2025-03-04T12:53:14.027782Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027026653289794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_arbitrum_mainnet_market_id__True__0.09a7367d21", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.021791Z", "completed_at": "2025-03-04T12:53:14.034178Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.036900Z", "completed_at": "2025-03-04T12:53:14.036908Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01940178871154785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_arbitrum_mainnet_position_size__True__0.838f737304", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not position_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.028669Z", "completed_at": "2025-03-04T12:53:14.036272Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.039039Z", "completed_at": "2025-03-04T12:53:14.039049Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020627975463867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_account_id.350ca71f93", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.041244Z", "completed_at": "2025-03-04T12:53:14.053395Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.062335Z", "completed_at": "2025-03-04T12:53:14.062351Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026889324188232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_amount_liquidated.0a4e2e6c10", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_liquidated\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere amount_liquidated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.047569Z", "completed_at": "2025-03-04T12:53:14.054759Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.067983Z", "completed_at": "2025-03-04T12:53:14.067994Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03031754493713379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_block_number.672be13921", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.055330Z", "completed_at": "2025-03-04T12:53:14.069993Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.072670Z", "completed_at": "2025-03-04T12:53:14.072678Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0258786678314209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_id.6af85cf47e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.063490Z", "completed_at": "2025-03-04T12:53:14.071384Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.074190Z", "completed_at": "2025-03-04T12:53:14.074198Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022203683853149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_market_id.4c0b30687e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.077599Z", "completed_at": "2025-03-04T12:53:14.089095Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.095851Z", "completed_at": "2025-03-04T12:53:14.095863Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02397942543029785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_market_symbol.578192ed1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.083109Z", "completed_at": "2025-03-04T12:53:14.095134Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.101291Z", "completed_at": "2025-03-04T12:53:14.101304Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027861595153808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_position_size.83889235bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_size\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.090435Z", "completed_at": "2025-03-04T12:53:14.102898Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.105672Z", "completed_at": "2025-03-04T12:53:14.105680Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025705337524414062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_transaction_hash.bf753f09f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.096778Z", "completed_at": "2025-03-04T12:53:14.105048Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.110207Z", "completed_at": "2025-03-04T12:53:14.110217Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02278590202331543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_mainnet_ts.13c0b178ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.112341Z", "completed_at": "2025-03-04T12:53:14.125068Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.131668Z", "completed_at": "2025-03-04T12:53:14.131681Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027394533157348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_liq_position_arbitrum_mainnet_id.5f3f730218", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.118394Z", "completed_at": "2025-03-04T12:53:14.126282Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.137388Z", "completed_at": "2025-03-04T12:53:14.137399Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028723955154418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_orders_arbitrum_mainnet_market_id__True__0.7169e0715a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.126921Z", "completed_at": "2025-03-04T12:53:14.140206Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.142933Z", "completed_at": "2025-03-04T12:53:14.142942Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02530670166015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_mainnet_account_id.a2871e6bfb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.132794Z", "completed_at": "2025-03-04T12:53:14.141703Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.144409Z", "completed_at": "2025-03-04T12:53:14.144418Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021118640899658203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_mainnet_block_number.05c57da469", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.146570Z", "completed_at": "2025-03-04T12:53:14.161044Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.163603Z", "completed_at": "2025-03-04T12:53:14.163616Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022826433181762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_mainnet_contract.2596358bd7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.152592Z", "completed_at": "2025-03-04T12:53:14.162991Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.174163Z", "completed_at": "2025-03-04T12:53:14.174178Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0320589542388916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_mainnet_id.eb02f38d46", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.164522Z", "completed_at": "2025-03-04T12:53:14.177714Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.180232Z", "completed_at": "2025-03-04T12:53:14.180245Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020801305770874023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_mainnet_market_id.75f215459c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.169415Z", "completed_at": "2025-03-04T12:53:14.179003Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.181736Z", "completed_at": "2025-03-04T12:53:14.181744Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021482229232788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_mainnet_market_symbol.342ec0cea2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.182646Z", "completed_at": "2025-03-04T12:53:14.194609Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.197140Z", "completed_at": "2025-03-04T12:53:14.197149Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020189285278320312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_mainnet_transaction_hash.4c9cc1f193", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.188417Z", "completed_at": "2025-03-04T12:53:14.196574Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.203132Z", "completed_at": "2025-03-04T12:53:14.203140Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024935007095336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_mainnet_ts.d648991a22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.198638Z", "completed_at": "2025-03-04T12:53:14.211492Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.213634Z", "completed_at": "2025-03-04T12:53:14.213644Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01979351043701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_orders_arbitrum_mainnet_id.3401408181", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_orders_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.204731Z", "completed_at": "2025-03-04T12:53:14.215696Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.226670Z", "completed_at": "2025-03-04T12:53:14.226684Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03150200843811035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_arbitrum_mainnet", "compiled": true, "compiled_code": "with all_prices as (\n    select\n        ts,\n        null as market_address,\n        market_symbol,\n        price\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\n    union all\n    select\n        ts,\n        collateral_type as market_address,\n        null as market_symbol,\n        collateral_value / amount as price\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\n    where\n        collateral_value > 0\n),\n\ntokens as (\n    select\n        token_address,\n        token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_tokens\"\n)\n\nselect\n    p.ts,\n    p.market_address,\n    p.price,\n    COALESCE(\n        t.token_symbol,\n        p.market_symbol\n    ) as market_symbol\nfrom\n    all_prices as p\nleft join tokens as t\n    on LOWER(\n        p.market_address\n    ) = LOWER(\n        t.token_address\n    )", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.216956Z", "completed_at": "2025-03-04T12:53:14.230205Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.236945Z", "completed_at": "2025-03-04T12:53:14.236959Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02498936653137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_mainnet_long_oi__True__0.c93200775a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not long_oi >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.221786Z", "completed_at": "2025-03-04T12:53:14.230784Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.237881Z", "completed_at": "2025-03-04T12:53:14.237889Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025026321411132812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_mainnet_market_id__True__0.452a079160", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.232041Z", "completed_at": "2025-03-04T12:53:14.240819Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.247706Z", "completed_at": "2025-03-04T12:53:14.247714Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02018451690673828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_mainnet_market_oi_usd__True__0.33391fd010", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_oi_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.241487Z", "completed_at": "2025-03-04T12:53:14.249367Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.255994Z", "completed_at": "2025-03-04T12:53:14.256003Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024733304977416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_mainnet_prev_size__True__0.657d61124b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not prev_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.251194Z", "completed_at": "2025-03-04T12:53:14.266155Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.492391Z", "completed_at": "2025-03-04T12:53:14.492409Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.24620771408081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_mainnet_short_oi__True__0.171377e6f1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not short_oi >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.256915Z", "completed_at": "2025-03-04T12:53:14.267393Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.494299Z", "completed_at": "2025-03-04T12:53:14.494309Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.24734902381896973, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_mainnet_total_oi_usd__True__0.881c6264fb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_oi_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.268026Z", "completed_at": "2025-03-04T12:53:14.500674Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.502889Z", "completed_at": "2025-03-04T12:53:14.502899Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.23930835723876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_block_number.4407a64f68", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.496135Z", "completed_at": "2025-03-04T12:53:14.503844Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.506252Z", "completed_at": "2025-03-04T12:53:14.506260Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.23955774307250977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_funding_rate.00d146aa60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_rate\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere funding_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.507779Z", "completed_at": "2025-03-04T12:53:14.520289Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.526816Z", "completed_at": "2025-03-04T12:53:14.526828Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02483224868774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_funding_rate_apr.dc965a3dac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_rate_apr\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere funding_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.514153Z", "completed_at": "2025-03-04T12:53:14.526181Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.533718Z", "completed_at": "2025-03-04T12:53:14.533728Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029434680938720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_funding_velocity.0034a07e10", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_velocity\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere funding_velocity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.521035Z", "completed_at": "2025-03-04T12:53:14.534610Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.537343Z", "completed_at": "2025-03-04T12:53:14.537352Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0247650146484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_id.fdcfccc679", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.527836Z", "completed_at": "2025-03-04T12:53:14.536697Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.539517Z", "completed_at": "2025-03-04T12:53:14.539524Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020002126693725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_interest_rate.b77ee8c1d7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.543595Z", "completed_at": "2025-03-04T12:53:14.560515Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.566734Z", "completed_at": "2025-03-04T12:53:14.566747Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028647661209106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_long_oi.2a11207857", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect long_oi\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere long_oi is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.548710Z", "completed_at": "2025-03-04T12:53:14.561338Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.567742Z", "completed_at": "2025-03-04T12:53:14.567752Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028970003128051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_long_rate_apr.191d4fa205", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect long_rate_apr\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere long_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.561939Z", "completed_at": "2025-03-04T12:53:14.569586Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.572227Z", "completed_at": "2025-03-04T12:53:14.572234Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018880844116210938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_market_oi_usd.1d8435e3b9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_oi_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere market_oi_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.555873Z", "completed_at": "2025-03-04T12:53:14.570227Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.573113Z", "completed_at": "2025-03-04T12:53:14.573123Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03028273582458496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_market_id.4c307477e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.577199Z", "completed_at": "2025-03-04T12:53:14.590863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.597566Z", "completed_at": "2025-03-04T12:53:14.597578Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02614307403564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_market_symbol.3407a99980", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.583627Z", "completed_at": "2025-03-04T12:53:14.596823Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.603068Z", "completed_at": "2025-03-04T12:53:14.603077Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029174089431762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_prev_size.0805987de2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prev_size\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere prev_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.592168Z", "completed_at": "2025-03-04T12:53:14.604671Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.607480Z", "completed_at": "2025-03-04T12:53:14.607489Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025414228439331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_price.635e086bf6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.598510Z", "completed_at": "2025-03-04T12:53:14.606816Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.609565Z", "completed_at": "2025-03-04T12:53:14.609573Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02682042121887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_short_oi.0ee3418a1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_oi\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere short_oi is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.611660Z", "completed_at": "2025-03-04T12:53:14.623239Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.625772Z", "completed_at": "2025-03-04T12:53:14.625785Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019704818725585938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_short_rate_apr.dd6356d7e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_rate_apr\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere short_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.617981Z", "completed_at": "2025-03-04T12:53:14.625162Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.637151Z", "completed_at": "2025-03-04T12:53:14.637160Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028940916061401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_size.4965a5f759", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect size\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.626685Z", "completed_at": "2025-03-04T12:53:14.639765Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.642272Z", "completed_at": "2025-03-04T12:53:14.642280Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025054216384887695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_size_delta.5897f74730", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect size_delta\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere size_delta is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.631129Z", "completed_at": "2025-03-04T12:53:14.640378Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.643145Z", "completed_at": "2025-03-04T12:53:14.643153Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02071976661682129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_skew.94faa11b6a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect skew\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere skew is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.651076Z", "completed_at": "2025-03-04T12:53:14.657997Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.664205Z", "completed_at": "2025-03-04T12:53:14.664218Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02269124984741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_transaction_hash.0042d0c047", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.646456Z", "completed_at": "2025-03-04T12:53:14.658642Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.665217Z", "completed_at": "2025-03-04T12:53:14.665226Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024334192276000977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_total_oi_usd.f4bb65156b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_oi_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere total_oi_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.659778Z", "completed_at": "2025-03-04T12:53:14.671964Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.674096Z", "completed_at": "2025-03-04T12:53:14.674105Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018512487411499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_mainnet_ts.f6e4cf43c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.666113Z", "completed_at": "2025-03-04T12:53:14.674936Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.677351Z", "completed_at": "2025-03-04T12:53:14.677361Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02103281021118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_market_history_arbitrum_mainnet_id.11e7761caf", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_history_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.678291Z", "completed_at": "2025-03-04T12:53:14.689781Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.692273Z", "completed_at": "2025-03-04T12:53:14.692282Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019620418548583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_activity_arbitrum_mainnet", "compiled": true, "compiled_code": "\n\nwith active_accounts as (\n    select distinct\n        date_trunc('day', ts) as activity_date,\n        account_id\n    from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\ndate_range as (\n    select\n        generate_series(\n            date(min(activity_date)),\n            date(max(activity_date)),\n            interval '1 day'\n        )::date as activity_date\n    from active_accounts\n),\n\nactive_accounts_daily as (\n    select\n        date_range.activity_date,\n        count(distinct active_accounts.account_id) as active_accounts\n    from date_range\n    left join active_accounts\n        on date_range.activity_date = active_accounts.activity_date\n    group by date_range.activity_date\n),\n\nactive_accounts_monthly as (\n    select\n        date_range.activity_date,\n        count(distinct active_accounts.account_id) as active_accounts\n    from date_range\n    left join active_accounts\n        on\n            date_range.activity_date - interval '27 days'\n            <= active_accounts.activity_date\n            and date_range.activity_date >= active_accounts.activity_date\n    group by date_range.activity_date\n),\n\nnew_accounts as (\n    select\n        min(activity_date) as start_date,\n        account_id\n    from active_accounts\n    group by account_id\n),\n\nnew_accounts_daily as (\n    select\n        date_range.activity_date,\n        count(new_accounts.account_id) as new_accounts\n    from date_range\n    left join new_accounts\n        on date_range.activity_date = new_accounts.start_date\n    group by date_range.activity_date, new_accounts.start_date\n),\n\nnew_accounts_monthly as (\n    select distinct\n        activity_date,\n        sum(new_accounts) over (\n            order by activity_date\n            range between interval '27 days' preceding and current row\n        ) as new_accounts\n    from new_accounts_daily\n)\n\nselect\n    dr.activity_date as ts,\n    dau.active_accounts as dau,\n    mau.active_accounts as mau,\n    new_accounts_daily.new_accounts as new_accounts_daily,\n    new_accounts_monthly.new_accounts as new_accounts_monthly\nfrom date_range as dr\nleft join active_accounts_daily as dau\n    on dr.activity_date = dau.activity_date\nleft join active_accounts_monthly as mau\n    on dr.activity_date = mau.activity_date\nleft join new_accounts_daily\n    on dr.activity_date = new_accounts_daily.activity_date\nleft join new_accounts_monthly\n    on dr.activity_date = new_accounts_monthly.activity_date\norder by ts desc", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_activity_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.682541Z", "completed_at": "2025-03-04T12:53:14.691083Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.696441Z", "completed_at": "2025-03-04T12:53:14.696450Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023157358169555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_stats_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        ts,\n        account_id,\n        total_fees,\n        notional_trade_size,\n        1 as trades,\n        SUM(\n            total_fees\n        ) over (\n            partition by account_id\n            order by\n                ts\n        ) as cumulative_fees,\n        SUM(\n            notional_trade_size\n        ) over (\n            partition by account_id\n            order by\n                ts\n        ) as cumulative_volume\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nliq as (\n    select\n        ts,\n        account_id,\n        amount_liquidated,\n        1 as liquidations\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\n),\n\ninc_trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        account_id,\n        SUM(trades) as trades,\n        SUM(total_fees) as fees,\n        SUM(notional_trade_size) as volume,\n        MAX(cumulative_fees) as cumulative_fees,\n        MAX(cumulative_volume) as cumulative_volume\n    from\n        trades\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        account_id\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        account_id,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        account_id\n),\n\ninc as (\n    select\n        h.ts,\n        h.account_id,\n        COALESCE(\n            h.trades,\n            0\n        ) as trades,\n        COALESCE(\n            h.fees,\n            0\n        ) as fees,\n        COALESCE(\n            h.volume,\n            0\n        ) as volume,\n        COALESCE(\n            l.amount_liquidated,\n            0\n        ) as amount_liquidated,\n        COALESCE(\n            l.liquidations,\n            0\n        ) as liquidations,\n        COALESCE(\n            h.cumulative_fees,\n            0\n        ) as cumulative_fees,\n        COALESCE(\n            h.cumulative_volume,\n            0\n        ) as cumulative_volume\n    from\n        inc_trades as h\n    left join inc_liq as l\n        on\n            h.ts = l.ts\n            and h.account_id = l.account_id\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_stats_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.693177Z", "completed_at": "2025-03-04T12:53:14.699751Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.705581Z", "completed_at": "2025-03-04T12:53:14.705589Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017533540725708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_keeper_stats_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        settler,\n        settlement_reward,\n        notional_trade_size,\n        1 as trades,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(settlement_reward) as settlement_reward_total,\n        SUM(notional_trade_size) as notional_trade_size_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.settler as keeper,\n    SUM(trades.trades) as trades,\n    SUM(trades.settlement_reward) as settlement_rewards,\n    SUM(trades.notional_trade_size) as amount_settled,\n    SUM(trades.trades) / MAX(total.trades_total) as trades_pct,\n    SUM(trades.settlement_reward)\n    / MAX(total.settlement_reward_total) as settlement_rewards_pct,\n    SUM(trades.notional_trade_size)\n    / MAX(total.notional_trade_size_total) as amount_settled_pct\nfrom\n    trades\ninner join total\n    on trades.ts = total.ts\ngroup by\n    trades.ts,\n    trades.settler", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_keeper_stats_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.700425Z", "completed_at": "2025-03-04T12:53:14.707772Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.717648Z", "completed_at": "2025-03-04T12:53:14.717657Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026119470596313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_stats_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        ts,\n        market_symbol,\n        exchange_fees,\n        referral_fees,\n        collected_fees,\n        notional_trade_size,\n        1 as trades\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nliq as (\n    select\n        ts,\n        market_symbol,\n        amount_liquidated,\n        1 as liquidations\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_position_arbitrum_mainnet\"\n),\n\ninc_trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        market_symbol,\n        SUM(trades) as trades,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(notional_trade_size) as volume\n    from\n        trades\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        market_symbol\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        market_symbol,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        market_symbol\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                trades\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            trades\n    ) as m\n    group by\n        m.market_symbol\n),\n\ninc as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        COALESCE(\n            h.trades,\n            0\n        ) as trades,\n        COALESCE(\n            h.exchange_fees,\n            0\n        ) as exchange_fees,\n        COALESCE(\n            h.referral_fees,\n            0\n        ) as referral_fees,\n        COALESCE(\n            h.collected_fees,\n            0\n        ) as collected_fees,\n        COALESCE(\n            h.volume,\n            0\n        ) as volume,\n        COALESCE(\n            l.amount_liquidated,\n            0\n        ) as amount_liquidated,\n        COALESCE(\n            l.liquidations,\n            0\n        ) as liquidations,\n        SUM(\n            h.exchange_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_exchange_fees,\n        SUM(\n            h.referral_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_referral_fees,\n        SUM(\n            h.collected_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_collected_fees,\n        SUM(\n            h.volume\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_volume\n    from\n        dim\n    left join inc_trades as h\n        on\n            dim.ts = h.ts\n            and dim.market_symbol = h.market_symbol\n    left join inc_liq as l\n        on\n            dim.ts = l.ts\n            and dim.market_symbol = l.market_symbol\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_stats_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.708992Z", "completed_at": "2025-03-04T12:53:14.720324Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.722853Z", "completed_at": "2025-03-04T12:53:14.722860Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01870417594909668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_tracking_stats_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        tracking_code,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(notional_trade_size) as volume,\n        SUM(1) as trades\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        tracking_code\n),\n\naccounts as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        tracking_code,\n        COUNT(\n            distinct account_id\n        ) as \"accounts\"\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        tracking_code\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(exchange_fees) as exchange_fees_total,\n        SUM(referral_fees) as referral_fees_total,\n        SUM(collected_fees) as collected_fees_total,\n        SUM(volume) as volume_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.tracking_code,\n    trades.exchange_fees,\n    trades.referral_fees,\n    trades.collected_fees,\n    trades.volume,\n    trades.trades,\n    accounts.accounts,\n    case\n        when total.exchange_fees_total = 0 then 0\n        else trades.exchange_fees / total.exchange_fees_total\n    end as exchange_fees_share,\n    case\n        when total.referral_fees_total = 0 then 0\n        else trades.referral_fees / total.referral_fees_total\n    end as referral_fees_share,\n    case\n        when total.collected_fees_total = 0 then 0\n        else trades.collected_fees / total.collected_fees_total\n    end as collected_fees_share,\n    case\n        when total.volume_total = 0 then 0\n        else trades.volume / total.volume_total\n    end as volume_share,\n    case\n        when total.trades_total = 0 then 0\n        else trades.trades / total.trades_total\n    end as trades_share\nfrom\n    trades\ninner join accounts\n    on\n        trades.ts = accounts.ts\n        and trades.tracking_code = accounts.tracking_code\ninner join total\n    on trades.ts = total.ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_tracking_stats_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.712905Z", "completed_at": "2025-03-04T12:53:14.720909Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.723749Z", "completed_at": "2025-03-04T12:53:14.723756Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018912315368652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_mainnet_collected_fees__True__0.c8bdde7489", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.724621Z", "completed_at": "2025-03-04T12:53:14.738878Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.740854Z", "completed_at": "2025-03-04T12:53:14.740864Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02238941192626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_mainnet_exchange_fees__True__0.1168a18bba", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not exchange_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.731718Z", "completed_at": "2025-03-04T12:53:14.741709Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.748331Z", "completed_at": "2025-03-04T12:53:14.748344Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026317834854125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_mainnet_fill_price__True__0.b4690264a9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fill_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.742908Z", "completed_at": "2025-03-04T12:53:14.754916Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.757522Z", "completed_at": "2025-03-04T12:53:14.757530Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019415616989135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_mainnet_lp_fees__True__0.cfa7ced563", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not lp_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.749329Z", "completed_at": "2025-03-04T12:53:14.756942Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.763691Z", "completed_at": "2025-03-04T12:53:14.763700Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024347305297851562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_mainnet_market_id__True__0.dd858e7f52", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.759047Z", "completed_at": "2025-03-04T12:53:14.766878Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.773482Z", "completed_at": "2025-03-04T12:53:14.773496Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019551753997802734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_mainnet_referral_fees__True__0.5946ca9ce5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not referral_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.768125Z", "completed_at": "2025-03-04T12:53:14.775795Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.788009Z", "completed_at": "2025-03-04T12:53:14.788020Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029751062393188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_mainnet_settlement_reward__True__0.299618787f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not settlement_reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.777031Z", "completed_at": "2025-03-04T12:53:14.789875Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.792367Z", "completed_at": "2025-03-04T12:53:14.792376Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02500605583190918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_mainnet_total_fees__True__0.bef50610ba", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.781755Z", "completed_at": "2025-03-04T12:53:14.791117Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.793918Z", "completed_at": "2025-03-04T12:53:14.793925Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0211944580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_account_id.274635cb66", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.794794Z", "completed_at": "2025-03-04T12:53:14.807886Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.809919Z", "completed_at": "2025-03-04T12:53:14.809933Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021091938018798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_accrued_funding.e2b22e7a98", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accrued_funding\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere accrued_funding is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.802082Z", "completed_at": "2025-03-04T12:53:14.811392Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.821616Z", "completed_at": "2025-03-04T12:53:14.821627Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02850961685180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_block_number.807093ef77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.812015Z", "completed_at": "2025-03-04T12:53:14.824300Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.826769Z", "completed_at": "2025-03-04T12:53:14.826780Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02554488182067871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_collected_fees.fbad83d394", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.817252Z", "completed_at": "2025-03-04T12:53:14.824888Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.827669Z", "completed_at": "2025-03-04T12:53:14.827677Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019224166870117188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_contract.e863c3d409", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.828533Z", "completed_at": "2025-03-04T12:53:14.841475Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.843425Z", "completed_at": "2025-03-04T12:53:14.843436Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020722150802612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_exchange_fees.e8aecd715b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exchange_fees\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere exchange_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.835151Z", "completed_at": "2025-03-04T12:53:14.844929Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.851147Z", "completed_at": "2025-03-04T12:53:14.851157Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025166749954223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_fill_price.847633eed2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fill_price\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere fill_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.846771Z", "completed_at": "2025-03-04T12:53:14.858358Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.860765Z", "completed_at": "2025-03-04T12:53:14.860774Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018848896026611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_id.3bd0f3d2d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.852205Z", "completed_at": "2025-03-04T12:53:14.859553Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.866116Z", "completed_at": "2025-03-04T12:53:14.866126Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023552656173706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_lp_fees.3bd17eb55d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lp_fees\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere lp_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.861644Z", "completed_at": "2025-03-04T12:53:14.869264Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.875827Z", "completed_at": "2025-03-04T12:53:14.875839Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01939535140991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_market_id.275abd4f63", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.869898Z", "completed_at": "2025-03-04T12:53:14.877444Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.884035Z", "completed_at": "2025-03-04T12:53:14.884046Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024058818817138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_market_symbol.05579e6d46", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.879284Z", "completed_at": "2025-03-04T12:53:14.893065Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.895059Z", "completed_at": "2025-03-04T12:53:14.895068Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02075791358947754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_notional_position_size.c2b276cedf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect notional_position_size\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere notional_position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.885142Z", "completed_at": "2025-03-04T12:53:14.895940Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.902297Z", "completed_at": "2025-03-04T12:53:14.902307Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02723097801208496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_notional_trade_size.49f8c11789", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect notional_trade_size\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere notional_trade_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.896549Z", "completed_at": "2025-03-04T12:53:14.907714Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.909767Z", "completed_at": "2025-03-04T12:53:14.909775Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019572734832763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_pnl.bb3e615b15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pnl\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.903380Z", "completed_at": "2025-03-04T12:53:14.910669Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.913253Z", "completed_at": "2025-03-04T12:53:14.913261Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01899886131286621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_position_size.8743b9c748", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_size\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.914854Z", "completed_at": "2025-03-04T12:53:14.926533Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.928514Z", "completed_at": "2025-03-04T12:53:14.928524Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020336389541625977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_referral_fees.b455bc01d4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referral_fees\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere referral_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.921797Z", "completed_at": "2025-03-04T12:53:14.933888Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.936060Z", "completed_at": "2025-03-04T12:53:14.936068Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02422165870666504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_settlement_reward.ec16701449", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settlement_reward\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere settlement_reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.929450Z", "completed_at": "2025-03-04T12:53:14.937002Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.945569Z", "completed_at": "2025-03-04T12:53:14.945579Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025391340255737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_settler.d03b352e12", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settler\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere settler is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.937592Z", "completed_at": "2025-03-04T12:53:14.947208Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.953813Z", "completed_at": "2025-03-04T12:53:14.953823Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026222944259643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_total_fees.0e39e8937a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_fees\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere total_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.949057Z", "completed_at": "2025-03-04T12:53:14.956854Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.963260Z", "completed_at": "2025-03-04T12:53:14.963272Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01937556266784668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_tracking_code.6303cba6ee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tracking_code\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere tracking_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.957415Z", "completed_at": "2025-03-04T12:53:14.969343Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.975793Z", "completed_at": "2025-03-04T12:53:14.975807Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028135061264038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_trade_size.efdcfaa24a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect trade_size\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere trade_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.964296Z", "completed_at": "2025-03-04T12:53:14.975145Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.977559Z", "completed_at": "2025-03-04T12:53:14.977569Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02232074737548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_transaction_hash.a7dc1c891e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.970808Z", "completed_at": "2025-03-04T12:53:14.979143Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:14.981659Z", "completed_at": "2025-03-04T12:53:14.981666Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01914668083190918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_mainnet_ts.c39afc4c8d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.982524Z", "completed_at": "2025-03-04T12:53:14.989813Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.002221Z", "completed_at": "2025-03-04T12:53:15.002237Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025586366653442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_trades_arbitrum_mainnet_id.29f0434c59", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.990402Z", "completed_at": "2025-03-04T12:53:15.004253Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.010893Z", "completed_at": "2025-03-04T12:53:15.010904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0300748348236084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_arbitrum_sepolia_amount_liquidated__True__0.956e63f5ec", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_liquidated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:14.997659Z", "completed_at": "2025-03-04T12:53:15.004913Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.011875Z", "completed_at": "2025-03-04T12:53:15.011883Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024953126907348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_arbitrum_sepolia_market_id__True__0.4485c332d0", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.006168Z", "completed_at": "2025-03-04T12:53:15.014217Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.016776Z", "completed_at": "2025-03-04T12:53:15.016787Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019912242889404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_arbitrum_sepolia_position_size__True__0.ffc90d2068", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not position_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.018270Z", "completed_at": "2025-03-04T12:53:15.029725Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.035766Z", "completed_at": "2025-03-04T12:53:15.035781Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023159265518188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_account_id.cde4f3f191", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.031149Z", "completed_at": "2025-03-04T12:53:15.037618Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.045753Z", "completed_at": "2025-03-04T12:53:15.045762Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02819991111755371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_block_number.e6e93f1ab3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.024997Z", "completed_at": "2025-03-04T12:53:15.038175Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.046663Z", "completed_at": "2025-03-04T12:53:15.046674Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03066253662109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_amount_liquidated.a3cb633bfc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_liquidated\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere amount_liquidated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.039426Z", "completed_at": "2025-03-04T12:53:15.049103Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.051607Z", "completed_at": "2025-03-04T12:53:15.051615Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021266698837280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_id.61aaec741e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.053098Z", "completed_at": "2025-03-04T12:53:15.064214Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.070200Z", "completed_at": "2025-03-04T12:53:15.070212Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022778987884521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_market_id.a7c845cd48", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.059779Z", "completed_at": "2025-03-04T12:53:15.071800Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.078610Z", "completed_at": "2025-03-04T12:53:15.078620Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027784109115600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_market_symbol.1097b1cf7e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.065677Z", "completed_at": "2025-03-04T12:53:15.073149Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.080155Z", "completed_at": "2025-03-04T12:53:15.080163Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027926206588745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_position_size.ac5bc63bdb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_size\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.073818Z", "completed_at": "2025-03-04T12:53:15.082624Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.090933Z", "completed_at": "2025-03-04T12:53:15.090943Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026065826416015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_transaction_hash.d7c137d375", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.084555Z", "completed_at": "2025-03-04T12:53:15.093940Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.100292Z", "completed_at": "2025-03-04T12:53:15.100307Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020920753479003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_arbitrum_sepolia_ts.86fe34cc45", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.095125Z", "completed_at": "2025-03-04T12:53:15.106994Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.113982Z", "completed_at": "2025-03-04T12:53:15.113992Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03019237518310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_liq_position_arbitrum_sepolia_id.143a6e53ab", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.101236Z", "completed_at": "2025-03-04T12:53:15.113358Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.116226Z", "completed_at": "2025-03-04T12:53:15.116234Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024486541748046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_arbitrum_sepolia", "compiled": true, "compiled_code": "with all_prices as (\n    select\n        ts,\n        null as market_address,\n        market_symbol,\n        price\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\n    union all\n    select\n        ts,\n        collateral_type as market_address,\n        null as market_symbol,\n        collateral_value / amount as price\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\n    where\n        collateral_value > 0\n),\n\ntokens as (\n    select\n        token_address,\n        token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_tokens\"\n)\n\nselect\n    p.ts,\n    p.market_address,\n    p.price,\n    COALESCE(\n        t.token_symbol,\n        p.market_symbol\n    ) as market_symbol\nfrom\n    all_prices as p\nleft join tokens as t\n    on LOWER(\n        p.market_address\n    ) = LOWER(\n        t.token_address\n    )", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.107658Z", "completed_at": "2025-03-04T12:53:15.115617Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.122678Z", "completed_at": "2025-03-04T12:53:15.122691Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02318286895751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_sepolia_long_oi__True__0.d3603acb30", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not long_oi >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.117858Z", "completed_at": "2025-03-04T12:53:15.126123Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.128622Z", "completed_at": "2025-03-04T12:53:15.128631Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016179800033569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_sepolia_market_id__True__0.4fa717e8b8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.130074Z", "completed_at": "2025-03-04T12:53:15.149409Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.151711Z", "completed_at": "2025-03-04T12:53:15.151723Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02736067771911621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_sepolia_market_oi_usd__True__0.4471884e57", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_oi_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.136198Z", "completed_at": "2025-03-04T12:53:15.151034Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.158397Z", "completed_at": "2025-03-04T12:53:15.158410Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031844139099121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_sepolia_prev_size__True__0.22f4d04d76", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not prev_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.143706Z", "completed_at": "2025-03-04T12:53:15.152624Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.160216Z", "completed_at": "2025-03-04T12:53:15.160225Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.032361507415771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_sepolia_short_oi__True__0.8b32523c71", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not short_oi >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.153227Z", "completed_at": "2025-03-04T12:53:15.162084Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.164770Z", "completed_at": "2025-03-04T12:53:15.164784Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016284704208374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_arbitrum_sepolia_total_oi_usd__True__0.4f341c2df9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_oi_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.174093Z", "completed_at": "2025-03-04T12:53:15.184888Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.186872Z", "completed_at": "2025-03-04T12:53:15.186884Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022922992706298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_funding_rate.0c7c4681c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_rate\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere funding_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.168139Z", "completed_at": "2025-03-04T12:53:15.185557Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.187866Z", "completed_at": "2025-03-04T12:53:15.187876Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025266408920288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_block_number.bf6af7baa5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.179678Z", "completed_at": "2025-03-04T12:53:15.188716Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.197520Z", "completed_at": "2025-03-04T12:53:15.197529Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03137326240539551, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_funding_rate_apr.e818a3e5bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_rate_apr\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere funding_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.189298Z", "completed_at": "2025-03-04T12:53:15.199142Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.201674Z", "completed_at": "2025-03-04T12:53:15.201685Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022942781448364258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_funding_velocity.b534721653", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_velocity\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere funding_velocity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.203764Z", "completed_at": "2025-03-04T12:53:15.214843Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.221253Z", "completed_at": "2025-03-04T12:53:15.221266Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02282881736755371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_id.c07e81599c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.209003Z", "completed_at": "2025-03-04T12:53:15.219881Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.222306Z", "completed_at": "2025-03-04T12:53:15.222316Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022640466690063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_interest_rate.fd928f3550", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.215552Z", "completed_at": "2025-03-04T12:53:15.223193Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.229715Z", "completed_at": "2025-03-04T12:53:15.229724Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02672100067138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_long_oi.e7014159f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect long_oi\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere long_oi is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.223804Z", "completed_at": "2025-03-04T12:53:15.232127Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.234623Z", "completed_at": "2025-03-04T12:53:15.234632Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02057504653930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_long_rate_apr.079c76b379", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect long_rate_apr\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere long_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.241201Z", "completed_at": "2025-03-04T12:53:15.249515Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.256298Z", "completed_at": "2025-03-04T12:53:15.256312Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02499675750732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_market_oi_usd.1a801f1301", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_oi_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere market_oi_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.236135Z", "completed_at": "2025-03-04T12:53:15.250164Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.257327Z", "completed_at": "2025-03-04T12:53:15.257335Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026658058166503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_market_id.319db3ddd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.251421Z", "completed_at": "2025-03-04T12:53:15.259808Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.266676Z", "completed_at": "2025-03-04T12:53:15.266691Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03130769729614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_market_symbol.bf10fe08a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.261100Z", "completed_at": "2025-03-04T12:53:15.268967Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.275403Z", "completed_at": "2025-03-04T12:53:15.275413Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02480006217956543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_prev_size.ba65490763", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prev_size\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere prev_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.270812Z", "completed_at": "2025-03-04T12:53:15.282294Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.284312Z", "completed_at": "2025-03-04T12:53:15.284321Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01845860481262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_price.fb63891fb4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.276953Z", "completed_at": "2025-03-04T12:53:15.285155Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.292056Z", "completed_at": "2025-03-04T12:53:15.292067Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024578094482421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_short_oi.58448f0257", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_oi\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere short_oi is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.285778Z", "completed_at": "2025-03-04T12:53:15.300882Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.303482Z", "completed_at": "2025-03-04T12:53:15.303491Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02729034423828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_short_rate_apr.387df474b7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_rate_apr\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere short_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.293078Z", "completed_at": "2025-03-04T12:53:15.302882Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.309456Z", "completed_at": "2025-03-04T12:53:15.309488Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025960445404052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_size.6a0b574e1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect size\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.304346Z", "completed_at": "2025-03-04T12:53:15.316599Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.319342Z", "completed_at": "2025-03-04T12:53:15.319352Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021203279495239258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_size_delta.03007f03ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect size_delta\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere size_delta is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.311201Z", "completed_at": "2025-03-04T12:53:15.318768Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.321423Z", "completed_at": "2025-03-04T12:53:15.321432Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0193023681640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_skew.dcf5d90983", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect skew\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere skew is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.323027Z", "completed_at": "2025-03-04T12:53:15.334913Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.337326Z", "completed_at": "2025-03-04T12:53:15.337335Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02014923095703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_total_oi_usd.b03faabf97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_oi_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere total_oi_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.327618Z", "completed_at": "2025-03-04T12:53:15.336125Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.342701Z", "completed_at": "2025-03-04T12:53:15.342709Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02471137046813965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_transaction_hash.7c5d714791", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.338228Z", "completed_at": "2025-03-04T12:53:15.352233Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.354823Z", "completed_at": "2025-03-04T12:53:15.354839Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021675586700439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_arbitrum_sepolia_ts.0a97082751", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.343640Z", "completed_at": "2025-03-04T12:53:15.354224Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.361044Z", "completed_at": "2025-03-04T12:53:15.361052Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026871442794799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_market_history_arbitrum_sepolia_id.5ebcf62272", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_history_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.356303Z", "completed_at": "2025-03-04T12:53:15.368757Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.371320Z", "completed_at": "2025-03-04T12:53:15.371329Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01981186866760254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_orders_arbitrum_sepolia_market_id__True__0.0950ca5dc6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.362755Z", "completed_at": "2025-03-04T12:53:15.370156Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.372800Z", "completed_at": "2025-03-04T12:53:15.372807Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019955873489379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_sepolia_account_id.c9eae65168", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.373660Z", "completed_at": "2025-03-04T12:53:15.385621Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.388004Z", "completed_at": "2025-03-04T12:53:15.388014Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019995927810668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_sepolia_block_number.9a237cda1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.378886Z", "completed_at": "2025-03-04T12:53:15.386835Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.393508Z", "completed_at": "2025-03-04T12:53:15.393518Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02411198616027832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_sepolia_contract.f0c534a661", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.388919Z", "completed_at": "2025-03-04T12:53:15.402625Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.405081Z", "completed_at": "2025-03-04T12:53:15.405090Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021017789840698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_sepolia_id.0a35a6cefb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.394475Z", "completed_at": "2025-03-04T12:53:15.403874Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.406578Z", "completed_at": "2025-03-04T12:53:15.406585Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021669626235961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_sepolia_market_id.e4f932e2e7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.408710Z", "completed_at": "2025-03-04T12:53:15.419909Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.422297Z", "completed_at": "2025-03-04T12:53:15.422307Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019231081008911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_sepolia_market_symbol.2104bc133c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.413928Z", "completed_at": "2025-03-04T12:53:15.421119Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.427627Z", "completed_at": "2025-03-04T12:53:15.427635Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02330923080444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_sepolia_transaction_hash.abdc2734c4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.423190Z", "completed_at": "2025-03-04T12:53:15.436025Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.438385Z", "completed_at": "2025-03-04T12:53:15.438393Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02024078369140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_arbitrum_sepolia_ts.ed27702e6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.428530Z", "completed_at": "2025-03-04T12:53:15.436645Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.439263Z", "completed_at": "2025-03-04T12:53:15.439273Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02027130126953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_orders_arbitrum_sepolia_id.e2567e2470", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_orders_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.440160Z", "completed_at": "2025-03-04T12:53:15.452259Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.454226Z", "completed_at": "2025-03-04T12:53:15.454238Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019648075103759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_activity_arbitrum_sepolia", "compiled": true, "compiled_code": "\n\nwith active_accounts as (\n    select distinct\n        date_trunc('day', ts) as activity_date,\n        account_id\n    from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\ndate_range as (\n    select\n        generate_series(\n            date(min(activity_date)),\n            date(max(activity_date)),\n            interval '1 day'\n        )::date as activity_date\n    from active_accounts\n),\n\nactive_accounts_daily as (\n    select\n        date_range.activity_date,\n        count(distinct active_accounts.account_id) as active_accounts\n    from date_range\n    left join active_accounts\n        on date_range.activity_date = active_accounts.activity_date\n    group by date_range.activity_date\n),\n\nactive_accounts_monthly as (\n    select\n        date_range.activity_date,\n        count(distinct active_accounts.account_id) as active_accounts\n    from date_range\n    left join active_accounts\n        on\n            date_range.activity_date - interval '27 days'\n            <= active_accounts.activity_date\n            and date_range.activity_date >= active_accounts.activity_date\n    group by date_range.activity_date\n),\n\nnew_accounts as (\n    select\n        min(activity_date) as start_date,\n        account_id\n    from active_accounts\n    group by account_id\n),\n\nnew_accounts_daily as (\n    select\n        date_range.activity_date,\n        count(new_accounts.account_id) as new_accounts\n    from date_range\n    left join new_accounts\n        on date_range.activity_date = new_accounts.start_date\n    group by date_range.activity_date, new_accounts.start_date\n),\n\nnew_accounts_monthly as (\n    select distinct\n        activity_date,\n        sum(new_accounts) over (\n            order by activity_date\n            range between interval '27 days' preceding and current row\n        ) as new_accounts\n    from new_accounts_daily\n)\n\nselect\n    dr.activity_date as ts,\n    dau.active_accounts as dau,\n    mau.active_accounts as mau,\n    new_accounts_daily.new_accounts as new_accounts_daily,\n    new_accounts_monthly.new_accounts as new_accounts_monthly\nfrom date_range as dr\nleft join active_accounts_daily as dau\n    on dr.activity_date = dau.activity_date\nleft join active_accounts_monthly as mau\n    on dr.activity_date = mau.activity_date\nleft join new_accounts_daily\n    on dr.activity_date = new_accounts_daily.activity_date\nleft join new_accounts_monthly\n    on dr.activity_date = new_accounts_monthly.activity_date\norder by ts desc", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_activity_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.444327Z", "completed_at": "2025-03-04T12:53:15.455090Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.460302Z", "completed_at": "2025-03-04T12:53:15.460309Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024997472763061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_stats_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        ts,\n        account_id,\n        total_fees,\n        notional_trade_size,\n        1 as trades,\n        SUM(\n            total_fees\n        ) over (\n            partition by account_id\n            order by\n                ts\n        ) as cumulative_fees,\n        SUM(\n            notional_trade_size\n        ) over (\n            partition by account_id\n            order by\n                ts\n        ) as cumulative_volume\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nliq as (\n    select\n        ts,\n        account_id,\n        amount_liquidated,\n        1 as liquidations\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\n),\n\ninc_trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        account_id,\n        SUM(trades) as trades,\n        SUM(total_fees) as fees,\n        SUM(notional_trade_size) as volume,\n        MAX(cumulative_fees) as cumulative_fees,\n        MAX(cumulative_volume) as cumulative_volume\n    from\n        trades\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        account_id\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        account_id,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        account_id\n),\n\ninc as (\n    select\n        h.ts,\n        h.account_id,\n        COALESCE(\n            h.trades,\n            0\n        ) as trades,\n        COALESCE(\n            h.fees,\n            0\n        ) as fees,\n        COALESCE(\n            h.volume,\n            0\n        ) as volume,\n        COALESCE(\n            l.amount_liquidated,\n            0\n        ) as amount_liquidated,\n        COALESCE(\n            l.liquidations,\n            0\n        ) as liquidations,\n        COALESCE(\n            h.cumulative_fees,\n            0\n        ) as cumulative_fees,\n        COALESCE(\n            h.cumulative_volume,\n            0\n        ) as cumulative_volume\n    from\n        inc_trades as h\n    left join inc_liq as l\n        on\n            h.ts = l.ts\n            and h.account_id = l.account_id\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_stats_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.456271Z", "completed_at": "2025-03-04T12:53:15.466108Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.468818Z", "completed_at": "2025-03-04T12:53:15.468829Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017482519149780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_keeper_stats_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        settler,\n        settlement_reward,\n        notional_trade_size,\n        1 as trades,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(settlement_reward) as settlement_reward_total,\n        SUM(notional_trade_size) as notional_trade_size_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.settler as keeper,\n    SUM(trades.trades) as trades,\n    SUM(trades.settlement_reward) as settlement_rewards,\n    SUM(trades.notional_trade_size) as amount_settled,\n    SUM(trades.trades) / MAX(total.trades_total) as trades_pct,\n    SUM(trades.settlement_reward)\n    / MAX(total.settlement_reward_total) as settlement_rewards_pct,\n    SUM(trades.notional_trade_size)\n    / MAX(total.notional_trade_size_total) as amount_settled_pct\nfrom\n    trades\ninner join total\n    on trades.ts = total.ts\ngroup by\n    trades.ts,\n    trades.settler", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_keeper_stats_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.461475Z", "completed_at": "2025-03-04T12:53:15.468212Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.474114Z", "completed_at": "2025-03-04T12:53:15.474121Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02130270004272461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_stats_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        ts,\n        market_symbol,\n        exchange_fees,\n        referral_fees,\n        collected_fees,\n        notional_trade_size,\n        1 as trades\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nliq as (\n    select\n        ts,\n        market_symbol,\n        amount_liquidated,\n        1 as liquidations\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_position_arbitrum_sepolia\"\n),\n\ninc_trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        market_symbol,\n        SUM(trades) as trades,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(notional_trade_size) as volume\n    from\n        trades\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        market_symbol\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        market_symbol,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        market_symbol\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                trades\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            trades\n    ) as m\n    group by\n        m.market_symbol\n),\n\ninc as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        COALESCE(\n            h.trades,\n            0\n        ) as trades,\n        COALESCE(\n            h.exchange_fees,\n            0\n        ) as exchange_fees,\n        COALESCE(\n            h.referral_fees,\n            0\n        ) as referral_fees,\n        COALESCE(\n            h.collected_fees,\n            0\n        ) as collected_fees,\n        COALESCE(\n            h.volume,\n            0\n        ) as volume,\n        COALESCE(\n            l.amount_liquidated,\n            0\n        ) as amount_liquidated,\n        COALESCE(\n            l.liquidations,\n            0\n        ) as liquidations,\n        SUM(\n            h.exchange_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_exchange_fees,\n        SUM(\n            h.referral_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_referral_fees,\n        SUM(\n            h.collected_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_collected_fees,\n        SUM(\n            h.volume\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_volume\n    from\n        dim\n    left join inc_trades as h\n        on\n            dim.ts = h.ts\n            and dim.market_symbol = h.market_symbol\n    left join inc_liq as l\n        on\n            dim.ts = l.ts\n            and dim.market_symbol = l.market_symbol\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_stats_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.470334Z", "completed_at": "2025-03-04T12:53:15.478001Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.484945Z", "completed_at": "2025-03-04T12:53:15.484954Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019623279571533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_tracking_stats_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        tracking_code,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(notional_trade_size) as volume,\n        SUM(1) as trades\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        tracking_code\n),\n\naccounts as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        tracking_code,\n        COUNT(\n            distinct account_id\n        ) as \"accounts\"\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        tracking_code\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(exchange_fees) as exchange_fees_total,\n        SUM(referral_fees) as referral_fees_total,\n        SUM(collected_fees) as collected_fees_total,\n        SUM(volume) as volume_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.tracking_code,\n    trades.exchange_fees,\n    trades.referral_fees,\n    trades.collected_fees,\n    trades.volume,\n    trades.trades,\n    accounts.accounts,\n    case\n        when total.exchange_fees_total = 0 then 0\n        else trades.exchange_fees / total.exchange_fees_total\n    end as exchange_fees_share,\n    case\n        when total.referral_fees_total = 0 then 0\n        else trades.referral_fees / total.referral_fees_total\n    end as referral_fees_share,\n    case\n        when total.collected_fees_total = 0 then 0\n        else trades.collected_fees / total.collected_fees_total\n    end as collected_fees_share,\n    case\n        when total.volume_total = 0 then 0\n        else trades.volume / total.volume_total\n    end as volume_share,\n    case\n        when total.trades_total = 0 then 0\n        else trades.trades / total.trades_total\n    end as trades_share\nfrom\n    trades\ninner join accounts\n    on\n        trades.ts = accounts.ts\n        and trades.tracking_code = accounts.tracking_code\ninner join total\n    on trades.ts = total.ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_tracking_stats_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.478734Z", "completed_at": "2025-03-04T12:53:15.491193Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.499524Z", "completed_at": "2025-03-04T12:53:15.499535Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029957294464111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_sepolia_collected_fees__True__0.f8c115c059", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.486614Z", "completed_at": "2025-03-04T12:53:15.501206Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.503820Z", "completed_at": "2025-03-04T12:53:15.503831Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026622295379638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_sepolia_exchange_fees__True__0.8551cec8b5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not exchange_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.492621Z", "completed_at": "2025-03-04T12:53:15.503220Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.510087Z", "completed_at": "2025-03-04T12:53:15.510096Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026688098907470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_sepolia_fill_price__True__0.84d6f40700", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fill_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.505336Z", "completed_at": "2025-03-04T12:53:15.513129Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.519890Z", "completed_at": "2025-03-04T12:53:15.519899Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019415855407714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_sepolia_lp_fees__True__0.4031a219b2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not lp_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.514427Z", "completed_at": "2025-03-04T12:53:15.522168Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.533015Z", "completed_at": "2025-03-04T12:53:15.533028Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02845478057861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_sepolia_market_id__True__0.6123a5e0f8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.528192Z", "completed_at": "2025-03-04T12:53:15.535949Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.538335Z", "completed_at": "2025-03-04T12:53:15.538347Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01938152313232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_sepolia_settlement_reward__True__0.f9a75fbfd2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not settlement_reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.523431Z", "completed_at": "2025-03-04T12:53:15.537087Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.544153Z", "completed_at": "2025-03-04T12:53:15.544167Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030507802963256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_sepolia_referral_fees__True__0.f37cc98502", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not referral_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.539240Z", "completed_at": "2025-03-04T12:53:15.547406Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.555870Z", "completed_at": "2025-03-04T12:53:15.555879Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021816253662109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_arbitrum_sepolia_total_fees__True__0.7a97931ad2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.548028Z", "completed_at": "2025-03-04T12:53:15.558090Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.568125Z", "completed_at": "2025-03-04T12:53:15.568134Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030529022216796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_account_id.87c909f789", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.559363Z", "completed_at": "2025-03-04T12:53:15.570914Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.573341Z", "completed_at": "2025-03-04T12:53:15.573349Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01887989044189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_accrued_funding.d1353dabad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accrued_funding\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere accrued_funding is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.563778Z", "completed_at": "2025-03-04T12:53:15.571561Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.574216Z", "completed_at": "2025-03-04T12:53:15.574224Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0191037654876709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_block_number.e05ab0ce3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.575103Z", "completed_at": "2025-03-04T12:53:15.587695Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.590229Z", "completed_at": "2025-03-04T12:53:15.590240Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021283626556396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_collected_fees.1a014bf126", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.581763Z", "completed_at": "2025-03-04T12:53:15.589635Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.601951Z", "completed_at": "2025-03-04T12:53:15.601960Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029358863830566406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_contract.b7fc20d311", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.591145Z", "completed_at": "2025-03-04T12:53:15.604521Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.607121Z", "completed_at": "2025-03-04T12:53:15.607133Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02103567123413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_exchange_fees.daa870eeea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exchange_fees\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere exchange_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.595587Z", "completed_at": "2025-03-04T12:53:15.606509Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.609178Z", "completed_at": "2025-03-04T12:53:15.609188Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022194623947143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_fill_price.e01f35e7e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fill_price\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere fill_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.615585Z", "completed_at": "2025-03-04T12:53:15.622704Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.625048Z", "completed_at": "2025-03-04T12:53:15.625058Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019383668899536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_lp_fees.e0ce3fdd00", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lp_fees\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere lp_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.610745Z", "completed_at": "2025-03-04T12:53:15.623295Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.626097Z", "completed_at": "2025-03-04T12:53:15.626107Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021020174026489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_id.cc6815332b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.631631Z", "completed_at": "2025-03-04T12:53:15.638074Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.640555Z", "completed_at": "2025-03-04T12:53:15.640565Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01867532730102539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_market_symbol.c6a6aa478b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.627005Z", "completed_at": "2025-03-04T12:53:15.638688Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.641430Z", "completed_at": "2025-03-04T12:53:15.641438Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020605802536010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_market_id.2c1fcea791", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.644817Z", "completed_at": "2025-03-04T12:53:15.657669Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.660008Z", "completed_at": "2025-03-04T12:53:15.660019Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020887374877929688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_notional_position_size.718ab14890", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect notional_position_size\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere notional_position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.651677Z", "completed_at": "2025-03-04T12:53:15.658237Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.660922Z", "completed_at": "2025-03-04T12:53:15.660930Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021119117736816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_notional_trade_size.96d394476f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect notional_trade_size\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere notional_trade_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.661820Z", "completed_at": "2025-03-04T12:53:15.674053Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.676397Z", "completed_at": "2025-03-04T12:53:15.676407Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020529508590698242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_pnl.cd004b1f6c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pnl\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.666303Z", "completed_at": "2025-03-04T12:53:15.674635Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.677297Z", "completed_at": "2025-03-04T12:53:15.677305Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020635366439819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_position_size.451b8cbb68", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_size\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.678183Z", "completed_at": "2025-03-04T12:53:15.689876Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.692273Z", "completed_at": "2025-03-04T12:53:15.692283Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019741058349609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_referral_fees.5aade6b5e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referral_fees\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere referral_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.682897Z", "completed_at": "2025-03-04T12:53:15.690509Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.693181Z", "completed_at": "2025-03-04T12:53:15.693190Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019818782806396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_settlement_reward.aa985f0df2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settlement_reward\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere settlement_reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.694653Z", "completed_at": "2025-03-04T12:53:15.708306Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.710841Z", "completed_at": "2025-03-04T12:53:15.710851Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021730422973632812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_settler.bc87147eb6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settler\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere settler is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.702542Z", "completed_at": "2025-03-04T12:53:15.710224Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.721042Z", "completed_at": "2025-03-04T12:53:15.721055Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030136823654174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_total_fees.76dcb57c24", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_fees\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere total_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.716405Z", "completed_at": "2025-03-04T12:53:15.724494Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.726945Z", "completed_at": "2025-03-04T12:53:15.726953Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019342422485351562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_trade_size.2d16719cfa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect trade_size\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere trade_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.711754Z", "completed_at": "2025-03-04T12:53:15.725747Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.728441Z", "completed_at": "2025-03-04T12:53:15.728448Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021575212478637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_tracking_code.653ddd5967", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tracking_code\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere tracking_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.729327Z", "completed_at": "2025-03-04T12:53:15.740769Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.743174Z", "completed_at": "2025-03-04T12:53:15.743184Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019413471221923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_transaction_hash.cdee9e9027", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.734724Z", "completed_at": "2025-03-04T12:53:15.742000Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.744693Z", "completed_at": "2025-03-04T12:53:15.744701Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019676685333251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_arbitrum_sepolia_ts.7168a7dcb9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.752715Z", "completed_at": "2025-03-04T12:53:15.760434Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.766998Z", "completed_at": "2025-03-04T12:53:15.767010Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025794029235839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_base_mainnet_amount_liquidated__True__0.51c2fa3b3f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_liquidated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.745563Z", "completed_at": "2025-03-04T12:53:15.761000Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.768071Z", "completed_at": "2025-03-04T12:53:15.768080Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02826404571533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_trades_arbitrum_sepolia_id.97727d3bc8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.762167Z", "completed_at": "2025-03-04T12:53:15.775338Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.778068Z", "completed_at": "2025-03-04T12:53:15.778077Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020006656646728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_base_mainnet_market_id__True__0.149bc69560", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.768979Z", "completed_at": "2025-03-04T12:53:15.776869Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.779564Z", "completed_at": "2025-03-04T12:53:15.779571Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020550251007080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_base_mainnet_position_size__True__0.a626e988d4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not position_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.781633Z", "completed_at": "2025-03-04T12:53:15.793829Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.802309Z", "completed_at": "2025-03-04T12:53:15.802320Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0263521671295166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_account_id.f3ec9ddba7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.787095Z", "completed_at": "2025-03-04T12:53:15.800162Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.807596Z", "completed_at": "2025-03-04T12:53:15.807606Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030303239822387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_amount_liquidated.893ef59124", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_liquidated\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere amount_liquidated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.795066Z", "completed_at": "2025-03-04T12:53:15.810478Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.813243Z", "completed_at": "2025-03-04T12:53:15.813252Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02186870574951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_block_number.da16c5c256", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.803245Z", "completed_at": "2025-03-04T12:53:15.811071Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.814137Z", "completed_at": "2025-03-04T12:53:15.814145Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02186894416809082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_id.4311fef5a1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.822434Z", "completed_at": "2025-03-04T12:53:15.829771Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.839827Z", "completed_at": "2025-03-04T12:53:15.839843Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027376890182495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_market_symbol.a84ac24b5f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.817564Z", "completed_at": "2025-03-04T12:53:15.830395Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.840977Z", "completed_at": "2025-03-04T12:53:15.840985Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02916884422302246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_market_id.7f965252ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.830969Z", "completed_at": "2025-03-04T12:53:15.842862Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.845406Z", "completed_at": "2025-03-04T12:53:15.845414Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018674850463867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_position_size.dcfe3d8623", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_size\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.835478Z", "completed_at": "2025-03-04T12:53:15.843487Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.846282Z", "completed_at": "2025-03-04T12:53:15.846290Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018855810165405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_transaction_hash.d54f66674c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.850393Z", "completed_at": "2025-03-04T12:53:15.864170Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.874523Z", "completed_at": "2025-03-04T12:53:15.874535Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029889583587646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_mainnet_ts.2dc7a4a976", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.858392Z", "completed_at": "2025-03-04T12:53:15.868987Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.875606Z", "completed_at": "2025-03-04T12:53:15.875616Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028580188751220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_liq_position_base_mainnet_id.f46ba34fa7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.869738Z", "completed_at": "2025-03-04T12:53:15.877321Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.880042Z", "completed_at": "2025-03-04T12:53:15.880049Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022370576858520508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_mainnet_long_oi__True__0.d6805161d5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not long_oi >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.864876Z", "completed_at": "2025-03-04T12:53:15.879448Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.882133Z", "completed_at": "2025-03-04T12:53:15.882140Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02513575553894043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_base_mainnet", "compiled": true, "compiled_code": "with all_prices as (\n    select\n        ts,\n        null as market_address,\n        market_symbol,\n        price\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\n    union all\n    select\n        ts,\n        null as market_address,\n        'SNX' as market_symbol,\n        snx_price as price\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_buyback_base_mainnet\"\n    where\n        snx_price > 0\n    union all\n    select\n        ts,\n        collateral_type as market_address,\n        null as market_symbol,\n        collateral_value / amount as price\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\n    where\n        collateral_value > 0\n),\n\ntokens as (\n    select\n        token_address,\n        token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"base_mainnet_tokens\"\n)\n\nselect\n    p.ts,\n    p.market_address,\n    p.price,\n    COALESCE(\n        t.token_symbol,\n        p.market_symbol\n    ) as market_symbol\nfrom\n    all_prices as p\nleft join tokens as t\n    on LOWER(\n        p.market_address\n    ) = LOWER(\n        t.token_address\n    )", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_prices_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.891008Z", "completed_at": "2025-03-04T12:53:15.897845Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.910547Z", "completed_at": "2025-03-04T12:53:15.910563Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02978992462158203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_mainnet_market_oi_usd__True__0.ba5189fe54", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_oi_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.884278Z", "completed_at": "2025-03-04T12:53:15.898450Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.911565Z", "completed_at": "2025-03-04T12:53:15.911572Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.032965898513793945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_mainnet_market_id__True__0.c7e76b30aa", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.899045Z", "completed_at": "2025-03-04T12:53:15.914025Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.916639Z", "completed_at": "2025-03-04T12:53:15.916647Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026593923568725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_mainnet_prev_size__True__0.10c23dc280", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not prev_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.906023Z", "completed_at": "2025-03-04T12:53:15.914772Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.917519Z", "completed_at": "2025-03-04T12:53:15.917527Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021834135055541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_mainnet_short_oi__True__0.cc21c1531b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not short_oi >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.920816Z", "completed_at": "2025-03-04T12:53:15.932842Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.939142Z", "completed_at": "2025-03-04T12:53:15.939157Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023960351943969727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_mainnet_total_oi_usd__True__0.8010bbacea", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_oi_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.925915Z", "completed_at": "2025-03-04T12:53:15.934018Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.944648Z", "completed_at": "2025-03-04T12:53:15.944661Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028795480728149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_block_number.485f73c767", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.934636Z", "completed_at": "2025-03-04T12:53:15.946533Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.949261Z", "completed_at": "2025-03-04T12:53:15.949271Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018847942352294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_funding_rate.904532dfcd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_rate\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere funding_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.940239Z", "completed_at": "2025-03-04T12:53:15.947951Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.950798Z", "completed_at": "2025-03-04T12:53:15.950808Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019646406173706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_funding_rate_apr.50943753dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_rate_apr\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere funding_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.954172Z", "completed_at": "2025-03-04T12:53:15.967863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.974028Z", "completed_at": "2025-03-04T12:53:15.974040Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025566816329956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_funding_velocity.0bd6fa06fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_velocity\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere funding_velocity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.961830Z", "completed_at": "2025-03-04T12:53:15.969050Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.979530Z", "completed_at": "2025-03-04T12:53:15.979540Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02951335906982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_id.c9dbfad377", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.969660Z", "completed_at": "2025-03-04T12:53:15.982224Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.984739Z", "completed_at": "2025-03-04T12:53:15.984748Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023825407028198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_interest_rate.2c5e879eef", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.975149Z", "completed_at": "2025-03-04T12:53:15.984117Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:15.986905Z", "completed_at": "2025-03-04T12:53:15.986915Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02083134651184082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_long_oi.4f30d69bd5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect long_oi\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere long_oi is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.988716Z", "completed_at": "2025-03-04T12:53:16.000379Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.002784Z", "completed_at": "2025-03-04T12:53:16.002798Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020041704177856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_long_rate_apr.785d324d07", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect long_rate_apr\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere long_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:15.993590Z", "completed_at": "2025-03-04T12:53:16.000966Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.003716Z", "completed_at": "2025-03-04T12:53:16.003724Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020256757736206055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_market_id.cab90009a8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.005165Z", "completed_at": "2025-03-04T12:53:16.019884Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.022383Z", "completed_at": "2025-03-04T12:53:16.022394Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02317357063293457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_market_oi_usd.5931c83a6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_oi_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere market_oi_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.013724Z", "completed_at": "2025-03-04T12:53:16.021195Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.027890Z", "completed_at": "2025-03-04T12:53:16.027902Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026475191116333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_market_symbol.c60910b39a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.023293Z", "completed_at": "2025-03-04T12:53:16.035234Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.037779Z", "completed_at": "2025-03-04T12:53:16.037789Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01945948600769043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_prev_size.9edab680c8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prev_size\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere prev_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.028997Z", "completed_at": "2025-03-04T12:53:16.036552Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.039269Z", "completed_at": "2025-03-04T12:53:16.039277Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0200955867767334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_price.acf046de31", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.041391Z", "completed_at": "2025-03-04T12:53:16.054838Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.057213Z", "completed_at": "2025-03-04T12:53:16.057224Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02144002914428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_short_oi.987f3728f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_oi\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere short_oi is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.046997Z", "completed_at": "2025-03-04T12:53:16.056055Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.062954Z", "completed_at": "2025-03-04T12:53:16.062965Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025973081588745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_short_rate_apr.a2f2135476", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_rate_apr\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere short_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.064063Z", "completed_at": "2025-03-04T12:53:16.071237Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.073714Z", "completed_at": "2025-03-04T12:53:16.073728Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019791364669799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_size_delta.c2cfd7a96f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect size_delta\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere size_delta is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.058154Z", "completed_at": "2025-03-04T12:53:16.071896Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.074631Z", "completed_at": "2025-03-04T12:53:16.074639Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021476268768310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_size.3bbf16be92", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect size\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.076099Z", "completed_at": "2025-03-04T12:53:16.089137Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.091654Z", "completed_at": "2025-03-04T12:53:16.091666Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02122640609741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_skew.a4d473f3fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect skew\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere skew is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.082770Z", "completed_at": "2025-03-04T12:53:16.090490Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.097426Z", "completed_at": "2025-03-04T12:53:16.097437Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02516031265258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_total_oi_usd.dacf6f4eea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_oi_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere total_oi_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.092586Z", "completed_at": "2025-03-04T12:53:16.107059Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.109658Z", "completed_at": "2025-03-04T12:53:16.109672Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02208089828491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_transaction_hash.d53db511d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.098541Z", "completed_at": "2025-03-04T12:53:16.109050Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.111762Z", "completed_at": "2025-03-04T12:53:16.111771Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023311138153076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_mainnet_ts.d5f4e338d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.118112Z", "completed_at": "2025-03-04T12:53:16.125589Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.127976Z", "completed_at": "2025-03-04T12:53:16.127986Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01965951919555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_orders_base_mainnet_market_id__True__0.2d585533fc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.113318Z", "completed_at": "2025-03-04T12:53:16.126805Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.133541Z", "completed_at": "2025-03-04T12:53:16.133550Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025922060012817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_market_history_base_mainnet_id.8b11f687f0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_history_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.128884Z", "completed_at": "2025-03-04T12:53:16.141453Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.143867Z", "completed_at": "2025-03-04T12:53:16.143877Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020154476165771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_mainnet_account_id.08880589a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.134431Z", "completed_at": "2025-03-04T12:53:16.142023Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.144783Z", "completed_at": "2025-03-04T12:53:16.144791Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020023584365844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_mainnet_block_number.3be9f0b718", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.146245Z", "completed_at": "2025-03-04T12:53:16.161057Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.163478Z", "completed_at": "2025-03-04T12:53:16.163489Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02281975746154785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_mainnet_contract.6a5b003b92", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.152693Z", "completed_at": "2025-03-04T12:53:16.162879Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.173741Z", "completed_at": "2025-03-04T12:53:16.173754Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031267404556274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_mainnet_id.2c415fb4fb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.164353Z", "completed_at": "2025-03-04T12:53:16.177249Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.179672Z", "completed_at": "2025-03-04T12:53:16.179683Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02013707160949707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_mainnet_market_id.5b936d3011", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.169127Z", "completed_at": "2025-03-04T12:53:16.177879Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.180631Z", "completed_at": "2025-03-04T12:53:16.180639Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02037835121154785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_mainnet_market_symbol.554f14b42b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.182070Z", "completed_at": "2025-03-04T12:53:16.194547Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.197029Z", "completed_at": "2025-03-04T12:53:16.197041Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020503520965576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_mainnet_transaction_hash.71d76cac79", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.188409Z", "completed_at": "2025-03-04T12:53:16.195893Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.202872Z", "completed_at": "2025-03-04T12:53:16.202885Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02460169792175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_mainnet_ts.a61957fc22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.203916Z", "completed_at": "2025-03-04T12:53:16.213037Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.215577Z", "completed_at": "2025-03-04T12:53:16.215589Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021743297576904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_activity_base_mainnet", "compiled": true, "compiled_code": "\n\nwith active_accounts as (\n    select distinct\n        date_trunc('day', ts) as activity_date,\n        account_id\n    from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\ndate_range as (\n    select\n        generate_series(\n            date(min(activity_date)),\n            date(max(activity_date)),\n            interval '1 day'\n        )::date as activity_date\n    from active_accounts\n),\n\nactive_accounts_daily as (\n    select\n        date_range.activity_date,\n        count(distinct active_accounts.account_id) as active_accounts\n    from date_range\n    left join active_accounts\n        on date_range.activity_date = active_accounts.activity_date\n    group by date_range.activity_date\n),\n\nactive_accounts_monthly as (\n    select\n        date_range.activity_date,\n        count(distinct active_accounts.account_id) as active_accounts\n    from date_range\n    left join active_accounts\n        on\n            date_range.activity_date - interval '27 days'\n            <= active_accounts.activity_date\n            and date_range.activity_date >= active_accounts.activity_date\n    group by date_range.activity_date\n),\n\nnew_accounts as (\n    select\n        min(activity_date) as start_date,\n        account_id\n    from active_accounts\n    group by account_id\n),\n\nnew_accounts_daily as (\n    select\n        date_range.activity_date,\n        count(new_accounts.account_id) as new_accounts\n    from date_range\n    left join new_accounts\n        on date_range.activity_date = new_accounts.start_date\n    group by date_range.activity_date, new_accounts.start_date\n),\n\nnew_accounts_monthly as (\n    select distinct\n        activity_date,\n        sum(new_accounts) over (\n            order by activity_date\n            range between interval '27 days' preceding and current row\n        ) as new_accounts\n    from new_accounts_daily\n)\n\nselect\n    dr.activity_date as ts,\n    dau.active_accounts as dau,\n    mau.active_accounts as mau,\n    new_accounts_daily.new_accounts as new_accounts_daily,\n    new_accounts_monthly.new_accounts as new_accounts_monthly\nfrom date_range as dr\nleft join active_accounts_daily as dau\n    on dr.activity_date = dau.activity_date\nleft join active_accounts_monthly as mau\n    on dr.activity_date = mau.activity_date\nleft join new_accounts_daily\n    on dr.activity_date = new_accounts_daily.activity_date\nleft join new_accounts_monthly\n    on dr.activity_date = new_accounts_monthly.activity_date\norder by ts desc", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_account_activity_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.197956Z", "completed_at": "2025-03-04T12:53:16.213619Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.216477Z", "completed_at": "2025-03-04T12:53:16.216488Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023409605026245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_orders_base_mainnet_id.1b8b85dac5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_orders_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.217956Z", "completed_at": "2025-03-04T12:53:16.229641Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.232067Z", "completed_at": "2025-03-04T12:53:16.232081Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019926071166992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_stats_hourly_base_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        ts,\n        account_id,\n        total_fees,\n        notional_trade_size,\n        1 as trades,\n        SUM(\n            total_fees\n        ) over (\n            partition by account_id\n            order by\n                ts\n        ) as cumulative_fees,\n        SUM(\n            notional_trade_size\n        ) over (\n            partition by account_id\n            order by\n                ts\n        ) as cumulative_volume\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nliq as (\n    select\n        ts,\n        account_id,\n        amount_liquidated,\n        1 as liquidations\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\n),\n\ninc_trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        account_id,\n        SUM(trades) as trades,\n        SUM(total_fees) as fees,\n        SUM(notional_trade_size) as volume,\n        MAX(cumulative_fees) as cumulative_fees,\n        MAX(cumulative_volume) as cumulative_volume\n    from\n        trades\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        account_id\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        account_id,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        account_id\n),\n\ninc as (\n    select\n        h.ts,\n        h.account_id,\n        COALESCE(\n            h.trades,\n            0\n        ) as trades,\n        COALESCE(\n            h.fees,\n            0\n        ) as fees,\n        COALESCE(\n            h.volume,\n            0\n        ) as volume,\n        COALESCE(\n            l.amount_liquidated,\n            0\n        ) as amount_liquidated,\n        COALESCE(\n            l.liquidations,\n            0\n        ) as liquidations,\n        COALESCE(\n            h.cumulative_fees,\n            0\n        ) as cumulative_fees,\n        COALESCE(\n            h.cumulative_volume,\n            0\n        ) as cumulative_volume\n    from\n        inc_trades as h\n    left join inc_liq as l\n        on\n            h.ts = l.ts\n            and h.account_id = l.account_id\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_account_stats_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.224103Z", "completed_at": "2025-03-04T12:53:16.230839Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.237439Z", "completed_at": "2025-03-04T12:53:16.237453Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023323774337768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_keeper_stats_hourly_base_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        settler,\n        settlement_reward,\n        notional_trade_size,\n        1 as trades,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(settlement_reward) as settlement_reward_total,\n        SUM(notional_trade_size) as notional_trade_size_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.settler as keeper,\n    SUM(trades.trades) as trades,\n    SUM(trades.settlement_reward) as settlement_rewards,\n    SUM(trades.notional_trade_size) as amount_settled,\n    SUM(trades.trades) / MAX(total.trades_total) as trades_pct,\n    SUM(trades.settlement_reward)\n    / MAX(total.settlement_reward_total) as settlement_rewards_pct,\n    SUM(trades.notional_trade_size)\n    / MAX(total.notional_trade_size_total) as amount_settled_pct\nfrom\n    trades\ninner join total\n    on trades.ts = total.ts\ngroup by\n    trades.ts,\n    trades.settler", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_keeper_stats_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.233006Z", "completed_at": "2025-03-04T12:53:16.244316Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.247121Z", "completed_at": "2025-03-04T12:53:16.247132Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019263029098510742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_stats_hourly_base_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        ts,\n        market_symbol,\n        exchange_fees,\n        referral_fees,\n        collected_fees,\n        notional_trade_size,\n        1 as trades\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nliq as (\n    select\n        ts,\n        market_symbol,\n        amount_liquidated,\n        1 as liquidations\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_position_base_mainnet\"\n),\n\ninc_trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        market_symbol,\n        SUM(trades) as trades,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(notional_trade_size) as volume\n    from\n        trades\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        market_symbol\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        market_symbol,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        market_symbol\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                trades\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            trades\n    ) as m\n    group by\n        m.market_symbol\n),\n\ninc as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        COALESCE(\n            h.trades,\n            0\n        ) as trades,\n        COALESCE(\n            h.exchange_fees,\n            0\n        ) as exchange_fees,\n        COALESCE(\n            h.referral_fees,\n            0\n        ) as referral_fees,\n        COALESCE(\n            h.collected_fees,\n            0\n        ) as collected_fees,\n        COALESCE(\n            h.volume,\n            0\n        ) as volume,\n        COALESCE(\n            l.amount_liquidated,\n            0\n        ) as amount_liquidated,\n        COALESCE(\n            l.liquidations,\n            0\n        ) as liquidations,\n        SUM(\n            h.exchange_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_exchange_fees,\n        SUM(\n            h.referral_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_referral_fees,\n        SUM(\n            h.collected_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_collected_fees,\n        SUM(\n            h.volume\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_volume\n    from\n        dim\n    left join inc_trades as h\n        on\n            dim.ts = h.ts\n            and dim.market_symbol = h.market_symbol\n    left join inc_liq as l\n        on\n            dim.ts = l.ts\n            and dim.market_symbol = l.market_symbol\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_market_stats_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.238391Z", "completed_at": "2025-03-04T12:53:16.246517Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.249239Z", "completed_at": "2025-03-04T12:53:16.249249Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020502090454101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_tracking_stats_hourly_base_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        tracking_code,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(notional_trade_size) as volume,\n        SUM(1) as trades\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        tracking_code\n),\n\naccounts as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        tracking_code,\n        COUNT(\n            distinct account_id\n        ) as \"accounts\"\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        tracking_code\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(exchange_fees) as exchange_fees_total,\n        SUM(referral_fees) as referral_fees_total,\n        SUM(collected_fees) as collected_fees_total,\n        SUM(volume) as volume_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.tracking_code,\n    trades.exchange_fees,\n    trades.referral_fees,\n    trades.collected_fees,\n    trades.volume,\n    trades.trades,\n    accounts.accounts,\n    case\n        when total.exchange_fees_total = 0 then 0\n        else trades.exchange_fees / total.exchange_fees_total\n    end as exchange_fees_share,\n    case\n        when total.referral_fees_total = 0 then 0\n        else trades.referral_fees / total.referral_fees_total\n    end as referral_fees_share,\n    case\n        when total.collected_fees_total = 0 then 0\n        else trades.collected_fees / total.collected_fees_total\n    end as collected_fees_share,\n    case\n        when total.volume_total = 0 then 0\n        else trades.volume / total.volume_total\n    end as volume_share,\n    case\n        when total.trades_total = 0 then 0\n        else trades.trades / total.trades_total\n    end as trades_share\nfrom\n    trades\ninner join accounts\n    on\n        trades.ts = accounts.ts\n        and trades.tracking_code = accounts.tracking_code\ninner join total\n    on trades.ts = total.ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_tracking_stats_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.250801Z", "completed_at": "2025-03-04T12:53:16.265571Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.267958Z", "completed_at": "2025-03-04T12:53:16.267968Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022876739501953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_mainnet_collected_fees__True__0.cec844302b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.256275Z", "completed_at": "2025-03-04T12:53:16.266785Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.269427Z", "completed_at": "2025-03-04T12:53:16.269434Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02361154556274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_mainnet_exchange_fees__True__0.43ef826334", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not exchange_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.276299Z", "completed_at": "2025-03-04T12:53:16.283832Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.286221Z", "completed_at": "2025-03-04T12:53:16.286232Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020161867141723633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_mainnet_lp_fees__True__0.67c14ce54a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not lp_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.270296Z", "completed_at": "2025-03-04T12:53:16.285043Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.292287Z", "completed_at": "2025-03-04T12:53:16.292297Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027819156646728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_mainnet_fill_price__True__0.3edbbda7ae", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fill_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.287140Z", "completed_at": "2025-03-04T12:53:16.300562Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.303004Z", "completed_at": "2025-03-04T12:53:16.303017Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02087998390197754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_mainnet_market_id__True__0.585f613862", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.293216Z", "completed_at": "2025-03-04T12:53:16.301796Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.304524Z", "completed_at": "2025-03-04T12:53:16.304533Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021532058715820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_mainnet_referral_fees__True__0.09a87481d6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not referral_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.305396Z", "completed_at": "2025-03-04T12:53:16.320778Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.323211Z", "completed_at": "2025-03-04T12:53:16.323222Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02344036102294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_mainnet_settlement_reward__True__0.56c953ccdc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not settlement_reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.311488Z", "completed_at": "2025-03-04T12:53:16.322610Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.333457Z", "completed_at": "2025-03-04T12:53:16.333493Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03245282173156738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_mainnet_total_fees__True__0.37a3c34f6a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.328914Z", "completed_at": "2025-03-04T12:53:16.336101Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.338658Z", "completed_at": "2025-03-04T12:53:16.338668Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018612384796142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_accrued_funding.f6a962643b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accrued_funding\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere accrued_funding is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.324140Z", "completed_at": "2025-03-04T12:53:16.336747Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.339555Z", "completed_at": "2025-03-04T12:53:16.339563Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020385026931762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_account_id.8a94516fd9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.347915Z", "completed_at": "2025-03-04T12:53:16.354889Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.361474Z", "completed_at": "2025-03-04T12:53:16.361488Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023599624633789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_collected_fees.1888a67b67", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.342945Z", "completed_at": "2025-03-04T12:53:16.356068Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.369343Z", "completed_at": "2025-03-04T12:53:16.369355Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.032175302505493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_block_number.474b7643d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.356695Z", "completed_at": "2025-03-04T12:53:16.371934Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.374551Z", "completed_at": "2025-03-04T12:53:16.374563Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022123098373413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_contract.8897e47e7e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.362416Z", "completed_at": "2025-03-04T12:53:16.373320Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.376020Z", "completed_at": "2025-03-04T12:53:16.376027Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022802352905273438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_exchange_fees.5a4c21716f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exchange_fees\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere exchange_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.378107Z", "completed_at": "2025-03-04T12:53:16.390309Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.392855Z", "completed_at": "2025-03-04T12:53:16.392869Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020283937454223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_fill_price.e731328206", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fill_price\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere fill_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.383958Z", "completed_at": "2025-03-04T12:53:16.392249Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.403052Z", "completed_at": "2025-03-04T12:53:16.403063Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02926468849182129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_id.35375a8491", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.393783Z", "completed_at": "2025-03-04T12:53:16.404987Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.407583Z", "completed_at": "2025-03-04T12:53:16.407591Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01907658576965332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_lp_fees.1da0034ac9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lp_fees\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere lp_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.398524Z", "completed_at": "2025-03-04T12:53:16.406249Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.409100Z", "completed_at": "2025-03-04T12:53:16.409110Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019590377807617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_market_id.6ea4246016", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.412607Z", "completed_at": "2025-03-04T12:53:16.426287Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.432723Z", "completed_at": "2025-03-04T12:53:16.432739Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025974273681640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_market_symbol.e75d95d12c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.418135Z", "completed_at": "2025-03-04T12:53:16.432075Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.438658Z", "completed_at": "2025-03-04T12:53:16.438670Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03036808967590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_notional_position_size.549d1d1b0b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect notional_position_size\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere notional_position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.427660Z", "completed_at": "2025-03-04T12:53:16.439683Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.442511Z", "completed_at": "2025-03-04T12:53:16.442523Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025269508361816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_notional_trade_size.25efead997", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect notional_trade_size\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere notional_trade_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.433873Z", "completed_at": "2025-03-04T12:53:16.441868Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.444942Z", "completed_at": "2025-03-04T12:53:16.444950Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02018284797668457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_pnl.e87ee65983", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pnl\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.454157Z", "completed_at": "2025-03-04T12:53:16.461323Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.473969Z", "completed_at": "2025-03-04T12:53:16.473981Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030020475387573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_referral_fees.8c5c0f55a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referral_fees\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere referral_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.449000Z", "completed_at": "2025-03-04T12:53:16.461974Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.475114Z", "completed_at": "2025-03-04T12:53:16.475121Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03180408477783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_position_size.a687f5c9e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_size\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.462544Z", "completed_at": "2025-03-04T12:53:16.477025Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.479637Z", "completed_at": "2025-03-04T12:53:16.479644Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0314028263092041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_settlement_reward.c472f75c36", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settlement_reward\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere settlement_reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.467279Z", "completed_at": "2025-03-04T12:53:16.477596Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.480496Z", "completed_at": "2025-03-04T12:53:16.480506Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02162933349609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_settler.cebd15f3ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settler\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere settler is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.484539Z", "completed_at": "2025-03-04T12:53:16.496273Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.502906Z", "completed_at": "2025-03-04T12:53:16.502918Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024120569229125977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_total_fees.73178c801b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_fees\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere total_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.490831Z", "completed_at": "2025-03-04T12:53:16.502201Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.508516Z", "completed_at": "2025-03-04T12:53:16.508526Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027282238006591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_tracking_code.3b557b440d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tracking_code\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere tracking_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.497617Z", "completed_at": "2025-03-04T12:53:16.510217Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.512850Z", "completed_at": "2025-03-04T12:53:16.512859Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023429155349731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_trade_size.2a003017e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect trade_size\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere trade_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.503856Z", "completed_at": "2025-03-04T12:53:16.511587Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.514369Z", "completed_at": "2025-03-04T12:53:16.514376Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024324417114257812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_transaction_hash.b1e9287d28", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.517773Z", "completed_at": "2025-03-04T12:53:16.532082Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.542800Z", "completed_at": "2025-03-04T12:53:16.542814Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030776500701904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_mainnet_ts.e5e75d9d71", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.523237Z", "completed_at": "2025-03-04T12:53:16.542167Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.544607Z", "completed_at": "2025-03-04T12:53:16.544615Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03098011016845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_trades_base_mainnet_id.b1b63119eb", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.532716Z", "completed_at": "2025-03-04T12:53:16.543982Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.546838Z", "completed_at": "2025-03-04T12:53:16.546846Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02434539794921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_base_sepolia_amount_liquidated__True__0.2ed4eec011", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_liquidated >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.537450Z", "completed_at": "2025-03-04T12:53:16.545537Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.548394Z", "completed_at": "2025-03-04T12:53:16.548402Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01874375343322754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_base_sepolia_market_id__True__0.def98e4452", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.554308Z", "completed_at": "2025-03-04T12:53:16.569750Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.578377Z", "completed_at": "2025-03-04T12:53:16.578390Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0292818546295166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_liq_position_base_sepolia_position_size__True__0.49ac413695", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not position_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.560093Z", "completed_at": "2025-03-04T12:53:16.575743Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.579944Z", "completed_at": "2025-03-04T12:53:16.579954Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029480457305908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_account_id.8cf46dc9c7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.565332Z", "completed_at": "2025-03-04T12:53:16.579339Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.581648Z", "completed_at": "2025-03-04T12:53:16.581655Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02924823760986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_amount_liquidated.a06e8cfcb4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_liquidated\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere amount_liquidated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.570478Z", "completed_at": "2025-03-04T12:53:16.582583Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.585181Z", "completed_at": "2025-03-04T12:53:16.585191Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03159070014953613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_block_number.1e9c90b546", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.589158Z", "completed_at": "2025-03-04T12:53:16.605017Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.606543Z", "completed_at": "2025-03-04T12:53:16.606556Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022803544998168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_id.79b565b3e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.595510Z", "completed_at": "2025-03-04T12:53:16.607418Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.614126Z", "completed_at": "2025-03-04T12:53:16.614138Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02818608283996582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_market_id.781f0844d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.600256Z", "completed_at": "2025-03-04T12:53:16.612657Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.615177Z", "completed_at": "2025-03-04T12:53:16.615187Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028020381927490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_market_symbol.f750183220", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.608067Z", "completed_at": "2025-03-04T12:53:16.616710Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.619336Z", "completed_at": "2025-03-04T12:53:16.619349Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024724483489990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_position_size.75bf8c09a0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_size\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.621604Z", "completed_at": "2025-03-04T12:53:16.631342Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.641582Z", "completed_at": "2025-03-04T12:53:16.641593Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025611162185668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_transaction_hash.a0777a2fcc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.631963Z", "completed_at": "2025-03-04T12:53:16.642796Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.648975Z", "completed_at": "2025-03-04T12:53:16.648984Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02881646156311035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_liq_position_base_sepolia_ts.57135ae312", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.636424Z", "completed_at": "2025-03-04T12:53:16.643357Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.649945Z", "completed_at": "2025-03-04T12:53:16.649952Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02911090850830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_liq_position_base_sepolia_id.115ce32bec", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.643973Z", "completed_at": "2025-03-04T12:53:16.653040Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.655487Z", "completed_at": "2025-03-04T12:53:16.655496Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024904966354370117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_base_sepolia", "compiled": true, "compiled_code": "with all_prices as (\n    select\n        ts,\n        null as market_address,\n        market_symbol,\n        price\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\n    union all\n    select\n        ts,\n        null as market_address,\n        'SNX' as market_symbol,\n        snx_price as price\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_buyback_base_sepolia\"\n    where\n        snx_price > 0\n    union all\n    select\n        ts,\n        collateral_type as market_address,\n        null as market_symbol,\n        collateral_value / amount as price\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\n    where\n        collateral_value > 0\n),\n\ntokens as (\n    select\n        token_address,\n        token_symbol\n    from\n        \"analytics\".\"prod_seeds\".\"base_sepolia_tokens\"\n)\n\nselect\n    p.ts,\n    p.market_address,\n    p.price,\n    COALESCE(\n        t.token_symbol,\n        p.market_symbol\n    ) as market_symbol\nfrom\n    all_prices as p\nleft join tokens as t\n    on LOWER(\n        p.market_address\n    ) = LOWER(\n        t.token_address\n    )", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_prices_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.656340Z", "completed_at": "2025-03-04T12:53:16.668484Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.676533Z", "completed_at": "2025-03-04T12:53:16.676545Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02569270133972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_sepolia_long_oi__True__0.e6b5ed98ab", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not long_oi >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.663394Z", "completed_at": "2025-03-04T12:53:16.678212Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.684855Z", "completed_at": "2025-03-04T12:53:16.684865Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030778169631958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_sepolia_market_id__True__0.ee983a3e48", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.669055Z", "completed_at": "2025-03-04T12:53:16.678823Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.685876Z", "completed_at": "2025-03-04T12:53:16.685884Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031113862991333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_sepolia_market_oi_usd__True__0.f845c8d179", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_oi_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.680081Z", "completed_at": "2025-03-04T12:53:16.688888Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.691346Z", "completed_at": "2025-03-04T12:53:16.691354Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015720605850219727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_sepolia_prev_size__True__0.94719eaa70", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not prev_size >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.692242Z", "completed_at": "2025-03-04T12:53:16.705394Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.711356Z", "completed_at": "2025-03-04T12:53:16.711369Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02475714683532715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_sepolia_short_oi__True__0.01eeacdf05", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not short_oi >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.700393Z", "completed_at": "2025-03-04T12:53:16.712305Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.714940Z", "completed_at": "2025-03-04T12:53:16.714948Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024983882904052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_market_history_base_sepolia_total_oi_usd__True__0.70aa1121cf", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_oi_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.706012Z", "completed_at": "2025-03-04T12:53:16.713636Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.720334Z", "completed_at": "2025-03-04T12:53:16.720342Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029733896255493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_block_number.2243d56672", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.715829Z", "completed_at": "2025-03-04T12:53:16.723452Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.725994Z", "completed_at": "2025-03-04T12:53:16.726002Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015598297119140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_funding_rate.8b0c11dd33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_rate\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere funding_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.726885Z", "completed_at": "2025-03-04T12:53:16.740410Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.746392Z", "completed_at": "2025-03-04T12:53:16.746405Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025281429290771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_funding_rate_apr.d67d832c1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_rate_apr\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere funding_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.735790Z", "completed_at": "2025-03-04T12:53:16.748200Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.754713Z", "completed_at": "2025-03-04T12:53:16.754723Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030121803283691406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_funding_velocity.e94823ecab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect funding_velocity\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere funding_velocity is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.741039Z", "completed_at": "2025-03-04T12:53:16.749399Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.756250Z", "completed_at": "2025-03-04T12:53:16.756260Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031021595001220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_id.5597cbd783", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.750031Z", "completed_at": "2025-03-04T12:53:16.758598Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.765291Z", "completed_at": "2025-03-04T12:53:16.765305Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019886493682861328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_interest_rate.7281d4e302", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect interest_rate\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere interest_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.760533Z", "completed_at": "2025-03-04T12:53:16.768440Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.774960Z", "completed_at": "2025-03-04T12:53:16.774971Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019453048706054688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_long_oi.0f82ebafce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect long_oi\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere long_oi is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.769696Z", "completed_at": "2025-03-04T12:53:16.788715Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.790892Z", "completed_at": "2025-03-04T12:53:16.790904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03112959861755371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_long_rate_apr.12346bb56d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect long_rate_apr\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere long_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.775865Z", "completed_at": "2025-03-04T12:53:16.790032Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.793002Z", "completed_at": "2025-03-04T12:53:16.793010Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026706218719482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_market_id.bdbb4acce1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.784251Z", "completed_at": "2025-03-04T12:53:16.791851Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.794615Z", "completed_at": "2025-03-04T12:53:16.794623Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020491838455200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_market_oi_usd.4f34c2eb05", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_oi_usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere market_oi_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.795489Z", "completed_at": "2025-03-04T12:53:16.803694Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.810430Z", "completed_at": "2025-03-04T12:53:16.810443Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02120804786682129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_market_symbol.a5c87dfbbc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.805490Z", "completed_at": "2025-03-04T12:53:16.822367Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.824723Z", "completed_at": "2025-03-04T12:53:16.824735Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023891687393188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_prev_size.7412e3b81a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prev_size\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere prev_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.812127Z", "completed_at": "2025-03-04T12:53:16.824025Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.826909Z", "completed_at": "2025-03-04T12:53:16.826917Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024598121643066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_price.701866f2d6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.817795Z", "completed_at": "2025-03-04T12:53:16.825716Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.828476Z", "completed_at": "2025-03-04T12:53:16.828487Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024316787719726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_short_oi.dfbca5e945", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_oi\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere short_oi is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.829420Z", "completed_at": "2025-03-04T12:53:16.839308Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.841719Z", "completed_at": "2025-03-04T12:53:16.841733Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018581628799438477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_short_rate_apr.8f7be1f404", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_rate_apr\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere short_rate_apr is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.842615Z", "completed_at": "2025-03-04T12:53:16.858281Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.860577Z", "completed_at": "2025-03-04T12:53:16.860588Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02355790138244629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_size.4ba39d1f97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect size\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.848207Z", "completed_at": "2025-03-04T12:53:16.859851Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.862676Z", "completed_at": "2025-03-04T12:53:16.862687Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024119138717651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_size_delta.a047554669", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect size_delta\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere size_delta is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.853665Z", "completed_at": "2025-03-04T12:53:16.861480Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.864239Z", "completed_at": "2025-03-04T12:53:16.864249Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02386307716369629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_skew.2239f848ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect skew\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere skew is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.865140Z", "completed_at": "2025-03-04T12:53:16.872911Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.875271Z", "completed_at": "2025-03-04T12:53:16.875281Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01622462272644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_total_oi_usd.d633cebd30", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_oi_usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere total_oi_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.876167Z", "completed_at": "2025-03-04T12:53:16.894211Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.895718Z", "completed_at": "2025-03-04T12:53:16.895731Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02514958381652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_transaction_hash.692634d15d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.888980Z", "completed_at": "2025-03-04T12:53:16.896595Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.903509Z", "completed_at": "2025-03-04T12:53:16.903521Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029578685760498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_market_history_base_sepolia_id.a6cd45bc6b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.881531Z", "completed_at": "2025-03-04T12:53:16.902001Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.904543Z", "completed_at": "2025-03-04T12:53:16.904553Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03243303298950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_market_history_base_sepolia_ts.f38b043e70", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_history_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.897216Z", "completed_at": "2025-03-04T12:53:16.905386Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.908016Z", "completed_at": "2025-03-04T12:53:16.908023Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014557600021362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_orders_base_sepolia_market_id__True__0.fe527d9b61", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.911413Z", "completed_at": "2025-03-04T12:53:16.927530Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.929089Z", "completed_at": "2025-03-04T12:53:16.929102Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023240089416503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_sepolia_account_id.75a8413527", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.918345Z", "completed_at": "2025-03-04T12:53:16.930001Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.938580Z", "completed_at": "2025-03-04T12:53:16.938591Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029217243194580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_sepolia_block_number.46d5d3c316", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.922968Z", "completed_at": "2025-03-04T12:53:16.930621Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.939547Z", "completed_at": "2025-03-04T12:53:16.939559Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02951836585998535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_sepolia_contract.17d50e01a2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.931202Z", "completed_at": "2025-03-04T12:53:16.941220Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.943758Z", "completed_at": "2025-03-04T12:53:16.943766Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026282787322998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_sepolia_id.8dca618afe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.945884Z", "completed_at": "2025-03-04T12:53:16.953624Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.964040Z", "completed_at": "2025-03-04T12:53:16.964053Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02359485626220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_sepolia_market_id.9c18ced1ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.958922Z", "completed_at": "2025-03-04T12:53:16.969869Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.971983Z", "completed_at": "2025-03-04T12:53:16.971992Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02685856819152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_sepolia_transaction_hash.650c93c367", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.954239Z", "completed_at": "2025-03-04T12:53:16.971166Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.974119Z", "completed_at": "2025-03-04T12:53:16.974129Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02958536148071289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_sepolia_market_symbol.ccf5837d32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.965236Z", "completed_at": "2025-03-04T12:53:16.972863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:16.975655Z", "completed_at": "2025-03-04T12:53:16.975662Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02279520034790039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_orders_base_sepolia_ts.acaae19ba7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.979107Z", "completed_at": "2025-03-04T12:53:16.993218Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.001690Z", "completed_at": "2025-03-04T12:53:17.001706Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028395652770996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_orders_base_sepolia_id.55dad680ba", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_orders_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.986414Z", "completed_at": "2025-03-04T12:53:17.001077Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.003022Z", "completed_at": "2025-03-04T12:53:17.003031Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025312423706054688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_activity_base_sepolia", "compiled": true, "compiled_code": "\n\nwith active_accounts as (\n    select distinct\n        date_trunc('day', ts) as activity_date,\n        account_id\n    from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\ndate_range as (\n    select\n        generate_series(\n            date(min(activity_date)),\n            date(max(activity_date)),\n            interval '1 day'\n        )::date as activity_date\n    from active_accounts\n),\n\nactive_accounts_daily as (\n    select\n        date_range.activity_date,\n        count(distinct active_accounts.account_id) as active_accounts\n    from date_range\n    left join active_accounts\n        on date_range.activity_date = active_accounts.activity_date\n    group by date_range.activity_date\n),\n\nactive_accounts_monthly as (\n    select\n        date_range.activity_date,\n        count(distinct active_accounts.account_id) as active_accounts\n    from date_range\n    left join active_accounts\n        on\n            date_range.activity_date - interval '27 days'\n            <= active_accounts.activity_date\n            and date_range.activity_date >= active_accounts.activity_date\n    group by date_range.activity_date\n),\n\nnew_accounts as (\n    select\n        min(activity_date) as start_date,\n        account_id\n    from active_accounts\n    group by account_id\n),\n\nnew_accounts_daily as (\n    select\n        date_range.activity_date,\n        count(new_accounts.account_id) as new_accounts\n    from date_range\n    left join new_accounts\n        on date_range.activity_date = new_accounts.start_date\n    group by date_range.activity_date, new_accounts.start_date\n),\n\nnew_accounts_monthly as (\n    select distinct\n        activity_date,\n        sum(new_accounts) over (\n            order by activity_date\n            range between interval '27 days' preceding and current row\n        ) as new_accounts\n    from new_accounts_daily\n)\n\nselect\n    dr.activity_date as ts,\n    dau.active_accounts as dau,\n    mau.active_accounts as mau,\n    new_accounts_daily.new_accounts as new_accounts_daily,\n    new_accounts_monthly.new_accounts as new_accounts_monthly\nfrom date_range as dr\nleft join active_accounts_daily as dau\n    on dr.activity_date = dau.activity_date\nleft join active_accounts_monthly as mau\n    on dr.activity_date = mau.activity_date\nleft join new_accounts_daily\n    on dr.activity_date = new_accounts_daily.activity_date\nleft join new_accounts_monthly\n    on dr.activity_date = new_accounts_monthly.activity_date\norder by ts desc", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_account_activity_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.997760Z", "completed_at": "2025-03-04T12:53:17.004003Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.006646Z", "completed_at": "2025-03-04T12:53:17.006654Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02175617218017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_keeper_stats_hourly_base_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        settler,\n        settlement_reward,\n        notional_trade_size,\n        1 as trades,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(settlement_reward) as settlement_reward_total,\n        SUM(notional_trade_size) as notional_trade_size_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.settler as keeper,\n    SUM(trades.trades) as trades,\n    SUM(trades.settlement_reward) as settlement_rewards,\n    SUM(trades.notional_trade_size) as amount_settled,\n    SUM(trades.trades) / MAX(total.trades_total) as trades_pct,\n    SUM(trades.settlement_reward)\n    / MAX(total.settlement_reward_total) as settlement_rewards_pct,\n    SUM(trades.notional_trade_size)\n    / MAX(total.notional_trade_size_total) as amount_settled_pct\nfrom\n    trades\ninner join total\n    on trades.ts = total.ts\ngroup by\n    trades.ts,\n    trades.settler", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_keeper_stats_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:16.993850Z", "completed_at": "2025-03-04T12:53:17.004570Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.007694Z", "completed_at": "2025-03-04T12:53:17.007704Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024061203002929688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_stats_hourly_base_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        ts,\n        account_id,\n        total_fees,\n        notional_trade_size,\n        1 as trades,\n        SUM(\n            total_fees\n        ) over (\n            partition by account_id\n            order by\n                ts\n        ) as cumulative_fees,\n        SUM(\n            notional_trade_size\n        ) over (\n            partition by account_id\n            order by\n                ts\n        ) as cumulative_volume\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nliq as (\n    select\n        ts,\n        account_id,\n        amount_liquidated,\n        1 as liquidations\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\n),\n\ninc_trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        account_id,\n        SUM(trades) as trades,\n        SUM(total_fees) as fees,\n        SUM(notional_trade_size) as volume,\n        MAX(cumulative_fees) as cumulative_fees,\n        MAX(cumulative_volume) as cumulative_volume\n    from\n        trades\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        account_id\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        account_id,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        account_id\n),\n\ninc as (\n    select\n        h.ts,\n        h.account_id,\n        COALESCE(\n            h.trades,\n            0\n        ) as trades,\n        COALESCE(\n            h.fees,\n            0\n        ) as fees,\n        COALESCE(\n            h.volume,\n            0\n        ) as volume,\n        COALESCE(\n            l.amount_liquidated,\n            0\n        ) as amount_liquidated,\n        COALESCE(\n            l.liquidations,\n            0\n        ) as liquidations,\n        COALESCE(\n            h.cumulative_fees,\n            0\n        ) as cumulative_fees,\n        COALESCE(\n            h.cumulative_volume,\n            0\n        ) as cumulative_volume\n    from\n        inc_trades as h\n    left join inc_liq as l\n        on\n            h.ts = l.ts\n            and h.account_id = l.account_id\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_account_stats_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.017975Z", "completed_at": "2025-03-04T12:53:17.028321Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.036564Z", "completed_at": "2025-03-04T12:53:17.036576Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02747035026550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_tracking_stats_hourly_base_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        tracking_code,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(notional_trade_size) as volume,\n        SUM(1) as trades\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        tracking_code\n),\n\naccounts as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        tracking_code,\n        COUNT(\n            distinct account_id\n        ) as \"accounts\"\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        tracking_code\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(exchange_fees) as exchange_fees_total,\n        SUM(referral_fees) as referral_fees_total,\n        SUM(collected_fees) as collected_fees_total,\n        SUM(volume) as volume_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.tracking_code,\n    trades.exchange_fees,\n    trades.referral_fees,\n    trades.collected_fees,\n    trades.volume,\n    trades.trades,\n    accounts.accounts,\n    case\n        when total.exchange_fees_total = 0 then 0\n        else trades.exchange_fees / total.exchange_fees_total\n    end as exchange_fees_share,\n    case\n        when total.referral_fees_total = 0 then 0\n        else trades.referral_fees / total.referral_fees_total\n    end as referral_fees_share,\n    case\n        when total.collected_fees_total = 0 then 0\n        else trades.collected_fees / total.collected_fees_total\n    end as collected_fees_share,\n    case\n        when total.volume_total = 0 then 0\n        else trades.volume / total.volume_total\n    end as volume_share,\n    case\n        when total.trades_total = 0 then 0\n        else trades.trades / total.trades_total\n    end as trades_share\nfrom\n    trades\ninner join accounts\n    on\n        trades.ts = accounts.ts\n        and trades.tracking_code = accounts.tracking_code\ninner join total\n    on trades.ts = total.ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_tracking_stats_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.013764Z", "completed_at": "2025-03-04T12:53:17.029070Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.037576Z", "completed_at": "2025-03-04T12:53:17.037585Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029078245162963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_stats_hourly_base_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        ts,\n        market_symbol,\n        exchange_fees,\n        referral_fees,\n        collected_fees,\n        notional_trade_size,\n        1 as trades\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nliq as (\n    select\n        ts,\n        market_symbol,\n        amount_liquidated,\n        1 as liquidations\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_position_base_sepolia\"\n),\n\ninc_trades as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        market_symbol,\n        SUM(trades) as trades,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(notional_trade_size) as volume\n    from\n        trades\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        market_symbol\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        market_symbol,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        ),\n        market_symbol\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                trades\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            trades\n    ) as m\n    group by\n        m.market_symbol\n),\n\ninc as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        COALESCE(\n            h.trades,\n            0\n        ) as trades,\n        COALESCE(\n            h.exchange_fees,\n            0\n        ) as exchange_fees,\n        COALESCE(\n            h.referral_fees,\n            0\n        ) as referral_fees,\n        COALESCE(\n            h.collected_fees,\n            0\n        ) as collected_fees,\n        COALESCE(\n            h.volume,\n            0\n        ) as volume,\n        COALESCE(\n            l.amount_liquidated,\n            0\n        ) as amount_liquidated,\n        COALESCE(\n            l.liquidations,\n            0\n        ) as liquidations,\n        SUM(\n            h.exchange_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_exchange_fees,\n        SUM(\n            h.referral_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_referral_fees,\n        SUM(\n            h.collected_fees\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_collected_fees,\n        SUM(\n            h.volume\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n        ) as cumulative_volume\n    from\n        dim\n    left join inc_trades as h\n        on\n            dim.ts = h.ts\n            and dim.market_symbol = h.market_symbol\n    left join inc_liq as l\n        on\n            dim.ts = l.ts\n            and dim.market_symbol = l.market_symbol\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_market_stats_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.023559Z", "completed_at": "2025-03-04T12:53:17.038419Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.041330Z", "completed_at": "2025-03-04T12:53:17.041338Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028896331787109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_sepolia_collected_fees__True__0.d4eb8f3a34", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collected_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.029668Z", "completed_at": "2025-03-04T12:53:17.040690Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.043708Z", "completed_at": "2025-03-04T12:53:17.043718Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030675411224365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_sepolia_exchange_fees__True__0.b3ce206dc8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not exchange_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.047676Z", "completed_at": "2025-03-04T12:53:17.059104Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.065681Z", "completed_at": "2025-03-04T12:53:17.065698Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02345442771911621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_sepolia_fill_price__True__0.b3d62542ac", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not fill_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.052699Z", "completed_at": "2025-03-04T12:53:17.059734Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.066821Z", "completed_at": "2025-03-04T12:53:17.066828Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023860692977905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_sepolia_lp_fees__True__0.8a5e6825da", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not lp_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.060907Z", "completed_at": "2025-03-04T12:53:17.073451Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.076312Z", "completed_at": "2025-03-04T12:53:17.076323Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029398679733276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_sepolia_market_id__True__0.67a1e76900", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.067714Z", "completed_at": "2025-03-04T12:53:17.075751Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.078517Z", "completed_at": "2025-03-04T12:53:17.078527Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0212099552154541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_sepolia_referral_fees__True__0.dc2313066f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not referral_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.080946Z", "completed_at": "2025-03-04T12:53:17.095906Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.097837Z", "completed_at": "2025-03-04T12:53:17.097849Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022984743118286133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_sepolia_settlement_reward__True__0.58cc15e824", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not settlement_reward >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.087860Z", "completed_at": "2025-03-04T12:53:17.098731Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.109284Z", "completed_at": "2025-03-04T12:53:17.109295Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03216075897216797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_trades_base_sepolia_total_fees__True__0.68c3f148eb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_fees >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.103929Z", "completed_at": "2025-03-04T12:53:17.111863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.114364Z", "completed_at": "2025-03-04T12:53:17.114378Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01941657066345215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_accrued_funding.fb6b795bff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect accrued_funding\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere accrued_funding is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.099304Z", "completed_at": "2025-03-04T12:53:17.112546Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.115283Z", "completed_at": "2025-03-04T12:53:17.115290Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028200149536132812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_account_id.74992c394c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.116160Z", "completed_at": "2025-03-04T12:53:17.127485Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.129651Z", "completed_at": "2025-03-04T12:53:17.129660Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019290924072265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_block_number.36502e409b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.122972Z", "completed_at": "2025-03-04T12:53:17.130546Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.132947Z", "completed_at": "2025-03-04T12:53:17.132955Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01931619644165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_collected_fees.ac78e5e098", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collected_fees\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere collected_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.133887Z", "completed_at": "2025-03-04T12:53:17.147893Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.154154Z", "completed_at": "2025-03-04T12:53:17.154170Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02610492706298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_contract.92feeccb9f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contract\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere contract is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.138487Z", "completed_at": "2025-03-04T12:53:17.148478Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.155110Z", "completed_at": "2025-03-04T12:53:17.155117Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026326417922973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_exchange_fees.72c95e5df3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exchange_fees\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere exchange_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.149057Z", "completed_at": "2025-03-04T12:53:17.160544Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.162669Z", "completed_at": "2025-03-04T12:53:17.162680Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017893314361572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_fill_price.3633433721", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fill_price\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere fill_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.156105Z", "completed_at": "2025-03-04T12:53:17.164287Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.166764Z", "completed_at": "2025-03-04T12:53:17.166773Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01957249641418457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_id.e94cf14cf4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.168849Z", "completed_at": "2025-03-04T12:53:17.180535Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.186716Z", "completed_at": "2025-03-04T12:53:17.186732Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023196935653686523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_lp_fees.08774e8672", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect lp_fees\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere lp_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.174305Z", "completed_at": "2025-03-04T12:53:17.181129Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.187763Z", "completed_at": "2025-03-04T12:53:17.187771Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022977590560913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_market_id.3d4de88cac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.181702Z", "completed_at": "2025-03-04T12:53:17.194733Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.198089Z", "completed_at": "2025-03-04T12:53:17.198099Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029998302459716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_market_symbol.8c61ba2703", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.188760Z", "completed_at": "2025-03-04T12:53:17.200984Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.207587Z", "completed_at": "2025-03-04T12:53:17.207599Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028088092803955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_notional_position_size.1d9238ede6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect notional_position_size\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere notional_position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.202182Z", "completed_at": "2025-03-04T12:53:17.214513Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.221146Z", "completed_at": "2025-03-04T12:53:17.221156Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023852825164794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_notional_trade_size.e076755f6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect notional_trade_size\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere notional_trade_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.208483Z", "completed_at": "2025-03-04T12:53:17.219733Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.222181Z", "completed_at": "2025-03-04T12:53:17.222189Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02328968048095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_pnl.42b0678535", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pnl\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.215286Z", "completed_at": "2025-03-04T12:53:17.223105Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.225695Z", "completed_at": "2025-03-04T12:53:17.225705Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01899886131286621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_position_size.d124874e35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_size\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere position_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.226594Z", "completed_at": "2025-03-04T12:53:17.234134Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.242424Z", "completed_at": "2025-03-04T12:53:17.242435Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022081851959228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_referral_fees.12cd5804dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect referral_fees\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere referral_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.236017Z", "completed_at": "2025-03-04T12:53:17.249404Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.255804Z", "completed_at": "2025-03-04T12:53:17.255818Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024755239486694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_settlement_reward.edb4d5c73f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settlement_reward\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere settlement_reward is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.243334Z", "completed_at": "2025-03-04T12:53:17.250040Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.256858Z", "completed_at": "2025-03-04T12:53:17.256865Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024958372116088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_settler.b1e9ff8b09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect settler\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere settler is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.250631Z", "completed_at": "2025-03-04T12:53:17.259121Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.266173Z", "completed_at": "2025-03-04T12:53:17.266182Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030983924865722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_total_fees.d6fd22951b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_fees\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere total_fees is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.260439Z", "completed_at": "2025-03-04T12:53:17.268835Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.275870Z", "completed_at": "2025-03-04T12:53:17.275883Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020896434783935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_tracking_code.482af3b84b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tracking_code\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere tracking_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.270994Z", "completed_at": "2025-03-04T12:53:17.283782Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.292496Z", "completed_at": "2025-03-04T12:53:17.292508Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02756023406982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_trade_size.e5fc6afe64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect trade_size\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere trade_size is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.277451Z", "completed_at": "2025-03-04T12:53:17.291919Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.294194Z", "completed_at": "2025-03-04T12:53:17.294205Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027201175689697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_transaction_hash.4d4a1afa3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.285215Z", "completed_at": "2025-03-04T12:53:17.295033Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.301678Z", "completed_at": "2025-03-04T12:53:17.301686Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02499222755432129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_trades_base_sepolia_ts.76a693976f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.296347Z", "completed_at": "2025-03-04T12:53:17.304634Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.307082Z", "completed_at": "2025-03-04T12:53:17.307090Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022677183151245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.unique_fct_perp_trades_base_sepolia_id.ceece98634", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.307997Z", "completed_at": "2025-03-04T12:53:17.319284Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.325690Z", "completed_at": "2025-03-04T12:53:17.325704Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023219585418701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_synth_supply_arbitrum_mainnet_synth_market_id__True__0.214f52024f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_synth_supply_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.313025Z", "completed_at": "2025-03-04T12:53:17.319910Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.326619Z", "completed_at": "2025-03-04T12:53:17.326627Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023383617401123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_arbitrum_mainnet_block_number.bf6d504d6f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_synth_supply_arbitrum_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.320503Z", "completed_at": "2025-03-04T12:53:17.328194Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.334891Z", "completed_at": "2025-03-04T12:53:17.334900Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02858591079711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_arbitrum_mainnet_supply.4f38308508", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_synth_supply_arbitrum_mainnet\"\nwhere supply is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.330139Z", "completed_at": "2025-03-04T12:53:17.338512Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.347082Z", "completed_at": "2025-03-04T12:53:17.347093Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022207021713256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_arbitrum_mainnet_synth_market_id.9ef357e324", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_synth_supply_arbitrum_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.340361Z", "completed_at": "2025-03-04T12:53:17.354326Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.361039Z", "completed_at": "2025-03-04T12:53:17.361050Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025354623794555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_arbitrum_mainnet_ts.3133817d65", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_synth_supply_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.348007Z", "completed_at": "2025-03-04T12:53:17.359614Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.362079Z", "completed_at": "2025-03-04T12:53:17.362087Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02575087547302246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_synth_supply_arbitrum_sepolia_synth_market_id__True__0.e33f94430c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_synth_supply_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.355072Z", "completed_at": "2025-03-04T12:53:17.363016Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.365512Z", "completed_at": "2025-03-04T12:53:17.365523Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025868892669677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_arbitrum_sepolia_block_number.f392305688", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_synth_supply_arbitrum_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.366426Z", "completed_at": "2025-03-04T12:53:17.373955Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.380557Z", "completed_at": "2025-03-04T12:53:17.380568Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020342111587524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_arbitrum_sepolia_supply.e3a1577f38", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_synth_supply_arbitrum_sepolia\"\nwhere supply is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.375784Z", "completed_at": "2025-03-04T12:53:17.394785Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.397006Z", "completed_at": "2025-03-04T12:53:17.397017Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025952577590942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_arbitrum_sepolia_synth_market_id.4a2d305755", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_synth_supply_arbitrum_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.381632Z", "completed_at": "2025-03-04T12:53:17.395484Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.398546Z", "completed_at": "2025-03-04T12:53:17.398557Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026723623275756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_arbitrum_sepolia_ts.27dc7912ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_synth_supply_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.387843Z", "completed_at": "2025-03-04T12:53:17.397957Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.400710Z", "completed_at": "2025-03-04T12:53:17.400717Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02568650245666504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_synth_supply_base_mainnet_synth_market_id__True__0.cf8aff1a32", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_synth_supply_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.402250Z", "completed_at": "2025-03-04T12:53:17.409826Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.416358Z", "completed_at": "2025-03-04T12:53:17.416371Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020342588424682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_base_mainnet_block_number.8686c78edf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_synth_supply_base_mainnet\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.411654Z", "completed_at": "2025-03-04T12:53:17.427782Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.429436Z", "completed_at": "2025-03-04T12:53:17.429446Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022605419158935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_base_mainnet_supply.3f0fbdddb9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_synth_supply_base_mainnet\"\nwhere supply is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.417953Z", "completed_at": "2025-03-04T12:53:17.430317Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.432835Z", "completed_at": "2025-03-04T12:53:17.432844Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024539470672607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_base_mainnet_synth_market_id.5a00a55aa2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_synth_supply_base_mainnet\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.423344Z", "completed_at": "2025-03-04T12:53:17.430949Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.433728Z", "completed_at": "2025-03-04T12:53:17.433735Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02343130111694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_base_mainnet_ts.ab30396a5d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_synth_supply_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.434602Z", "completed_at": "2025-03-04T12:53:17.443600Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.452186Z", "completed_at": "2025-03-04T12:53:17.452196Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023758888244628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_synth_supply_base_sepolia_synth_market_id__True__0.1c097f1721", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_synth_supply_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not synth_market_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.444191Z", "completed_at": "2025-03-04T12:53:17.462810Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.465696Z", "completed_at": "2025-03-04T12:53:17.465707Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02637338638305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_base_sepolia_block_number.f0997efcd8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect block_number\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_synth_supply_base_sepolia\"\nwhere block_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.457796Z", "completed_at": "2025-03-04T12:53:17.464565Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.467180Z", "completed_at": "2025-03-04T12:53:17.467188Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02428460121154785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_base_sepolia_synth_market_id.75d7df8ce8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_market_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_synth_supply_base_sepolia\"\nwhere synth_market_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.453224Z", "completed_at": "2025-03-04T12:53:17.465119Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.468063Z", "completed_at": "2025-03-04T12:53:17.468071Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025893211364746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_base_sepolia_supply.a13743a375", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_synth_supply_base_sepolia\"\nwhere supply is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.469612Z", "completed_at": "2025-03-04T12:53:17.477891Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.480258Z", "completed_at": "2025-03-04T12:53:17.480267Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016625165939331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_synth_supply_base_sepolia_ts.0e3cf0c2f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_synth_supply_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.481163Z", "completed_at": "2025-03-04T12:53:17.497565Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.500129Z", "completed_at": "2025-03-04T12:53:17.500141Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024421215057373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_rewards_claimed_eth_mainnet", "compiled": true, "compiled_code": "with rewards_claimed as (\n    select\n        block_timestamp as ts,\n        CAST(\n            pool_id as INTEGER\n        ) as pool_id,\n        account_id,\n        collateral_type,\n        distributor,\n        \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_rewards_claimed_eth_mainnet\"\n),\n\ndistributors as (\n    select\n        CAST(distributor_address as TEXT) as distributor_address,\n        CAST(token_symbol as TEXT) as token_symbol,\n        reward_type\n    from\n        \"analytics\".\"prod_seeds\".\"eth_mainnet_reward_distributors\"\n),\n\nhourly_prices as (\n    select\n        ts,\n        market_symbol,\n        price\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\"\n)\n\nselect\n    rc.ts,\n    rc.pool_id,\n    rc.collateral_type,\n    rc.account_id,\n    distributors.reward_type,\n    rc.distributor,\n    distributors.token_symbol,\n    rc.amount,\n    hourly_prices.price,\n    rc.amount * hourly_prices.price as amount_usd\nfrom\n    rewards_claimed as rc\ninner join distributors on rc.distributor = distributors.distributor_address\ninner join\n    hourly_prices\n    on\n        DATE_TRUNC('hour', rc.ts) = hourly_prices.ts\n        and distributors.token_symbol = hourly_prices.market_symbol\norder by\n    rc.ts", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.485600Z", "completed_at": "2025-03-04T12:53:17.498975Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.501665Z", "completed_at": "2025-03-04T12:53:17.501673Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02517414093017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pol_delegated_eth_mainnet", "compiled": true, "compiled_code": "with delegation_changes as (\n    select\n        block_timestamp as ts,\n        account_id,\n        \n    amount / 1e18\n\n        - LAG(\n    amount / 1e18\n, 1, 0) over (\n            partition by\n                account_id,\n                pool_id,\n                collateral_type\n            order by\n                block_timestamp\n        ) as change_in_amount\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_delegation_updated_eth_mainnet\"\n    where pool_id = 8\n),\n\nprices as (\n    select\n        ts,\n        price\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\"\n    where market_symbol = 'SNX'\n),\n\ndelegated as (\n    select\n        delegation_changes.ts,\n        account_id,\n        change_in_amount,\n        change_in_amount * prices.price as change_in_value,\n        sum(change_in_amount) over (order by delegation_changes.ts) as cumulative_amount,\n        sum(change_in_amount * prices.price) over (order by delegation_changes.ts) as cumulative_value,\n        prices.price as price\n    from delegation_changes\n    left join prices\n        on date_trunc('hour', delegation_changes.ts) = prices.ts\n)\n\nselect\n    ts,\n    account_id,\n    change_in_amount,\n    change_in_value,\n    cumulative_amount,\n    cumulative_value,\n    price\nfrom delegated", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pol_delegated_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.489804Z", "completed_at": "2025-03-04T12:53:17.499539Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.502524Z", "completed_at": "2025-03-04T12:53:17.502532Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025361061096191406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_token_hourly_eth_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nrewards_distributed as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        distributor,\n        token_symbol,\n        amount,\n        ts_start,\n        \"duration\"\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_eth_mainnet\"\n),\n\nhourly_distributions as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        r.distributor,\n        r.token_symbol,\n        r.amount,\n        r.ts_start,\n        r.\"duration\",\n        row_number() over (\n            partition by\n                dim.ts,\n                dim.pool_id,\n                dim.collateral_type,\n                r.distributor\n            order by\n                r.ts_start desc\n        ) as distributor_index\n    from\n        dim\n    left join rewards_distributed as r\n        on\n            dim.pool_id = r.pool_id\n            and lower(\n                dim.collateral_type\n            ) = lower(\n                r.collateral_type\n            )\n            and dim.ts + '1 hour'::INTERVAL >= r.ts_start\n            and dim.ts < r.ts_start + r.\"duration\" * '1 second'::INTERVAL\n),\n\nhourly_rewards as (\n    select\n        d.ts,\n        d.pool_id,\n        d.collateral_type,\n        d.distributor,\n        d.token_symbol,\n        p.price,\n        -- get the hourly amount distributed\n        d.amount / (\n            d.\"duration\" / 3600\n        ) as hourly_amount,\n        -- get the amount of time distributed this hour\n        -- use the smaller of those two intervals\n        -- convert the interval to a number of hours\n        -- multiply the result by the hourly amount to get the amount distributed this hour\n        (\n            extract(\n                epoch\n                from\n                least(\n                    d.\"duration\" / 3600 * '1 hour'::INTERVAL,\n                    d.ts + '1 hour'::INTERVAL - greatest(\n                        d.ts,\n                        d.ts_start\n                    )\n                )\n            ) / 3600\n        ) * d.amount / (\n            d.\"duration\" / 3600\n        ) as amount_distributed\n    from\n        hourly_distributions as d\n    left join\n        \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\"\n        as p\n        on\n            d.ts = p.ts\n            and d.token_symbol = p.market_symbol\n    where\n        d.distributor_index = 1\n)\n\nselect\n    *,\n    amount_distributed * price as rewards_usd\nfrom\n    hourly_rewards\nwhere\n    amount_distributed is not null", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.504158Z", "completed_at": "2025-03-04T12:53:17.513583Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.515967Z", "completed_at": "2025-03-04T12:53:17.515977Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01782846450805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_hourly_eth_mainnet_price__True__0.7cc073306d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.526017Z", "completed_at": "2025-03-04T12:53:17.531839Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.534315Z", "completed_at": "2025-03-04T12:53:17.534325Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02156805992126465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_eth_mainnet_ts.6f3aced404", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.521644Z", "completed_at": "2025-03-04T12:53:17.532416Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.535214Z", "completed_at": "2025-03-04T12:53:17.535222Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023162364959716797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_eth_mainnet_price.f438a75278", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.516876Z", "completed_at": "2025-03-04T12:53:17.533744Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.536699Z", "completed_at": "2025-03-04T12:53:17.536706Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025817155838012695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_eth_mainnet_market_symbol.dad998df0c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.538866Z", "completed_at": "2025-03-04T12:53:17.545915Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.554789Z", "completed_at": "2025-03-04T12:53:17.554800Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021860122680664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with prices as (\n    select distinct\n        market_symbol,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        LAST_VALUE(price) over (\n            partition by DATE_TRUNC('hour', ts), market_symbol\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as price\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_arbitrum_mainnet\"\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                prices\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            prices\n    ) as m\n    group by\n        m.market_symbol\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        LAST(prices.price) over (\n            partition by dim.market_symbol\n            order by dim.ts\n            rows between unbounded preceding and current row\n        ) as price\n    from\n        dim\n    left join prices\n        on\n            dim.ts = prices.ts\n            and dim.market_symbol = prices.market_symbol\n),\n\nhourly_prices as (\n    select\n        ts,\n        market_symbol,\n        price\n    from\n        ffill\n)\n\nselect *\nfrom\n    hourly_prices\nwhere\n    price is not null", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.555860Z", "completed_at": "2025-03-04T12:53:17.566057Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.568966Z", "completed_at": "2025-03-04T12:53:17.568975Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025132417678833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_arbitrum_mainnet_market_symbol.2c3e729969", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_arbitrum_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.547641Z", "completed_at": "2025-03-04T12:53:17.566735Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.569883Z", "completed_at": "2025-03-04T12:53:17.569891Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02676081657409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_arbitrum_mainnet_price__True__0.2dcde08f36", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.560158Z", "completed_at": "2025-03-04T12:53:17.568344Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.571345Z", "completed_at": "2025-03-04T12:53:17.571352Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026767492294311523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_arbitrum_mainnet_price.0a15cd9a88", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.573583Z", "completed_at": "2025-03-04T12:53:17.581667Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.587954Z", "completed_at": "2025-03-04T12:53:17.587964Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02059483528137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_arbitrum_mainnet_ts.2fbdc0fed9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.583395Z", "completed_at": "2025-03-04T12:53:17.601071Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.603808Z", "completed_at": "2025-03-04T12:53:17.603819Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024901866912841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_mainnet_dau.7598174ccf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dau\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_activity_arbitrum_mainnet\"\nwhere dau is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.588887Z", "completed_at": "2025-03-04T12:53:17.601926Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.604723Z", "completed_at": "2025-03-04T12:53:17.604731Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025149106979370117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_mainnet_mau.daaf95e7be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect mau\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_activity_arbitrum_mainnet\"\nwhere mau is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.593286Z", "completed_at": "2025-03-04T12:53:17.603195Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.606173Z", "completed_at": "2025-03-04T12:53:17.606181Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025880098342895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_mainnet_new_accounts_daily.5a6fc7acd6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_accounts_daily\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_activity_arbitrum_mainnet\"\nwhere new_accounts_daily is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.608407Z", "completed_at": "2025-03-04T12:53:17.616771Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.623027Z", "completed_at": "2025-03-04T12:53:17.623037Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02055835723876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_mainnet_new_accounts_monthly.124ca9de58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_accounts_monthly\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_activity_arbitrum_mainnet\"\nwhere new_accounts_monthly is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.623966Z", "completed_at": "2025-03-04T12:53:17.636923Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.639514Z", "completed_at": "2025-03-04T12:53:17.639524Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024868488311767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_stats_daily_arbitrum_mainnet", "compiled": true, "compiled_code": "with daily as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        account_id,\n        SUM(fees) as fees,\n        SUM(volume) as volume,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_stats_hourly_arbitrum_mainnet\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        account_id\n),\n\nstats as (\n    select\n        *,\n        SUM(fees) over (\n            partition by account_id\n            order by\n                ts\n            range between unbounded preceding\n            and current row\n        ) as cumulative_fees,\n        SUM(volume) over (\n            partition by account_id\n            order by\n                ts\n            range between unbounded preceding\n            and current row\n        ) as cumulative_volume\n    from\n        daily\n)\n\nselect *\nfrom\n    stats", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_stats_daily_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.618560Z", "completed_at": "2025-03-04T12:53:17.637782Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.640413Z", "completed_at": "2025-03-04T12:53:17.640421Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02644968032836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_mainnet_ts.204b6da97a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_account_activity_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.627406Z", "completed_at": "2025-03-04T12:53:17.638330Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.641302Z", "completed_at": "2025-03-04T12:53:17.641310Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025899171829223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_keeper_stats_daily_arbitrum_mainnet", "compiled": true, "compiled_code": "with hourly as (\n    select\n        keeper,\n        settlement_rewards,\n        amount_settled,\n        trades,\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_keeper_stats_hourly_arbitrum_mainnet\"\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(settlement_rewards) as settlement_reward_total,\n        SUM(amount_settled) as amount_settled_total\n    from\n        hourly\n    group by\n        ts\n)\n\nselect\n    hourly.ts,\n    hourly.keeper,\n    SUM(hourly.trades) as trades,\n    SUM(hourly.settlement_rewards) as settlement_rewards,\n    SUM(hourly.amount_settled) as amount_settled,\n    SUM(hourly.trades) / MAX(total.trades_total) as trades_pct,\n    SUM(hourly.settlement_rewards)\n    / MAX(total.settlement_reward_total) as settlement_rewards_pct,\n    SUM(hourly.amount_settled)\n    / MAX(total.amount_settled_total) as amount_settled_pct\nfrom\n    hourly\ninner join total\n    on hourly.ts = total.ts\ngroup by\n    hourly.ts,\n    hourly.keeper", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_keeper_stats_daily_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.633562Z", "completed_at": "2025-03-04T12:53:17.638950Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.642170Z", "completed_at": "2025-03-04T12:53:17.642178Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010146379470825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_stats_daily_arbitrum_mainnet", "compiled": true, "compiled_code": "select\n    DATE_TRUNC(\n        'day',\n        ts\n    ) as ts,\n    market_symbol,\n    SUM(trades) as trades,\n    SUM(exchange_fees) as exchange_fees,\n    SUM(referral_fees) as referral_fees,\n    SUM(collected_fees) as collected_fees,\n    SUM(volume) as volume,\n    SUM(amount_liquidated) as amount_liquidated,\n    SUM(liquidations) as liquidations,\n    MAX(cumulative_exchange_fees) as cumulative_exchange_fees,\n    MAX(cumulative_referral_fees) as cumulative_referral_fees,\n    MAX(cumulative_collected_fees) as cumulative_collected_fees,\n    MAX(cumulative_volume) as cumulative_volume\nfrom\n    \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_stats_hourly_arbitrum_mainnet\"\ngroup by\n    DATE_TRUNC(\n        'day',\n        ts\n    ),\n    market_symbol", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_stats_daily_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.650489Z", "completed_at": "2025-03-04T12:53:17.669239Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.671494Z", "completed_at": "2025-03-04T12:53:17.671507Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0259096622467041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_stats_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with inc_market as (\n    select\n        ts,\n        market_symbol,\n        trades,\n        exchange_fees,\n        referral_fees,\n        collected_fees,\n        volume,\n        liquidations,\n        cumulative_exchange_fees,\n        cumulative_referral_fees,\n        cumulative_collected_fees,\n        cumulative_volume\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_market_stats_hourly_arbitrum_mainnet\"\n),\n\nliq as (\n    select\n        ts,\n        total_reward,\n        1 as liquidated_accounts\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_liq_account_arbitrum_mainnet\"\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        SUM(total_reward) as liquidation_rewards,\n        SUM(liquidated_accounts) as liquidated_accounts\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        )\n),\n\ninc_trade as (\n    select\n        ts,\n        SUM(trades) as trades,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(volume) as volume,\n        SUM(cumulative_exchange_fees) as cumulative_exchange_fees,\n        SUM(cumulative_referral_fees) as cumulative_referral_fees,\n        SUM(cumulative_collected_fees) as cumulative_collected_fees,\n        SUM(cumulative_volume) as cumulative_volume\n    from\n        inc_market\n    group by\n        ts\n),\n\ninc as (\n    select\n        h.ts,\n        h.trades,\n        h.exchange_fees,\n        h.referral_fees,\n        h.collected_fees,\n        h.volume,\n        h.cumulative_exchange_fees,\n        h.cumulative_referral_fees,\n        h.cumulative_collected_fees,\n        h.cumulative_volume,\n        COALESCE(\n            l.liquidation_rewards,\n            0\n        ) as liquidation_rewards,\n        COALESCE(\n            l.liquidated_accounts,\n            0\n        ) as liquidated_accounts\n    from\n        inc_trade as h\n    left join inc_liq as l\n        on h.ts = l.ts\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_stats_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.660629Z", "completed_at": "2025-03-04T12:53:17.670262Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.672485Z", "completed_at": "2025-03-04T12:53:17.672492Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025602102279663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with prices as (\n    select distinct\n        market_symbol,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        LAST_VALUE(price) over (\n            partition by DATE_TRUNC('hour', ts), market_symbol\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as price\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_arbitrum_sepolia\"\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                prices\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            prices\n    ) as m\n    group by\n        m.market_symbol\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        LAST(prices.price) over (\n            partition by dim.market_symbol\n            order by dim.ts\n            rows between unbounded preceding and current row\n        ) as price\n    from\n        dim\n    left join prices\n        on\n            dim.ts = prices.ts\n            and dim.market_symbol = prices.market_symbol\n),\n\nhourly_prices as (\n    select\n        ts,\n        market_symbol,\n        price\n    from\n        ffill\n)\n\nselect *\nfrom\n    hourly_prices\nwhere\n    price is not null", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.656832Z", "completed_at": "2025-03-04T12:53:17.670841Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.673913Z", "completed_at": "2025-03-04T12:53:17.673921Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02767038345336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_tracking_stats_daily_arbitrum_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        tracking_code,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(volume) as volume,\n        SUM(trades) as trades\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_tracking_stats_hourly_arbitrum_mainnet\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        tracking_code\n),\n\naccounts as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        tracking_code,\n        COUNT(\n            distinct account_id\n        ) as \"accounts\"\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_trades_arbitrum_mainnet\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        tracking_code\n),\n\ntotal as (\n    select\n        ts,\n        SUM(exchange_fees) as exchange_fees_total,\n        SUM(referral_fees) as referral_fees_total,\n        SUM(collected_fees) as collected_fees_total,\n        SUM(volume) as volume_total,\n        SUM(trades) as trades_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.tracking_code,\n    trades.exchange_fees,\n    trades.referral_fees,\n    trades.collected_fees,\n    trades.volume,\n    trades.trades,\n    accounts.accounts,\n    case\n        when total.exchange_fees_total = 0 then 0\n        else trades.exchange_fees / total.exchange_fees_total\n    end as exchange_fees_share,\n    case\n        when total.referral_fees_total = 0 then 0\n        else trades.referral_fees / total.referral_fees_total\n    end as referral_fees_share,\n    case\n        when total.collected_fees_total = 0 then 0\n        else trades.collected_fees / total.collected_fees_total\n    end as collected_fees_share,\n    case\n        when total.volume_total = 0 then 0\n        else trades.volume / total.volume_total\n    end as volume_share,\n    case\n        when total.trades_total = 0 then 0\n        else trades.trades / total.trades_total\n    end as trades_share\nfrom\n    trades\ninner join accounts\n    on\n        trades.ts = accounts.ts\n        and trades.tracking_code = accounts.tracking_code\ninner join total\n    on trades.ts = total.ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_tracking_stats_daily_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.664025Z", "completed_at": "2025-03-04T12:53:17.673291Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.676338Z", "completed_at": "2025-03-04T12:53:17.676345Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028826475143432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_arbitrum_sepolia_price__True__0.cd20dabe63", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.688525Z", "completed_at": "2025-03-04T12:53:17.706389Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.708089Z", "completed_at": "2025-03-04T12:53:17.708103Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029443979263305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_arbitrum_sepolia_price.45fcd4b484", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_arbitrum_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.683204Z", "completed_at": "2025-03-04T12:53:17.707149Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.709789Z", "completed_at": "2025-03-04T12:53:17.709801Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03178977966308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_arbitrum_sepolia_market_symbol.5499da1cc7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_arbitrum_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.693854Z", "completed_at": "2025-03-04T12:53:17.709124Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.712030Z", "completed_at": "2025-03-04T12:53:17.712039Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.032063961029052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_arbitrum_sepolia_ts.a139176cd1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.701229Z", "completed_at": "2025-03-04T12:53:17.710692Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.713635Z", "completed_at": "2025-03-04T12:53:17.713643Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03178596496582031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_sepolia_dau.9ae6180ef4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dau\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_activity_arbitrum_sepolia\"\nwhere dau is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.719603Z", "completed_at": "2025-03-04T12:53:17.741145Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.742959Z", "completed_at": "2025-03-04T12:53:17.742973Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02860236167907715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_sepolia_mau.58d94fa36c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect mau\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_activity_arbitrum_sepolia\"\nwhere mau is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.725565Z", "completed_at": "2025-03-04T12:53:17.741965Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.744617Z", "completed_at": "2025-03-04T12:53:17.744627Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028922080993652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_sepolia_new_accounts_daily.18f4b9bc7f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_accounts_daily\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_activity_arbitrum_sepolia\"\nwhere new_accounts_daily is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.731499Z", "completed_at": "2025-03-04T12:53:17.744002Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.746831Z", "completed_at": "2025-03-04T12:53:17.746840Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02918410301208496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_sepolia_new_accounts_monthly.6665a7f408", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_accounts_monthly\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_activity_arbitrum_sepolia\"\nwhere new_accounts_monthly is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.736641Z", "completed_at": "2025-03-04T12:53:17.745491Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.748423Z", "completed_at": "2025-03-04T12:53:17.748432Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029602766036987305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_arbitrum_sepolia_ts.2b3425759c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_activity_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.757194Z", "completed_at": "2025-03-04T12:53:17.769886Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.775537Z", "completed_at": "2025-03-04T12:53:17.775550Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026370525360107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_stats_daily_arbitrum_sepolia", "compiled": true, "compiled_code": "with daily as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        account_id,\n        SUM(fees) as fees,\n        SUM(volume) as volume,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_stats_hourly_arbitrum_sepolia\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        account_id\n),\n\nstats as (\n    select\n        *,\n        SUM(fees) over (\n            partition by account_id\n            order by\n                ts\n            range between unbounded preceding\n            and current row\n        ) as cumulative_fees,\n        SUM(volume) over (\n            partition by account_id\n            order by\n                ts\n            range between unbounded preceding\n            and current row\n        ) as cumulative_volume\n    from\n        daily\n)\n\nselect *\nfrom\n    stats", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_account_stats_daily_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.761689Z", "completed_at": "2025-03-04T12:53:17.774679Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.776795Z", "completed_at": "2025-03-04T12:53:17.776810Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027139663696289062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_keeper_stats_daily_arbitrum_sepolia", "compiled": true, "compiled_code": "with hourly as (\n    select\n        keeper,\n        settlement_rewards,\n        amount_settled,\n        trades,\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_keeper_stats_hourly_arbitrum_sepolia\"\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(settlement_rewards) as settlement_reward_total,\n        SUM(amount_settled) as amount_settled_total\n    from\n        hourly\n    group by\n        ts\n)\n\nselect\n    hourly.ts,\n    hourly.keeper,\n    SUM(hourly.trades) as trades,\n    SUM(hourly.settlement_rewards) as settlement_rewards,\n    SUM(hourly.amount_settled) as amount_settled,\n    SUM(hourly.trades) / MAX(total.trades_total) as trades_pct,\n    SUM(hourly.settlement_rewards)\n    / MAX(total.settlement_reward_total) as settlement_rewards_pct,\n    SUM(hourly.amount_settled)\n    / MAX(total.amount_settled_total) as amount_settled_pct\nfrom\n    hourly\ninner join total\n    on hourly.ts = total.ts\ngroup by\n    hourly.ts,\n    hourly.keeper", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_keeper_stats_daily_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.766053Z", "completed_at": "2025-03-04T12:53:17.779170Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.782442Z", "completed_at": "2025-03-04T12:53:17.782456Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027320384979248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_stats_daily_arbitrum_sepolia", "compiled": true, "compiled_code": "select\n    DATE_TRUNC(\n        'day',\n        ts\n    ) as ts,\n    market_symbol,\n    SUM(trades) as trades,\n    SUM(exchange_fees) as exchange_fees,\n    SUM(referral_fees) as referral_fees,\n    SUM(collected_fees) as collected_fees,\n    SUM(volume) as volume,\n    SUM(amount_liquidated) as amount_liquidated,\n    SUM(liquidations) as liquidations,\n    MAX(cumulative_exchange_fees) as cumulative_exchange_fees,\n    MAX(cumulative_referral_fees) as cumulative_referral_fees,\n    MAX(cumulative_collected_fees) as cumulative_collected_fees,\n    MAX(cumulative_volume) as cumulative_volume\nfrom\n    \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_stats_hourly_arbitrum_sepolia\"\ngroup by\n    DATE_TRUNC(\n        'day',\n        ts\n    ),\n    market_symbol", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_stats_daily_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.770663Z", "completed_at": "2025-03-04T12:53:17.780265Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.783424Z", "completed_at": "2025-03-04T12:53:17.783431Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02698063850402832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_stats_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with inc_market as (\n    select\n        ts,\n        market_symbol,\n        trades,\n        exchange_fees,\n        referral_fees,\n        collected_fees,\n        volume,\n        liquidations,\n        cumulative_exchange_fees,\n        cumulative_referral_fees,\n        cumulative_collected_fees,\n        cumulative_volume\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_market_stats_hourly_arbitrum_sepolia\"\n),\n\nliq as (\n    select\n        ts,\n        total_reward,\n        1 as liquidated_accounts\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_liq_account_arbitrum_sepolia\"\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        SUM(total_reward) as liquidation_rewards,\n        SUM(liquidated_accounts) as liquidated_accounts\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        )\n),\n\ninc_trade as (\n    select\n        ts,\n        SUM(trades) as trades,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(volume) as volume,\n        SUM(cumulative_exchange_fees) as cumulative_exchange_fees,\n        SUM(cumulative_referral_fees) as cumulative_referral_fees,\n        SUM(cumulative_collected_fees) as cumulative_collected_fees,\n        SUM(cumulative_volume) as cumulative_volume\n    from\n        inc_market\n    group by\n        ts\n),\n\ninc as (\n    select\n        h.ts,\n        h.trades,\n        h.exchange_fees,\n        h.referral_fees,\n        h.collected_fees,\n        h.volume,\n        h.cumulative_exchange_fees,\n        h.cumulative_referral_fees,\n        h.cumulative_collected_fees,\n        h.cumulative_volume,\n        COALESCE(\n            l.liquidation_rewards,\n            0\n        ) as liquidation_rewards,\n        COALESCE(\n            l.liquidated_accounts,\n            0\n        ) as liquidated_accounts\n    from\n        inc_trade as h\n    left join inc_liq as l\n        on h.ts = l.ts\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_stats_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.794243Z", "completed_at": "2025-03-04T12:53:17.811580Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.813348Z", "completed_at": "2025-03-04T12:53:17.813362Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028522491455078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_hourly_base_mainnet", "compiled": true, "compiled_code": "\n\nwith prices as (\n\n    select distinct\n        market_symbol,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        LAST_VALUE(price) over (\n            partition by DATE_TRUNC('hour', ts), market_symbol\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as price\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_prices_base_mainnet\"\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                prices\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            prices\n    ) as m\n    group by\n        m.market_symbol\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        LAST(\n            prices.price\n        ) over (\n            partition by dim.market_symbol\n            order by\n                dim.ts\n            rows between unbounded preceding\n            and current row\n        ) as price\n    from\n        dim\n    left join prices\n        on\n            dim.ts = prices.ts\n            and dim.market_symbol = prices.market_symbol\n),\n\nhourly_prices as (\n    select\n        ts,\n        market_symbol,\n        price\n    from\n        ffill\n)\n\nselect *\nfrom\n    hourly_prices\nwhere\n    price is not null", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.789639Z", "completed_at": "2025-03-04T12:53:17.812353Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.814980Z", "completed_at": "2025-03-04T12:53:17.814992Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030787229537963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_tracking_stats_daily_arbitrum_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        tracking_code,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(volume) as volume,\n        SUM(trades) as trades\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_tracking_stats_hourly_arbitrum_sepolia\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        tracking_code\n),\n\naccounts as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        tracking_code,\n        COUNT(\n            distinct account_id\n        ) as \"accounts\"\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_trades_arbitrum_sepolia\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        tracking_code\n),\n\ntotal as (\n    select\n        ts,\n        SUM(exchange_fees) as exchange_fees_total,\n        SUM(referral_fees) as referral_fees_total,\n        SUM(collected_fees) as collected_fees_total,\n        SUM(volume) as volume_total,\n        SUM(trades) as trades_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.tracking_code,\n    trades.exchange_fees,\n    trades.referral_fees,\n    trades.collected_fees,\n    trades.volume,\n    trades.trades,\n    accounts.accounts,\n    case\n        when total.exchange_fees_total = 0 then 0\n        else trades.exchange_fees / total.exchange_fees_total\n    end as exchange_fees_share,\n    case\n        when total.referral_fees_total = 0 then 0\n        else trades.referral_fees / total.referral_fees_total\n    end as referral_fees_share,\n    case\n        when total.collected_fees_total = 0 then 0\n        else trades.collected_fees / total.collected_fees_total\n    end as collected_fees_share,\n    case\n        when total.volume_total = 0 then 0\n        else trades.volume / total.volume_total\n    end as volume_share,\n    case\n        when total.trades_total = 0 then 0\n        else trades.trades / total.trades_total\n    end as trades_share\nfrom\n    trades\ninner join accounts\n    on\n        trades.ts = accounts.ts\n        and trades.tracking_code = accounts.tracking_code\ninner join total\n    on trades.ts = total.ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_tracking_stats_daily_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.807101Z", "completed_at": "2025-03-04T12:53:17.814346Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.817417Z", "completed_at": "2025-03-04T12:53:17.817425Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028565406799316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_base_mainnet_market_symbol.dc8cb46b8c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_prices_base_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.799704Z", "completed_at": "2025-03-04T12:53:17.816499Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.819951Z", "completed_at": "2025-03-04T12:53:17.819962Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0317378044128418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_base_mainnet_price__True__0.4906889fd6", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_prices_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.825206Z", "completed_at": "2025-03-04T12:53:17.837521Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.850567Z", "completed_at": "2025-03-04T12:53:17.850582Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03170013427734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_base_mainnet_price.a6c62844d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_prices_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.831753Z", "completed_at": "2025-03-04T12:53:17.851532Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.853797Z", "completed_at": "2025-03-04T12:53:17.853807Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.032372236251831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_base_mainnet_ts.c885673fc8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_prices_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.838124Z", "completed_at": "2025-03-04T12:53:17.853048Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.856015Z", "completed_at": "2025-03-04T12:53:17.856026Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03239703178405762, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_mainnet_dau.a786475217", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dau\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_account_activity_base_mainnet\"\nwhere dau is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.843337Z", "completed_at": "2025-03-04T12:53:17.854739Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.857588Z", "completed_at": "2025-03-04T12:53:17.857596Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027271509170532227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_mainnet_mau.f4b29c398e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect mau\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_account_activity_base_mainnet\"\nwhere mau is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.861170Z", "completed_at": "2025-03-04T12:53:17.875275Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.881190Z", "completed_at": "2025-03-04T12:53:17.881206Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026032209396362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_mainnet_new_accounts_daily.59f0fcd49f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_accounts_daily\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_account_activity_base_mainnet\"\nwhere new_accounts_daily is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.869729Z", "completed_at": "2025-03-04T12:53:17.882278Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.888221Z", "completed_at": "2025-03-04T12:53:17.888231Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028547048568725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_mainnet_new_accounts_monthly.a064412063", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_accounts_monthly\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_account_activity_base_mainnet\"\nwhere new_accounts_monthly is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.876492Z", "completed_at": "2025-03-04T12:53:17.887638Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.890023Z", "completed_at": "2025-03-04T12:53:17.890032Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023190021514892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_mainnet_ts.4e1523873c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_account_activity_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.882867Z", "completed_at": "2025-03-04T12:53:17.890884Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:17.893700Z", "completed_at": "2025-03-04T12:53:17.893709Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025536060333251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_stats_daily_base_mainnet", "compiled": true, "compiled_code": "with daily as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        account_id,\n        SUM(fees) as fees,\n        SUM(volume) as volume,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_account_stats_hourly_base_mainnet\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        account_id\n),\n\nstats as (\n    select\n        *,\n        SUM(fees) over (\n            partition by account_id\n            order by\n                ts\n            range between unbounded preceding\n            and current row\n        ) as cumulative_fees,\n        SUM(volume) over (\n            partition by account_id\n            order by\n                ts\n            range between unbounded preceding\n            and current row\n        ) as cumulative_volume\n    from\n        daily\n)\n\nselect *\nfrom\n    stats", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_account_stats_daily_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.895247Z", "completed_at": "2025-03-04T12:53:17.902094Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.141095Z", "completed_at": "2025-03-04T12:53:18.141112Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2520017623901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_keeper_stats_daily_base_mainnet", "compiled": true, "compiled_code": "with hourly as (\n    select\n        keeper,\n        settlement_rewards,\n        amount_settled,\n        trades,\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_keeper_stats_hourly_base_mainnet\"\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(settlement_rewards) as settlement_reward_total,\n        SUM(amount_settled) as amount_settled_total\n    from\n        hourly\n    group by\n        ts\n)\n\nselect\n    hourly.ts,\n    hourly.keeper,\n    SUM(hourly.trades) as trades,\n    SUM(hourly.settlement_rewards) as settlement_rewards,\n    SUM(hourly.amount_settled) as amount_settled,\n    SUM(hourly.trades) / MAX(total.trades_total) as trades_pct,\n    SUM(hourly.settlement_rewards)\n    / MAX(total.settlement_reward_total) as settlement_rewards_pct,\n    SUM(hourly.amount_settled)\n    / MAX(total.amount_settled_total) as amount_settled_pct\nfrom\n    hourly\ninner join total\n    on hourly.ts = total.ts\ngroup by\n    hourly.ts,\n    hourly.keeper", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_keeper_stats_daily_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.903357Z", "completed_at": "2025-03-04T12:53:18.143925Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.149867Z", "completed_at": "2025-03-04T12:53:18.149878Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2553720474243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_stats_daily_base_mainnet", "compiled": true, "compiled_code": "select\n    DATE_TRUNC(\n        'day',\n        ts\n    ) as ts,\n    market_symbol,\n    SUM(trades) as trades,\n    SUM(exchange_fees) as exchange_fees,\n    SUM(referral_fees) as referral_fees,\n    SUM(collected_fees) as collected_fees,\n    SUM(volume) as volume,\n    SUM(amount_liquidated) as amount_liquidated,\n    SUM(liquidations) as liquidations,\n    MAX(cumulative_exchange_fees) as cumulative_exchange_fees,\n    MAX(cumulative_referral_fees) as cumulative_referral_fees,\n    MAX(cumulative_collected_fees) as cumulative_collected_fees,\n    MAX(cumulative_volume) as cumulative_volume\nfrom\n    \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_stats_hourly_base_mainnet\"\ngroup by\n    DATE_TRUNC(\n        'day',\n        ts\n    ),\n    market_symbol", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_market_stats_daily_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:17.909713Z", "completed_at": "2025-03-04T12:53:18.144563Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.150781Z", "completed_at": "2025-03-04T12:53:18.150789Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.25165867805480957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_stats_hourly_base_mainnet", "compiled": true, "compiled_code": "with inc_market as (\n    select\n        ts,\n        market_symbol,\n        trades,\n        exchange_fees,\n        referral_fees,\n        collected_fees,\n        volume,\n        liquidations,\n        cumulative_exchange_fees,\n        cumulative_referral_fees,\n        cumulative_collected_fees,\n        cumulative_volume\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_market_stats_hourly_base_mainnet\"\n),\n\nliq as (\n    select\n        ts,\n        total_reward,\n        1 as liquidated_accounts\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_liq_account_base_mainnet\"\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        SUM(total_reward) as liquidation_rewards,\n        SUM(liquidated_accounts) as liquidated_accounts\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        )\n),\n\ninc_trade as (\n    select\n        ts,\n        SUM(trades) as trades,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(volume) as volume,\n        SUM(cumulative_exchange_fees) as cumulative_exchange_fees,\n        SUM(cumulative_referral_fees) as cumulative_referral_fees,\n        SUM(cumulative_collected_fees) as cumulative_collected_fees,\n        SUM(cumulative_volume) as cumulative_volume\n    from\n        inc_market\n    group by\n        ts\n),\n\ninc as (\n    select\n        h.ts,\n        h.trades,\n        h.exchange_fees,\n        h.referral_fees,\n        h.collected_fees,\n        h.volume,\n        h.cumulative_exchange_fees,\n        h.cumulative_referral_fees,\n        h.cumulative_collected_fees,\n        h.cumulative_volume,\n        COALESCE(\n            l.liquidation_rewards,\n            0\n        ) as liquidation_rewards,\n        COALESCE(\n            l.liquidated_accounts,\n            0\n        ) as liquidated_accounts\n    from\n        inc_trade as h\n    left join inc_liq as l\n        on h.ts = l.ts\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_stats_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.145145Z", "completed_at": "2025-03-04T12:53:18.153057Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.159081Z", "completed_at": "2025-03-04T12:53:18.159090Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.25647759437561035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_tracking_stats_daily_base_mainnet", "compiled": true, "compiled_code": "with trades as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        tracking_code,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(volume) as volume,\n        SUM(trades) as trades\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_tracking_stats_hourly_base_mainnet\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        tracking_code\n),\n\naccounts as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        tracking_code,\n        COUNT(\n            distinct account_id\n        ) as \"accounts\"\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_perp_trades_base_mainnet\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        tracking_code\n),\n\ntotal as (\n    select\n        ts,\n        SUM(exchange_fees) as exchange_fees_total,\n        SUM(referral_fees) as referral_fees_total,\n        SUM(collected_fees) as collected_fees_total,\n        SUM(volume) as volume_total,\n        SUM(trades) as trades_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.tracking_code,\n    trades.exchange_fees,\n    trades.referral_fees,\n    trades.collected_fees,\n    trades.volume,\n    trades.trades,\n    accounts.accounts,\n    case\n        when total.exchange_fees_total = 0 then 0\n        else trades.exchange_fees / total.exchange_fees_total\n    end as exchange_fees_share,\n    case\n        when total.referral_fees_total = 0 then 0\n        else trades.referral_fees / total.referral_fees_total\n    end as referral_fees_share,\n    case\n        when total.collected_fees_total = 0 then 0\n        else trades.collected_fees / total.collected_fees_total\n    end as collected_fees_share,\n    case\n        when total.volume_total = 0 then 0\n        else trades.volume / total.volume_total\n    end as volume_share,\n    case\n        when total.trades_total = 0 then 0\n        else trades.trades / total.trades_total\n    end as trades_share\nfrom\n    trades\ninner join accounts\n    on\n        trades.ts = accounts.ts\n        and trades.tracking_code = accounts.tracking_code\ninner join total\n    on trades.ts = total.ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_tracking_stats_daily_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.154527Z", "completed_at": "2025-03-04T12:53:18.161353Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.168096Z", "completed_at": "2025-03-04T12:53:18.168111Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019086599349975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_prices_hourly_base_sepolia", "compiled": true, "compiled_code": "with prices as (\n    select distinct\n        market_symbol,\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        LAST_VALUE(price) over (\n            partition by DATE_TRUNC('hour', ts), market_symbol\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as price\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_prices_base_sepolia\"\n),\n\ndim as (\n    select\n        m.market_symbol,\n        GENERATE_SERIES(\n            DATE_TRUNC('hour', MIN(t.ts)),\n            DATE_TRUNC('hour', MAX(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                prices\n        ) as t\n    cross join (\n        select distinct market_symbol\n        from\n            prices\n    ) as m\n    group by\n        m.market_symbol\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.market_symbol,\n        LAST(prices.price) over (\n            partition by dim.market_symbol\n            order by dim.ts\n            rows between unbounded preceding and current row\n        ) as price\n    from\n        dim\n    left join prices\n        on\n            dim.ts = prices.ts\n            and dim.market_symbol = prices.market_symbol\n),\n\nhourly_prices as (\n    select\n        ts,\n        market_symbol,\n        price\n    from\n        ffill\n)\n\nselect *\nfrom\n    hourly_prices\nwhere\n    price is not null", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_prices_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.163248Z", "completed_at": "2025-03-04T12:53:18.176261Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.183155Z", "completed_at": "2025-03-04T12:53:18.183172Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02502274513244629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_base_sepolia_price__True__0.78bfe2f46a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_prices_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.169912Z", "completed_at": "2025-03-04T12:53:18.182537Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.185032Z", "completed_at": "2025-03-04T12:53:18.185040Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025140762329101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_base_sepolia_market_symbol.e2a8214091", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_prices_base_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.177957Z", "completed_at": "2025-03-04T12:53:18.186597Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.195095Z", "completed_at": "2025-03-04T12:53:18.195105Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025965213775634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_base_sepolia_price.3c29a949cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_prices_base_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.187245Z", "completed_at": "2025-03-04T12:53:18.197373Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.203941Z", "completed_at": "2025-03-04T12:53:18.203950Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02683091163635254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_base_sepolia_ts.2875b0c397", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_prices_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.199258Z", "completed_at": "2025-03-04T12:53:18.210978Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.213584Z", "completed_at": "2025-03-04T12:53:18.213594Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019282102584838867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_sepolia_dau.c87efa2ebe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect dau\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_account_activity_base_sepolia\"\nwhere dau is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.205583Z", "completed_at": "2025-03-04T12:53:18.212978Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.220250Z", "completed_at": "2025-03-04T12:53:18.220259Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02425861358642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_sepolia_mau.482322aa86", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect mau\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_account_activity_base_sepolia\"\nwhere mau is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.214473Z", "completed_at": "2025-03-04T12:53:18.227963Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.230777Z", "completed_at": "2025-03-04T12:53:18.230788Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026033639907836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_sepolia_new_accounts_daily.44600d3a64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_accounts_daily\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_account_activity_base_sepolia\"\nwhere new_accounts_daily is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.222002Z", "completed_at": "2025-03-04T12:53:18.230158Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.232849Z", "completed_at": "2025-03-04T12:53:18.232857Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020648956298828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_sepolia_new_accounts_monthly.4d411e3958", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect new_accounts_monthly\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_account_activity_base_sepolia\"\nwhere new_accounts_monthly is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.234636Z", "completed_at": "2025-03-04T12:53:18.247633Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.250067Z", "completed_at": "2025-03-04T12:53:18.250079Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021471023559570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_account_activity_base_sepolia_ts.11c7283b87", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_account_activity_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.241562Z", "completed_at": "2025-03-04T12:53:18.248915Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.254693Z", "completed_at": "2025-03-04T12:53:18.254702Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025272846221923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_keeper_stats_daily_base_sepolia", "compiled": true, "compiled_code": "with hourly as (\n    select\n        keeper,\n        settlement_rewards,\n        amount_settled,\n        trades,\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_keeper_stats_hourly_base_sepolia\"\n),\n\ntotal as (\n    select\n        ts,\n        SUM(trades) as trades_total,\n        SUM(settlement_rewards) as settlement_reward_total,\n        SUM(amount_settled) as amount_settled_total\n    from\n        hourly\n    group by\n        ts\n)\n\nselect\n    hourly.ts,\n    hourly.keeper,\n    SUM(hourly.trades) as trades,\n    SUM(hourly.settlement_rewards) as settlement_rewards,\n    SUM(hourly.amount_settled) as amount_settled,\n    SUM(hourly.trades) / MAX(total.trades_total) as trades_pct,\n    SUM(hourly.settlement_rewards)\n    / MAX(total.settlement_reward_total) as settlement_rewards_pct,\n    SUM(hourly.amount_settled)\n    / MAX(total.amount_settled_total) as amount_settled_pct\nfrom\n    hourly\ninner join total\n    on hourly.ts = total.ts\ngroup by\n    hourly.ts,\n    hourly.keeper", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_keeper_stats_daily_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.255605Z", "completed_at": "2025-03-04T12:53:18.262113Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.264567Z", "completed_at": "2025-03-04T12:53:18.264577Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017838716506958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_tracking_stats_daily_base_sepolia", "compiled": true, "compiled_code": "with trades as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        tracking_code,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(volume) as volume,\n        SUM(trades) as trades\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_tracking_stats_hourly_base_sepolia\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        tracking_code\n),\n\naccounts as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        tracking_code,\n        COUNT(\n            distinct account_id\n        ) as \"accounts\"\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_trades_base_sepolia\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        tracking_code\n),\n\ntotal as (\n    select\n        ts,\n        SUM(exchange_fees) as exchange_fees_total,\n        SUM(referral_fees) as referral_fees_total,\n        SUM(collected_fees) as collected_fees_total,\n        SUM(volume) as volume_total,\n        SUM(trades) as trades_total\n    from\n        trades\n    group by\n        ts\n)\n\nselect\n    trades.ts,\n    trades.tracking_code,\n    trades.exchange_fees,\n    trades.referral_fees,\n    trades.collected_fees,\n    trades.volume,\n    trades.trades,\n    accounts.accounts,\n    case\n        when total.exchange_fees_total = 0 then 0\n        else trades.exchange_fees / total.exchange_fees_total\n    end as exchange_fees_share,\n    case\n        when total.referral_fees_total = 0 then 0\n        else trades.referral_fees / total.referral_fees_total\n    end as referral_fees_share,\n    case\n        when total.collected_fees_total = 0 then 0\n        else trades.collected_fees / total.collected_fees_total\n    end as collected_fees_share,\n    case\n        when total.volume_total = 0 then 0\n        else trades.volume / total.volume_total\n    end as volume_share,\n    case\n        when total.trades_total = 0 then 0\n        else trades.trades / total.trades_total\n    end as trades_share\nfrom\n    trades\ninner join accounts\n    on\n        trades.ts = accounts.ts\n        and trades.tracking_code = accounts.tracking_code\ninner join total\n    on trades.ts = total.ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_tracking_stats_daily_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.250993Z", "completed_at": "2025-03-04T12:53:18.263356Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.266038Z", "completed_at": "2025-03-04T12:53:18.266046Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020485639572143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_account_stats_daily_base_sepolia", "compiled": true, "compiled_code": "with daily as (\n    select\n        DATE_TRUNC(\n            'day',\n            ts\n        ) as ts,\n        account_id,\n        SUM(fees) as fees,\n        SUM(volume) as volume,\n        SUM(amount_liquidated) as amount_liquidated,\n        SUM(liquidations) as liquidations\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_account_stats_hourly_base_sepolia\"\n    group by\n        DATE_TRUNC(\n            'day',\n            ts\n        ),\n        account_id\n),\n\nstats as (\n    select\n        *,\n        SUM(fees) over (\n            partition by account_id\n            order by\n                ts\n            range between unbounded preceding\n            and current row\n        ) as cumulative_fees,\n        SUM(volume) over (\n            partition by account_id\n            order by\n                ts\n            range between unbounded preceding\n            and current row\n        ) as cumulative_volume\n    from\n        daily\n)\n\nselect *\nfrom\n    stats", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_account_stats_daily_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.267087Z", "completed_at": "2025-03-04T12:53:18.278110Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.280481Z", "completed_at": "2025-03-04T12:53:18.280493Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019217491149902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_market_stats_daily_base_sepolia", "compiled": true, "compiled_code": "select\n    DATE_TRUNC(\n        'day',\n        ts\n    ) as ts,\n    market_symbol,\n    SUM(trades) as trades,\n    SUM(exchange_fees) as exchange_fees,\n    SUM(referral_fees) as referral_fees,\n    SUM(collected_fees) as collected_fees,\n    SUM(volume) as volume,\n    SUM(amount_liquidated) as amount_liquidated,\n    SUM(liquidations) as liquidations,\n    MAX(cumulative_exchange_fees) as cumulative_exchange_fees,\n    MAX(cumulative_referral_fees) as cumulative_referral_fees,\n    MAX(cumulative_collected_fees) as cumulative_collected_fees,\n    MAX(cumulative_volume) as cumulative_volume\nfrom\n    \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_stats_hourly_base_sepolia\"\ngroup by\n    DATE_TRUNC(\n        'day',\n        ts\n    ),\n    market_symbol", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_market_stats_daily_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.271524Z", "completed_at": "2025-03-04T12:53:18.278751Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.281370Z", "completed_at": "2025-03-04T12:53:18.281377Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018888235092163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_stats_hourly_base_sepolia", "compiled": true, "compiled_code": "with inc_market as (\n    select\n        ts,\n        market_symbol,\n        trades,\n        exchange_fees,\n        referral_fees,\n        collected_fees,\n        volume,\n        liquidations,\n        cumulative_exchange_fees,\n        cumulative_referral_fees,\n        cumulative_collected_fees,\n        cumulative_volume\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_market_stats_hourly_base_sepolia\"\n),\n\nliq as (\n    select\n        ts,\n        total_reward,\n        1 as liquidated_accounts\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_perp_liq_account_base_sepolia\"\n),\n\ninc_liq as (\n    select\n        DATE_TRUNC(\n            'hour',\n            ts\n        ) as ts,\n        SUM(total_reward) as liquidation_rewards,\n        SUM(liquidated_accounts) as liquidated_accounts\n    from\n        liq\n    group by\n        DATE_TRUNC(\n            'hour',\n            ts\n        )\n),\n\ninc_trade as (\n    select\n        ts,\n        SUM(trades) as trades,\n        SUM(exchange_fees) as exchange_fees,\n        SUM(referral_fees) as referral_fees,\n        SUM(collected_fees) as collected_fees,\n        SUM(volume) as volume,\n        SUM(cumulative_exchange_fees) as cumulative_exchange_fees,\n        SUM(cumulative_referral_fees) as cumulative_referral_fees,\n        SUM(cumulative_collected_fees) as cumulative_collected_fees,\n        SUM(cumulative_volume) as cumulative_volume\n    from\n        inc_market\n    group by\n        ts\n),\n\ninc as (\n    select\n        h.ts,\n        h.trades,\n        h.exchange_fees,\n        h.referral_fees,\n        h.collected_fees,\n        h.volume,\n        h.cumulative_exchange_fees,\n        h.cumulative_referral_fees,\n        h.cumulative_collected_fees,\n        h.cumulative_volume,\n        COALESCE(\n            l.liquidation_rewards,\n            0\n        ) as liquidation_rewards,\n        COALESCE(\n            l.liquidated_accounts,\n            0\n        ) as liquidated_accounts\n    from\n        inc_trade as h\n    left join inc_liq as l\n        on h.ts = l.ts\n)\n\nselect *\nfrom\n    inc", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_stats_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.282413Z", "completed_at": "2025-03-04T12:53:18.296785Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.299425Z", "completed_at": "2025-03-04T12:53:18.299439Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023004770278930664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_rewards_claimed_eth_mainnet_reward_type__liquidation__incentive.b5f4f5c218", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        reward_type as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\n    group by reward_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'liquidation','incentive'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.289927Z", "completed_at": "2025-03-04T12:53:18.298225Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.300944Z", "completed_at": "2025-03-04T12:53:18.300951Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02353191375732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_eth_mainnet_amount__True__0.2b75221749", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.309403Z", "completed_at": "2025-03-04T12:53:18.316344Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.318755Z", "completed_at": "2025-03-04T12:53:18.318767Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020061731338500977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_eth_mainnet_pool_id__True__0.c0de87f96d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.303086Z", "completed_at": "2025-03-04T12:53:18.317587Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.325029Z", "completed_at": "2025-03-04T12:53:18.325040Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027624845504760742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_eth_mainnet_amount_usd__True__0.f837408d41", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.325970Z", "completed_at": "2025-03-04T12:53:18.333777Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.336112Z", "completed_at": "2025-03-04T12:53:18.336125Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02072000503540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_account_id.d7e33101ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.319679Z", "completed_at": "2025-03-04T12:53:18.334332Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.337039Z", "completed_at": "2025-03-04T12:53:18.337046Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02263164520263672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_eth_mainnet_price__True__0.f8f179792b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.337922Z", "completed_at": "2025-03-04T12:53:18.351360Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.353834Z", "completed_at": "2025-03-04T12:53:18.353844Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02160334587097168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_amount.cc2094f474", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.344816Z", "completed_at": "2025-03-04T12:53:18.352604Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.355302Z", "completed_at": "2025-03-04T12:53:18.355309Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022273778915405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_amount_usd.d931c6b364", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_usd\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere amount_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.362993Z", "completed_at": "2025-03-04T12:53:18.369881Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.376198Z", "completed_at": "2025-03-04T12:53:18.376214Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023157358169555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_distributor.fa14ffc528", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.357387Z", "completed_at": "2025-03-04T12:53:18.370453Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.377212Z", "completed_at": "2025-03-04T12:53:18.377220Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025364160537719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_collateral_type.850468038b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.371611Z", "completed_at": "2025-03-04T12:53:18.383404Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.386154Z", "completed_at": "2025-03-04T12:53:18.386163Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018872499465942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_pool_id.27da309c31", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.378099Z", "completed_at": "2025-03-04T12:53:18.385590Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.388255Z", "completed_at": "2025-03-04T12:53:18.388266Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02005910873413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_price.9f6d1846cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.391066Z", "completed_at": "2025-03-04T12:53:18.404608Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.406526Z", "completed_at": "2025-03-04T12:53:18.406536Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02175283432006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_reward_type.c0bd49ab6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reward_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere reward_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.399204Z", "completed_at": "2025-03-04T12:53:18.407371Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.416826Z", "completed_at": "2025-03-04T12:53:18.416836Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029921770095825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_token_symbol.787b52c171", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.407976Z", "completed_at": "2025-03-04T12:53:18.418750Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.421177Z", "completed_at": "2025-03-04T12:53:18.421188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022755146026611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_eth_mainnet_ts.b32a3a9675", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_rewards_claimed_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.412541Z", "completed_at": "2025-03-04T12:53:18.419311Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.422074Z", "completed_at": "2025-03-04T12:53:18.422082Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01834869384765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pol_stats_daily_eth_mainnet", "compiled": true, "compiled_code": "with delegated as (\n    select\n        ts,\n        account_id,\n        change_in_amount,\n        cumulative_amount,\n        cumulative_value,\n        price\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_pol_delegated_eth_mainnet\"\n    order by ts asc\n),\n\ndaily_aggregates as (\n    select\n        date_trunc('day', delegated.ts) as ts,\n        sum(change_in_amount) as daily_change_in_amount,\n        count(distinct account_id) as daily_account_count,\n        last(delegated.cumulative_amount) as daily_cumulative_amount,\n        last(delegated.cumulative_value) as daily_cumulative_value,\n        last(delegated.price) as daily_price\n    from delegated\n    group by date_trunc('day', delegated.ts)\n)\n\nselect\n    ts,\n    daily_change_in_amount,\n    daily_cumulative_amount,\n    daily_cumulative_value,\n    daily_price,\n    daily_account_count\nfrom daily_aggregates", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pol_stats_daily_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.423584Z", "completed_at": "2025-03-04T12:53:18.430672Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.436072Z", "completed_at": "2025-03-04T12:53:18.436084Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01817154884338379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pol_stats_hourly_eth_mainnet", "compiled": true, "compiled_code": "with delegated as (\n    select\n        ts,\n        account_id,\n        change_in_amount,\n        cumulative_amount,\n        cumulative_value,\n        price\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_pol_delegated_eth_mainnet\"\n    order by ts asc\n),\n\nhourly_aggregates as (\n    select\n        date_trunc('hour', delegated.ts) as ts,\n        sum(change_in_amount) as hourly_change_in_amount,\n        count(distinct account_id) as hourly_account_count,\n        last(delegated.cumulative_amount) as hourly_cumulative_amount,\n        last(delegated.cumulative_value) as hourly_cumulative_value,\n        last(delegated.price) as hourly_price\n    from delegated\n    group by date_trunc('hour', delegated.ts)\n)\n\nselect\n    ts,\n    hourly_change_in_amount,\n    hourly_cumulative_amount,\n    hourly_cumulative_value,\n    hourly_price,\n    hourly_account_count\nfrom hourly_aggregates", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pol_stats_hourly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.431275Z", "completed_at": "2025-03-04T12:53:18.445450Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.447379Z", "completed_at": "2025-03-04T12:53:18.447391Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024605274200439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pol_stats_monthly_eth_mainnet", "compiled": true, "compiled_code": "with delegated as (\n    select\n        ts,\n        account_id,\n        change_in_amount,\n        cumulative_amount,\n        cumulative_value,\n        price\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_pol_delegated_eth_mainnet\"\n    order by ts asc\n),\n\nmonthly_aggregates as (\n    select\n        date_trunc('month', delegated.ts) as ts,\n        sum(change_in_amount) as monthly_change_in_amount,\n        count(distinct account_id) as monthly_account_count,\n        last(delegated.cumulative_amount) as monthly_cumulative_amount,\n        last(delegated.cumulative_value) as monthly_cumulative_value,\n        last(delegated.price) as monthly_price\n    from delegated\n    group by date_trunc('month', delegated.ts)\n)\n\nselect\n    ts,\n    monthly_change_in_amount,\n    monthly_cumulative_amount,\n    monthly_cumulative_value,\n    monthly_price,\n    monthly_account_count\nfrom monthly_aggregates", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pol_stats_monthly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.437122Z", "completed_at": "2025-03-04T12:53:18.448262Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.450976Z", "completed_at": "2025-03-04T12:53:18.450984Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0216827392578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pol_stats_weekly_eth_mainnet", "compiled": true, "compiled_code": "with delegated as (\n    select\n        ts,\n        account_id,\n        change_in_amount,\n        cumulative_amount,\n        cumulative_value,\n        price\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_pol_delegated_eth_mainnet\"\n    order by ts asc\n),\n\nweekly_aggregates as (\n    select\n        date_trunc('week', delegated.ts) as ts,\n        sum(change_in_amount) as weekly_change_in_amount,\n        count(distinct account_id) as weekly_account_count,\n        last(delegated.cumulative_amount) as weekly_cumulative_amount,\n        last(delegated.cumulative_value) as weekly_cumulative_value,\n        last(delegated.price) as weekly_price\n    from delegated\n    group by date_trunc('week', delegated.ts)\n)\n\nselect\n    ts,\n    weekly_change_in_amount,\n    weekly_cumulative_amount,\n    weekly_cumulative_value,\n    weekly_price,\n    weekly_account_count\nfrom weekly_aggregates", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pol_stats_weekly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.442439Z", "completed_at": "2025-03-04T12:53:18.450299Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.453083Z", "completed_at": "2025-03-04T12:53:18.453093Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023108720779418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_hourly_eth_mainnet", "compiled": true, "compiled_code": "with token_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        rewards_usd\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    SUM(rewards_usd) as rewards_usd\nfrom\n    token_hourly\ngroup by\n    ts,\n    pool_id,\n    collateral_type", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_hourly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.454653Z", "completed_at": "2025-03-04T12:53:18.467651Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.469579Z", "completed_at": "2025-03-04T12:53:18.469590Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020802974700927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_eth_mainnet_amount_distributed__True__0.26815f50d4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_distributed >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.462091Z", "completed_at": "2025-03-04T12:53:18.470427Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.481834Z", "completed_at": "2025-03-04T12:53:18.481846Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02953958511352539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_eth_mainnet_hourly_amount__True__0.76ed6e76ab", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.471029Z", "completed_at": "2025-03-04T12:53:18.483127Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.485718Z", "completed_at": "2025-03-04T12:53:18.485730Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02478480339050293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_eth_mainnet_pool_id__True__0.0f059b9a12", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.476008Z", "completed_at": "2025-03-04T12:53:18.483744Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.486688Z", "completed_at": "2025-03-04T12:53:18.486695Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019932031631469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_eth_mainnet_price__True__0.3b4b47afcc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.490152Z", "completed_at": "2025-03-04T12:53:18.505431Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.511983Z", "completed_at": "2025-03-04T12:53:18.512000Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027855634689331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_eth_mainnet_rewards_usd__True__0.0d8876b70b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.499863Z", "completed_at": "2025-03-04T12:53:18.513064Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.519769Z", "completed_at": "2025-03-04T12:53:18.519778Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03173971176147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_amount_distributed.3faeed6846", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_distributed\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere amount_distributed is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.506884Z", "completed_at": "2025-03-04T12:53:18.519175Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.522080Z", "completed_at": "2025-03-04T12:53:18.522091Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023821592330932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_collateral_type.22ec7c38ba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.513694Z", "completed_at": "2025-03-04T12:53:18.521500Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.524287Z", "completed_at": "2025-03-04T12:53:18.524295Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025316715240478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_distributor.a65a6d19bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.526484Z", "completed_at": "2025-03-04T12:53:18.534555Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.541140Z", "completed_at": "2025-03-04T12:53:18.541151Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020439624786376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_hourly_amount.701c4a765f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_amount\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere hourly_amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.535710Z", "completed_at": "2025-03-04T12:53:18.553300Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.555011Z", "completed_at": "2025-03-04T12:53:18.555023Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029308080673217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_pool_id.69049a093a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.548739Z", "completed_at": "2025-03-04T12:53:18.556710Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.559103Z", "completed_at": "2025-03-04T12:53:18.559111Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025345325469970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_rewards_usd.84778cf230", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.542068Z", "completed_at": "2025-03-04T12:53:18.557910Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.560644Z", "completed_at": "2025-03-04T12:53:18.560653Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02836465835571289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_price.89f536fe6c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.561512Z", "completed_at": "2025-03-04T12:53:18.569009Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.575426Z", "completed_at": "2025-03-04T12:53:18.575437Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01951146125793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_token_symbol.609ae29f03", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.569621Z", "completed_at": "2025-03-04T12:53:18.577054Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.588262Z", "completed_at": "2025-03-04T12:53:18.588273Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02840876579284668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_eth_mainnet_ts.667157dbf6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.577660Z", "completed_at": "2025-03-04T12:53:18.590948Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.593348Z", "completed_at": "2025-03-04T12:53:18.593357Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02521538734436035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_rewards_claimed_arbitrum_mainnet", "compiled": true, "compiled_code": "with rewards_claimed as (\n    select\n        block_timestamp as ts,\n        CAST(\n            pool_id as INTEGER\n        ) as pool_id,\n        account_id,\n        collateral_type,\n        distributor,\n        \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_claimed_arbitrum_mainnet\"\n),\n\ndistributors as (\n    select\n        CAST(distributor_address as TEXT) as distributor_address,\n        CAST(token_symbol as TEXT) as token_symbol,\n        reward_type\n    from\n        \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_reward_distributors\"\n),\n\nhourly_prices as (\n    select\n        ts,\n        market_symbol,\n        price\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\"\n)\n\nselect\n    rc.ts,\n    rc.pool_id,\n    rc.collateral_type,\n    rc.account_id,\n    distributors.reward_type,\n    rc.distributor,\n    distributors.token_symbol,\n    rc.amount,\n    hourly_prices.price,\n    rc.amount * hourly_prices.price as amount_usd\nfrom\n    rewards_claimed as rc\ninner join distributors on rc.distributor = distributors.distributor_address\ninner join\n    hourly_prices\n    on\n        DATE_TRUNC('hour', rc.ts) = hourly_prices.ts\n        and distributors.token_symbol = hourly_prices.market_symbol\norder by\n    rc.ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.582674Z", "completed_at": "2025-03-04T12:53:18.591534Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.594234Z", "completed_at": "2025-03-04T12:53:18.594242Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02020859718322754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_collateral_balances_arbitrum_mainnet", "compiled": true, "compiled_code": "with synths as (\n    select\n        synth_market_id as collateral_id,\n        synth_token_address\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"spot_synth_registered_arbitrum_mainnet\"\n),\n\ntransfers as (\n    select\n        cm.block_number,\n        cm.block_timestamp as ts,\n        cm.transaction_hash,\n        cm.collateral_id,\n        synths.synth_token_address,\n        CAST(cm.account_id as text) as account_id,\n        \n    cm.amount_delta / 1e18\n as amount_delta\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_collateral_modified_arbitrum_mainnet\" as cm\n    inner join synths\n        on cm.collateral_id = synths.collateral_id\n),\n\nliq_tx as (\n    select distinct\n        transaction_hash,\n        CAST(account_id as text) as account_id\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"perp_account_liquidation_attempt_arbitrum_mainnet\"\n),\n\ndistributors as (\n    select\n        CAST(rd.distributor_address as text) as distributor_address,\n        CAST(rd.token_symbol as text) as token_symbol,\n        rd.synth_token_address,\n        synths.collateral_id\n    from\n        \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_reward_distributors\" as rd\n    inner join synths\n        on rd.synth_token_address = synths.synth_token_address\n),\n\nliquidations as (\n    select\n        rd.block_number,\n        rd.block_timestamp as ts,\n        -rd.amount / 1e18 as amount_delta,\n        liq_tx.transaction_hash,\n        rd.collateral_type,\n        distributors.token_symbol,\n        distributors.synth_token_address,\n        CAST(liq_tx.account_id as text) as account_id,\n        distributors.collateral_id\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_rewards_distributed_arbitrum_mainnet\" as rd\n    inner join liq_tx\n        on rd.transaction_hash = liq_tx.transaction_hash\n    inner join distributors\n        on rd.distributor = distributors.distributor_address\n),\n\nnet_transfers as (\n    select\n        events.ts,\n        events.transaction_hash,\n        events.event_type,\n        events.collateral_id,\n        events.synth_token_address,\n        synths.synth_symbol,\n        events.account_id,\n        prices.price,\n        events.amount_delta,\n        SUM(events.amount_delta) over (\n            partition by events.account_id, events.collateral_id\n            order by events.ts\n        ) as account_balance,\n        SUM(events.amount_delta) over (\n            partition by events.collateral_id\n            order by events.ts\n        ) as total_balance\n    from (\n        select\n            transfers.ts,\n            transfers.transaction_hash,\n            transfers.collateral_id,\n            transfers.synth_token_address,\n            transfers.account_id,\n            transfers.amount_delta,\n            'transfer' as event_type\n        from\n            transfers\n        union all\n        select\n            liquidations.ts,\n            liquidations.transaction_hash,\n            liquidations.collateral_id,\n            liquidations.synth_token_address,\n            liquidations.account_id,\n            liquidations.amount_delta,\n            'liquidation' as event_type\n        from\n            liquidations\n    ) as events\n    inner join \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_synths\" as synths\n        on events.collateral_id = synths.synth_market_id\n    left join \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\" as prices\n        on\n            synths.token_symbol = prices.market_symbol\n            and DATE_TRUNC('hour', events.ts) = prices.ts\n)\n\nselect\n    net_transfers.ts,\n    net_transfers.transaction_hash,\n    net_transfers.event_type,\n    net_transfers.collateral_id,\n    net_transfers.synth_token_address,\n    net_transfers.synth_symbol,\n    net_transfers.account_id,\n    net_transfers.price,\n    net_transfers.amount_delta,\n    net_transfers.amount_delta * net_transfers.price as amount_delta_usd,\n    net_transfers.account_balance,\n    net_transfers.account_balance * net_transfers.price as account_balance_usd,\n    net_transfers.total_balance,\n    net_transfers.total_balance * net_transfers.price as total_balance_usd\nfrom\n    net_transfers", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.595125Z", "completed_at": "2025-03-04T12:53:18.610392Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.612625Z", "completed_at": "2025-03-04T12:53:18.612637Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02341151237487793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_token_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.min_ts)),\n            date_trunc('hour', max(t.max_ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select\n                min(ts_start) as min_ts,\n                max(\n                    ts_start + \"duration\" * '1 second'::INTERVAL\n                ) as max_ts\n            from\n                \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nrewards_distributed as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        distributor,\n        token_symbol,\n        amount,\n        ts_start,\n        \"duration\"\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_arbitrum_mainnet\"\n),\n\nhourly_distributions as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        r.distributor,\n        r.token_symbol,\n        r.amount,\n        r.ts_start,\n        r.\"duration\",\n        row_number() over (\n            partition by\n                dim.ts,\n                dim.pool_id,\n                dim.collateral_type,\n                r.distributor\n            order by\n                r.ts_start desc\n        ) as distributor_index\n    from\n        dim\n    left join rewards_distributed as r\n        on\n            dim.pool_id = r.pool_id\n            and lower(\n                dim.collateral_type\n            ) = lower(\n                r.collateral_type\n            )\n            and dim.ts + '1 hour'::INTERVAL >= r.ts_start\n            and dim.ts < r.ts_start + r.\"duration\" * '1 second'::INTERVAL\n    where\n        r.\"duration\" > 0\n),\n\nstreamed_rewards as (\n    select\n        d.ts,\n        d.pool_id,\n        d.collateral_type,\n        d.distributor,\n        d.token_symbol,\n        -- get the amount of time distributed this hour\n        -- use the smaller of those two intervals\n        -- convert the interval to a number of hours\n        -- multiply the result by the hourly amount to get the amount distributed this hour\n        (\n            extract(\n                epoch\n                from\n                least(\n                    d.\"duration\" / 3600 * '1 hour'::INTERVAL,\n                    least(\n                        d.ts + '1 hour'::INTERVAL - greatest(\n                            d.ts,\n                            d.ts_start\n                        ),\n                        least(\n                            d.ts_start + d.\"duration\" * '1 second'::INTERVAL,\n                            d.ts + '1 hour'::INTERVAL\n                        ) - d.ts\n                    )\n                )\n            ) / 3600\n        ) * d.amount / (\n            d.\"duration\" / 3600\n        ) as amount\n    from\n        hourly_distributions as d\n    where\n        d.distributor_index = 1\n),\n\ninstant_rewards as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        distributor,\n        token_symbol,\n        amount\n    from\n        rewards_distributed\n    where\n        \"duration\" = 0\n),\n\ncombined as (\n    select\n        combo.ts,\n        combo.pool_id,\n        combo.collateral_type,\n        combo.distributor,\n        combo.token_symbol,\n        combo.amount,\n        p.price\n    from\n        (\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                distributor,\n                token_symbol,\n                amount\n            from\n                streamed_rewards\n            union all\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                distributor,\n                token_symbol,\n                amount\n            from\n                instant_rewards\n        ) as combo\n    left join \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\" as p\n        on\n            combo.token_symbol = p.market_symbol\n            and combo.ts = p.ts\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    distributor,\n    token_symbol,\n    sum(amount) as amount,\n    sum(\n        amount * price\n    ) as rewards_usd\nfrom\n    combined\ngroup by\n    ts,\n    pool_id,\n    collateral_type,\n    distributor,\n    token_symbol", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.604625Z", "completed_at": "2025-03-04T12:53:18.613491Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.619982Z", "completed_at": "2025-03-04T12:53:18.619992Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027379274368286133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_hourly_arbitrum_mainnet_price__True__0.a6e6a0e3ce", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.614657Z", "completed_at": "2025-03-04T12:53:18.626583Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.629168Z", "completed_at": "2025-03-04T12:53:18.629178Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01950812339782715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_arbitrum_mainnet_market_symbol.b0ef15f205", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.621123Z", "completed_at": "2025-03-04T12:53:18.628608Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.635340Z", "completed_at": "2025-03-04T12:53:18.635352Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024454116821289062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_arbitrum_mainnet_price.cc751acae1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.630733Z", "completed_at": "2025-03-04T12:53:18.638594Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.643992Z", "completed_at": "2025-03-04T12:53:18.644007Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018273591995239258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_arbitrum_mainnet_ts.125ef9fa4d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.639814Z", "completed_at": "2025-03-04T12:53:18.652093Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.661066Z", "completed_at": "2025-03-04T12:53:18.661078Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031113147735595703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_stats_daily_arbitrum_mainnet", "compiled": true, "compiled_code": "select\n    DATE_TRUNC(\n        'day',\n        ts\n    ) as ts,\n    SUM(trades) as trades,\n    SUM(exchange_fees) as exchange_fees,\n    SUM(referral_fees) as referral_fees,\n    SUM(collected_fees) as collected_fees,\n    SUM(volume) as volume,\n    SUM(liquidation_rewards) as liquidation_rewards,\n    SUM(liquidated_accounts) as liquidated_accounts,\n    MAX(cumulative_exchange_fees) as cumulative_exchange_fees,\n    MAX(cumulative_referral_fees) as cumulative_referral_fees,\n    MAX(cumulative_collected_fees) as cumulative_collected_fees,\n    MAX(cumulative_volume) as cumulative_volume\nfrom\n    \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_stats_hourly_arbitrum_mainnet\"\ngroup by\n    DATE_TRUNC(\n        'day',\n        ts\n    )", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_stats_daily_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.655511Z", "completed_at": "2025-03-04T12:53:18.662861Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.669751Z", "completed_at": "2025-03-04T12:53:18.669765Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026596546173095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_token_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.min_ts)),\n            date_trunc('hour', max(t.max_ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select\n                min(ts_start) as min_ts,\n                max(\n                    ts_start + \"duration\" * '1 second'::INTERVAL\n                ) as max_ts\n            from\n                \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nrewards_distributed as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        distributor,\n        token_symbol,\n        amount,\n        ts_start,\n        \"duration\"\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_arbitrum_sepolia\"\n),\n\nhourly_distributions as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        r.distributor,\n        r.token_symbol,\n        r.amount,\n        r.ts_start,\n        r.\"duration\",\n        row_number() over (\n            partition by\n                dim.ts,\n                dim.pool_id,\n                dim.collateral_type,\n                r.distributor\n            order by\n                r.ts_start desc\n        ) as distributor_index\n    from\n        dim\n    left join rewards_distributed as r\n        on\n            dim.pool_id = r.pool_id\n            and lower(\n                dim.collateral_type\n            ) = lower(\n                r.collateral_type\n            )\n            and dim.ts + '1 hour'::INTERVAL >= r.ts_start\n            and dim.ts < r.ts_start + r.\"duration\" * '1 second'::INTERVAL\n    where\n        r.\"duration\" > 0\n),\n\nstreamed_rewards as (\n    select\n        d.ts,\n        d.pool_id,\n        d.collateral_type,\n        d.distributor,\n        d.token_symbol,\n        -- get the amount of time distributed this hour\n        -- use the smaller of those two intervals\n        -- convert the interval to a number of hours\n        -- multiply the result by the hourly amount to get the amount distributed this hour\n        (\n            extract(\n                epoch\n                from\n                least(\n                    d.\"duration\" / 3600 * '1 hour'::INTERVAL,\n                    least(\n                        d.ts + '1 hour'::INTERVAL - greatest(\n                            d.ts,\n                            d.ts_start\n                        ),\n                        least(\n                            d.ts_start + d.\"duration\" * '1 second'::INTERVAL,\n                            d.ts + '1 hour'::INTERVAL\n                        ) - d.ts\n                    )\n                )\n            ) / 3600\n        ) * d.amount / (\n            d.\"duration\" / 3600\n        ) as amount\n    from\n        hourly_distributions as d\n    where\n        d.distributor_index = 1\n),\n\ninstant_rewards as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        distributor,\n        token_symbol,\n        amount\n    from\n        rewards_distributed\n    where\n        \"duration\" = 0\n),\n\ncombined as (\n    select\n        combo.ts,\n        combo.pool_id,\n        combo.collateral_type,\n        combo.distributor,\n        combo.token_symbol,\n        combo.amount,\n        p.price\n    from\n        (\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                distributor,\n                token_symbol,\n                amount\n            from\n                streamed_rewards\n            union all\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                distributor,\n                token_symbol,\n                amount\n            from\n                instant_rewards\n        ) as combo\n    left join \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_hourly_arbitrum_sepolia\" as p\n        on\n            combo.token_symbol = p.market_symbol\n            and combo.ts = p.ts\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    distributor,\n    token_symbol,\n    sum(amount) as amount,\n    sum(\n        amount * price\n    ) as rewards_usd\nfrom\n    combined\ngroup by\n    ts,\n    pool_id,\n    collateral_type,\n    distributor,\n    token_symbol", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.646969Z", "completed_at": "2025-03-04T12:53:18.664134Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.671383Z", "completed_at": "2025-03-04T12:53:18.671393Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03235673904418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_collateral_balances_arbitrum_sepolia", "compiled": true, "compiled_code": "with synths as (\n    select\n        synth_market_id as collateral_id,\n        synth_token_address\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"spot_synth_registered_arbitrum_sepolia\"\n),\n\ntransfers as (\n    select\n        cm.block_number,\n        cm.block_timestamp as ts,\n        cm.transaction_hash,\n        cm.collateral_id,\n        synths.synth_token_address,\n        CAST(cm.account_id as text) as account_id,\n        \n    cm.amount_delta / 1e18\n as amount_delta\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_collateral_modified_arbitrum_sepolia\" as cm\n    inner join synths\n        on cm.collateral_id = synths.collateral_id\n),\n\nliq_tx as (\n    select distinct\n        transaction_hash,\n        CAST(account_id as text) as account_id\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"perp_account_liquidation_attempt_arbitrum_sepolia\"\n),\n\ndistributors as (\n    select\n        CAST(rd.distributor_address as text) as distributor_address,\n        CAST(rd.token_symbol as text) as token_symbol,\n        rd.synth_token_address,\n        synths.collateral_id\n    from\n        \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_reward_distributors\" as rd\n    inner join synths\n        on rd.synth_token_address = synths.synth_token_address\n),\n\nliquidations as (\n    select\n        rd.block_number,\n        rd.block_timestamp as ts,\n        -rd.amount / 1e18 as amount_delta,\n        liq_tx.transaction_hash,\n        rd.collateral_type,\n        distributors.token_symbol,\n        distributors.synth_token_address,\n        CAST(liq_tx.account_id as text) as account_id,\n        distributors.collateral_id\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_rewards_distributed_arbitrum_sepolia\" as rd\n    inner join liq_tx\n        on rd.transaction_hash = liq_tx.transaction_hash\n    inner join distributors\n        on rd.distributor = distributors.distributor_address\n),\n\nnet_transfers as (\n    select\n        events.ts,\n        events.transaction_hash,\n        events.event_type,\n        events.collateral_id,\n        events.synth_token_address,\n        synths.synth_symbol,\n        events.account_id,\n        prices.price,\n        events.amount_delta,\n        SUM(events.amount_delta) over (\n            partition by events.account_id, events.collateral_id\n            order by events.ts\n        ) as account_balance,\n        SUM(events.amount_delta) over (\n            partition by events.collateral_id\n            order by events.ts\n        ) as total_balance\n    from (\n        select\n            transfers.ts,\n            transfers.transaction_hash,\n            transfers.collateral_id,\n            transfers.synth_token_address,\n            transfers.account_id,\n            transfers.amount_delta,\n            'transfer' as event_type\n        from\n            transfers\n        union all\n        select\n            liquidations.ts,\n            liquidations.transaction_hash,\n            liquidations.collateral_id,\n            liquidations.synth_token_address,\n            liquidations.account_id,\n            liquidations.amount_delta,\n            'liquidation' as event_type\n        from\n            liquidations\n    ) as events\n    inner join \"analytics\".\"prod_seeds\".\"arbitrum_sepolia_synths\" as synths\n        on events.collateral_id = synths.synth_market_id\n    left join \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_hourly_arbitrum_sepolia\" as prices\n        on\n            synths.token_symbol = prices.market_symbol\n            and DATE_TRUNC('hour', events.ts) = prices.ts\n)\n\nselect\n    net_transfers.ts,\n    net_transfers.transaction_hash,\n    net_transfers.event_type,\n    net_transfers.collateral_id,\n    net_transfers.synth_token_address,\n    net_transfers.synth_symbol,\n    net_transfers.account_id,\n    net_transfers.price,\n    net_transfers.amount_delta,\n    net_transfers.amount_delta * net_transfers.price as amount_delta_usd,\n    net_transfers.account_balance,\n    net_transfers.account_balance * net_transfers.price as account_balance_usd,\n    net_transfers.total_balance,\n    net_transfers.total_balance * net_transfers.price as total_balance_usd\nfrom\n    net_transfers", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.664811Z", "completed_at": "2025-03-04T12:53:18.673804Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.681067Z", "completed_at": "2025-03-04T12:53:18.681077Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02097296714782715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_hourly_arbitrum_sepolia_price__True__0.e322ab3e73", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.676304Z", "completed_at": "2025-03-04T12:53:18.684827Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.697055Z", "completed_at": "2025-03-04T12:53:18.697066Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026427268981933594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_arbitrum_sepolia_market_symbol.6b1d78c094", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_hourly_arbitrum_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.685448Z", "completed_at": "2025-03-04T12:53:18.699590Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.704989Z", "completed_at": "2025-03-04T12:53:18.705002Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02967667579650879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_arbitrum_sepolia_price.774a8eccfb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_hourly_arbitrum_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.690785Z", "completed_at": "2025-03-04T12:53:18.704355Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.707208Z", "completed_at": "2025-03-04T12:53:18.707215Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02533555030822754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_arbitrum_sepolia_ts.45b8cdbd25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_prices_hourly_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.700243Z", "completed_at": "2025-03-04T12:53:18.706616Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.713049Z", "completed_at": "2025-03-04T12:53:18.713059Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023087024688720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_stats_daily_arbitrum_sepolia", "compiled": true, "compiled_code": "select\n    DATE_TRUNC(\n        'day',\n        ts\n    ) as ts,\n    SUM(trades) as trades,\n    SUM(exchange_fees) as exchange_fees,\n    SUM(referral_fees) as referral_fees,\n    SUM(collected_fees) as collected_fees,\n    SUM(volume) as volume,\n    SUM(liquidation_rewards) as liquidation_rewards,\n    SUM(liquidated_accounts) as liquidated_accounts,\n    MAX(cumulative_exchange_fees) as cumulative_exchange_fees,\n    MAX(cumulative_referral_fees) as cumulative_referral_fees,\n    MAX(cumulative_collected_fees) as cumulative_collected_fees,\n    MAX(cumulative_volume) as cumulative_volume\nfrom\n    \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_stats_hourly_arbitrum_sepolia\"\ngroup by\n    DATE_TRUNC(\n        'day',\n        ts\n    )", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_stats_daily_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.708801Z", "completed_at": "2025-03-04T12:53:18.716264Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.718779Z", "completed_at": "2025-03-04T12:53:18.718789Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015135765075683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_rewards_claimed_base_mainnet", "compiled": true, "compiled_code": "with rewards_claimed as (\n    select\n        block_timestamp as ts,\n        CAST(\n            pool_id as INTEGER\n        ) as pool_id,\n        account_id,\n        collateral_type,\n        distributor,\n        \n    amount / 1e18\n as amount\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_claimed_base_mainnet\"\n),\n\ndistributors as (\n    select\n        CAST(distributor_address as TEXT) as distributor_address,\n        CAST(token_symbol as TEXT) as token_symbol,\n        reward_type\n    from\n        \"analytics\".\"prod_seeds\".\"base_mainnet_reward_distributors\"\n),\n\nhourly_prices as (\n    select\n        ts,\n        market_symbol,\n        price\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\"\n)\n\nselect\n    rc.ts,\n    rc.pool_id,\n    rc.collateral_type,\n    rc.account_id,\n    distributors.reward_type,\n    rc.distributor,\n    distributors.token_symbol,\n    rc.amount,\n    hourly_prices.price,\n    rc.amount * hourly_prices.price as amount_usd\nfrom\n    rewards_claimed as rc\ninner join distributors on rc.distributor = distributors.distributor_address\ninner join\n    hourly_prices\n    on\n        DATE_TRUNC('hour', rc.ts) = hourly_prices.ts\n        and distributors.token_symbol = hourly_prices.market_symbol\norder by\n    rc.ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.720232Z", "completed_at": "2025-03-04T12:53:18.736814Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.738339Z", "completed_at": "2025-03-04T12:53:18.738350Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02368950843811035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_collateral_balances_base_mainnet", "compiled": true, "compiled_code": "with synths as (\n    select\n        synth_market_id as collateral_id,\n        synth_token_address\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"spot_synth_registered_base_mainnet\"\n),\n\ntransfers as (\n    select\n        cm.block_number,\n        cm.block_timestamp as ts,\n        cm.transaction_hash,\n        cm.synth_market_id as collateral_id,\n        synths.synth_token_address,\n        CAST(\n            cm.account_id as text\n        ) as account_id,\n        \n    cm.amount_delta / 1e18\n as amount_delta\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_collateral_modified_base_mainnet\" as cm\n    inner join synths\n        on cm.synth_market_id = synths.collateral_id\n),\n\nliq_tx as (\n    select distinct\n        transaction_hash,\n        CAST(\n            account_id as text\n        ) as account_id\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"perp_account_liquidation_attempt_base_mainnet\"\n),\n\ndistributors as (\n    select\n        CAST(\n            rd.distributor_address as text\n        ) as distributor_address,\n        CAST(\n            rd.token_symbol as text\n        ) as token_symbol,\n        rd.synth_token_address,\n        synths.collateral_id\n    from\n        \"analytics\".\"prod_seeds\".\"base_mainnet_reward_distributors\" as rd\n    inner join synths\n        on rd.synth_token_address = synths.synth_token_address\n),\n\nliquidations as (\n    select\n        rd.block_number,\n        rd.block_timestamp as ts,\n        -rd.amount / 1e18 as amount_delta,\n        liq_tx.transaction_hash,\n        rd.collateral_type,\n        distributors.token_symbol,\n        distributors.synth_token_address,\n        CAST(\n            liq_tx.account_id as text\n        ) as account_id,\n        distributors.collateral_id\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_rewards_distributed_base_mainnet\" as rd\n    inner join liq_tx\n        on rd.transaction_hash = liq_tx.transaction_hash\n    inner join distributors\n        on rd.distributor = distributors.distributor_address\n),\n\nnet_transfers as (\n    select\n        events.ts,\n        events.transaction_hash,\n        events.event_type,\n        events.collateral_id,\n        events.synth_token_address,\n        synths.synth_symbol,\n        events.account_id,\n        prices.price,\n        events.amount_delta,\n        SUM(\n            events.amount_delta\n        ) over (\n            partition by\n                events.account_id,\n                events.collateral_id\n            order by\n                events.ts\n        ) as account_balance,\n        SUM(\n            events.amount_delta\n        ) over (\n            partition by events.collateral_id\n            order by\n                events.ts\n        ) as total_balance\n    from\n        (\n            select\n                transfers.ts,\n                transfers.transaction_hash,\n                transfers.collateral_id,\n                transfers.synth_token_address,\n                transfers.account_id,\n                transfers.amount_delta,\n                'transfer' as event_type\n            from\n                transfers\n            union all\n            select\n                liquidations.ts,\n                liquidations.transaction_hash,\n                liquidations.collateral_id,\n                liquidations.synth_token_address,\n                liquidations.account_id,\n                liquidations.amount_delta,\n                'liquidation' as event_type\n            from\n                liquidations\n        ) as events\n    inner join \"analytics\".\"prod_seeds\".\"base_mainnet_synths\" as synths\n        on events.collateral_id = synths.synth_market_id\n    left join \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\" as prices\n        on\n            synths.token_symbol = prices.market_symbol\n            and DATE_TRUNC(\n                'hour',\n                events.ts\n            ) = prices.ts\n)\n\nselect\n    net_transfers.ts,\n    net_transfers.transaction_hash,\n    net_transfers.event_type,\n    net_transfers.collateral_id,\n    net_transfers.synth_token_address,\n    net_transfers.synth_symbol,\n    net_transfers.account_id,\n    net_transfers.price,\n    net_transfers.amount_delta,\n    net_transfers.amount_delta * net_transfers.price as amount_delta_usd,\n    net_transfers.account_balance,\n    net_transfers.account_balance * net_transfers.price as account_balance_usd,\n    net_transfers.total_balance,\n    net_transfers.total_balance * net_transfers.price as total_balance_usd\nfrom\n    net_transfers", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.732244Z", "completed_at": "2025-03-04T12:53:18.739299Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.742065Z", "completed_at": "2025-03-04T12:53:18.742073Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024028778076171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_token_hourly_base_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.min_ts)),\n            date_trunc('hour', max(t.max_ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select\n                min(r.ts_start) as min_ts,\n                max(\n                    r.ts_start + r.duration * '1 second'::INTERVAL\n                ) as max_ts\n            from\n                \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\" as r\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nrewards_distributed as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_type,\n        distributor,\n        token_symbol,\n        amount,\n        ts_start,\n        duration\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\n),\n\nhourly_distributions as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        r.distributor,\n        r.reward_type,\n        r.token_symbol,\n        r.amount,\n        r.ts_start,\n        r.duration,\n        row_number() over (\n            partition by\n                dim.ts,\n                dim.pool_id,\n                dim.collateral_type,\n                r.distributor\n            order by\n                r.ts_start desc\n        ) as distributor_index\n    from\n        dim\n    left join rewards_distributed as r\n        on\n            dim.pool_id = r.pool_id\n            and lower(\n                dim.collateral_type\n            ) = lower(\n                r.collateral_type\n            )\n            and dim.ts + '1 hour'::INTERVAL >= r.ts_start\n            and dim.ts < r.ts_start + r.duration * '1 second'::INTERVAL\n    where\n        r.duration > 0\n),\n\nstreamed_rewards as (\n    select\n        d.ts,\n        d.pool_id,\n        d.collateral_type,\n        d.reward_type,\n        d.distributor,\n        d.token_symbol,\n        -- get the amount of time distributed this hour\n        -- use the smaller of those two intervals\n        -- convert the interval to a number of hours\n        -- multiply the result by the hourly amount to\n        -- get the amount distributed this hour\n        (\n            extract(\n                epoch\n                from\n                least(\n                    d.duration / 3600 * '1 hour'::INTERVAL,\n                    least(\n                        d.ts + '1 hour'::INTERVAL - greatest(\n                            d.ts,\n                            d.ts_start\n                        ),\n                        least(\n                            d.ts_start + d.duration * '1 second'::INTERVAL,\n                            d.ts + '1 hour'::INTERVAL\n                        ) - d.ts\n                    )\n                )\n            ) / 3600\n        ) * d.amount / (\n            d.duration / 3600\n        ) as amount\n    from\n        hourly_distributions as d\n    where\n        d.distributor_index = 1\n),\n\ninstant_rewards as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        reward_type,\n        distributor,\n        token_symbol,\n        amount\n    from\n        rewards_distributed\n    where\n        duration = 0\n),\n\ncombined as (\n    select\n        combo.ts,\n        combo.pool_id,\n        combo.collateral_type,\n        combo.reward_type,\n        combo.distributor,\n        combo.token_symbol,\n        combo.amount,\n        p.price\n    from\n        (\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                reward_type,\n                distributor,\n                token_symbol,\n                amount\n            from\n                streamed_rewards\n            union all\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                reward_type,\n                distributor,\n                token_symbol,\n                amount\n            from\n                instant_rewards\n        ) as combo\n    left join \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\" as p\n        on\n            combo.token_symbol = p.market_symbol\n            and combo.ts = p.ts\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    token_symbol,\n    sum(amount) as amount,\n    sum(\n        amount * price\n    ) as rewards_usd,\n    sum(\n        case when reward_type = 'liquidation' then amount * price else 0 end\n    ) as liquidation_rewards_usd\nfrom\n    combined\ngroup by\n    ts,\n    pool_id,\n    collateral_type,\n    token_symbol", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.727247Z", "completed_at": "2025-03-04T12:53:18.739917Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.742977Z", "completed_at": "2025-03-04T12:53:18.742987Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026203632354736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_pool_hourly_base_mainnet", "compiled": true, "compiled_code": "with dim_collateral as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.min_ts)),\n            date_trunc('hour', max(t.max_ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select\n                min(r.ts_start) as min_ts,\n                max(\n                    r.ts_start + r.duration * '1 second'::INTERVAL\n                ) as max_ts\n            from\n                \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\" as r\n        ) as t\n    cross join (\n        select distinct\n            m.pool_id,\n            m.collateral_type\n        from\n            \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\" as m\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\ndim_pool as (\n    select distinct\n        ts,\n        pool_id\n    from\n        dim_collateral\n),\n\nrewards_distributed as (\n    select\n        ts,\n        pool_id,\n        distributor,\n        token_symbol,\n        amount,\n        ts_start,\n        duration\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_base_mainnet\"\n    where\n        collateral_type = '0x0000000000000000000000000000000000000000'\n),\n\nhourly_distributions as (\n    select\n        dim.ts,\n        dim.pool_id,\n        r.distributor,\n        r.token_symbol,\n        r.amount,\n        r.ts_start,\n        r.duration,\n        row_number() over (\n            partition by\n                dim.ts,\n                dim.pool_id,\n                r.distributor\n            order by\n                r.ts_start desc\n        ) as distributor_index\n    from\n        dim_pool as dim\n    left join rewards_distributed as r\n        on\n            dim.pool_id = r.pool_id\n            and dim.ts + '1 hour'::INTERVAL >= r.ts_start\n            and dim.ts < r.ts_start + r.duration * '1 second'::INTERVAL\n    where\n        r.duration > 0\n),\n\nstreamed_rewards as (\n    select\n        d.ts,\n        d.pool_id,\n        d.distributor,\n        d.token_symbol,\n        -- get the amount of time distributed this hour\n        -- use the smaller of those two intervals\n        -- convert the interval to a number of hours\n        -- multiply the result by the hourly amount to\n        -- get the amount distributed this hour\n        (\n            extract(\n                epoch\n                from\n                least(\n                    d.duration / 3600 * '1 hour'::INTERVAL,\n                    least(\n                        d.ts + '1 hour'::INTERVAL - greatest(\n                            d.ts,\n                            d.ts_start\n                        ),\n                        least(\n                            d.ts_start + d.duration * '1 second'::INTERVAL,\n                            d.ts + '1 hour'::INTERVAL\n                        ) - d.ts\n                    )\n                )\n            ) / 3600\n        ) * d.amount / (\n            d.duration / 3600\n        ) as amount\n    from\n        hourly_distributions as d\n    where\n        d.distributor_index = 1\n),\n\ncombined as (\n    select\n        r.ts,\n        r.pool_id,\n        r.distributor,\n        r.token_symbol,\n        r.amount,\n        p.price\n    from\n        streamed_rewards as r\n    left join \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\" as p\n        on\n            r.token_symbol = p.market_symbol\n            and r.ts = p.ts\n)\n\nselect\n    ts,\n    pool_id,\n    token_symbol,\n    sum(amount) as amount,\n    sum(\n        amount * price\n    ) as rewards_usd\nfrom\n    combined\ngroup by\n    ts,\n    pool_id,\n    token_symbol", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.743883Z", "completed_at": "2025-03-04T12:53:18.754856Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.761581Z", "completed_at": "2025-03-04T12:53:18.761597Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024335384368896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_hourly_base_mainnet_price__True__0.1e768deaa2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.756223Z", "completed_at": "2025-03-04T12:53:18.767668Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.773720Z", "completed_at": "2025-03-04T12:53:18.773731Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02290940284729004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_base_mainnet_market_symbol.ffd656c11f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.763185Z", "completed_at": "2025-03-04T12:53:18.775331Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.778007Z", "completed_at": "2025-03-04T12:53:18.778016Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02395462989807129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_base_mainnet_price.73bbfd891b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.769098Z", "completed_at": "2025-03-04T12:53:18.776841Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.779532Z", "completed_at": "2025-03-04T12:53:18.779539Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024043560028076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_base_mainnet_ts.a2c68d326d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.780385Z", "completed_at": "2025-03-04T12:53:18.786762Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.794346Z", "completed_at": "2025-03-04T12:53:18.794358Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019774913787841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_stats_daily_base_mainnet", "compiled": true, "compiled_code": "select\n    DATE_TRUNC(\n        'day',\n        ts\n    ) as ts,\n    SUM(trades) as trades,\n    SUM(exchange_fees) as exchange_fees,\n    SUM(referral_fees) as referral_fees,\n    SUM(collected_fees) as collected_fees,\n    SUM(volume) as volume,\n    SUM(liquidation_rewards) as liquidation_rewards,\n    SUM(liquidated_accounts) as liquidated_accounts,\n    MAX(cumulative_exchange_fees) as cumulative_exchange_fees,\n    MAX(cumulative_referral_fees) as cumulative_referral_fees,\n    MAX(cumulative_collected_fees) as cumulative_collected_fees,\n    MAX(cumulative_volume) as cumulative_volume\nfrom\n    \"analytics\".\"prod_base_mainnet\".\"fct_perp_stats_hourly_base_mainnet\"\ngroup by\n    DATE_TRUNC(\n        'day',\n        ts\n    )", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_perp_stats_daily_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.787351Z", "completed_at": "2025-03-04T12:53:18.803580Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.809956Z", "completed_at": "2025-03-04T12:53:18.809969Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031177282333374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_collateral_balances_base_sepolia", "compiled": true, "compiled_code": "with synths as (\n    select\n        synth_market_id as collateral_id,\n        synth_token_address\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"spot_synth_registered_base_sepolia\"\n),\n\ntransfers as (\n    select\n        cm.block_number,\n        cm.block_timestamp as ts,\n        cm.transaction_hash,\n        cm.synth_market_id as collateral_id,\n        synths.synth_token_address,\n        CAST(\n            cm.account_id as text\n        ) as account_id,\n        \n    cm.amount_delta / 1e18\n as amount_delta\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_collateral_modified_base_sepolia\" as cm\n    inner join synths\n        on cm.synth_market_id = synths.collateral_id\n),\n\nliq_tx as (\n    select distinct\n        transaction_hash,\n        CAST(\n            account_id as text\n        ) as account_id\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"perp_account_liquidation_attempt_base_sepolia\"\n),\n\ndistributors as (\n    select\n        CAST(\n            rd.distributor_address as text\n        ) as distributor_address,\n        CAST(\n            rd.token_symbol as text\n        ) as token_symbol,\n        rd.synth_token_address,\n        synths.collateral_id\n    from\n        \"analytics\".\"prod_seeds\".\"base_sepolia_reward_distributors\" as rd\n    inner join synths\n        on rd.synth_token_address = synths.synth_token_address\n),\n\nliquidations as (\n    select\n        rd.block_number,\n        rd.block_timestamp as ts,\n        -rd.amount / 1e18 as amount_delta,\n        liq_tx.transaction_hash,\n        rd.collateral_type,\n        distributors.token_symbol,\n        distributors.synth_token_address,\n        CAST(\n            liq_tx.account_id as text\n        ) as account_id,\n        distributors.collateral_id\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_rewards_distributed_base_sepolia\" as rd\n    inner join liq_tx\n        on rd.transaction_hash = liq_tx.transaction_hash\n    inner join distributors\n        on rd.distributor = distributors.distributor_address\n),\n\nnet_transfers as (\n    select\n        events.ts,\n        events.transaction_hash,\n        events.event_type,\n        events.collateral_id,\n        events.synth_token_address,\n        synths.synth_symbol,\n        events.account_id,\n        prices.price,\n        events.amount_delta,\n        SUM(\n            events.amount_delta\n        ) over (\n            partition by\n                events.account_id,\n                events.collateral_id\n            order by\n                events.ts\n        ) as account_balance,\n        SUM(\n            events.amount_delta\n        ) over (\n            partition by events.collateral_id\n            order by\n                events.ts\n        ) as total_balance\n    from\n        (\n            select\n                transfers.ts,\n                transfers.transaction_hash,\n                transfers.collateral_id,\n                transfers.synth_token_address,\n                transfers.account_id,\n                transfers.amount_delta,\n                'transfer' as event_type\n            from\n                transfers\n            union all\n            select\n                liquidations.ts,\n                liquidations.transaction_hash,\n                liquidations.collateral_id,\n                liquidations.synth_token_address,\n                liquidations.account_id,\n                liquidations.amount_delta,\n                'liquidation' as event_type\n            from\n                liquidations\n        ) as events\n    inner join \"analytics\".\"prod_seeds\".\"base_sepolia_synths\" as synths\n        on events.collateral_id = synths.synth_market_id\n    left join \"analytics\".\"prod_base_sepolia\".\"fct_prices_hourly_base_sepolia\" as prices\n        on\n            synths.token_symbol = prices.market_symbol\n            and DATE_TRUNC(\n                'hour',\n                events.ts\n            ) = prices.ts\n)\n\nselect\n    net_transfers.ts,\n    net_transfers.transaction_hash,\n    net_transfers.event_type,\n    net_transfers.collateral_id,\n    net_transfers.synth_token_address,\n    net_transfers.synth_symbol,\n    net_transfers.account_id,\n    net_transfers.price,\n    net_transfers.amount_delta,\n    net_transfers.amount_delta * net_transfers.price as amount_delta_usd,\n    net_transfers.account_balance,\n    net_transfers.account_balance * net_transfers.price as account_balance_usd,\n    net_transfers.total_balance,\n    net_transfers.total_balance * net_transfers.price as total_balance_usd\nfrom\n    net_transfers", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.795975Z", "completed_at": "2025-03-04T12:53:18.810826Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.813477Z", "completed_at": "2025-03-04T12:53:18.813488Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027475595474243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_token_hourly_base_sepolia", "compiled": true, "compiled_code": "with dim as (\n    select\n        m.pool_id,\n        m.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.min_ts)),\n            date_trunc('hour', max(t.max_ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select\n                min(ts_start) as min_ts,\n                max(\n                    ts_start + \"duration\" * '1 second'::INTERVAL\n                ) as max_ts\n            from\n                \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\n    ) as m\n    group by\n        m.pool_id,\n        m.collateral_type\n),\n\nrewards_distributed as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        distributor,\n        token_symbol,\n        amount,\n        ts_start,\n        \"duration\"\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_base_sepolia\"\n),\n\nhourly_distributions as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        r.distributor,\n        r.token_symbol,\n        r.amount,\n        r.ts_start,\n        r.\"duration\",\n        row_number() over (\n            partition by\n                dim.ts,\n                dim.pool_id,\n                dim.collateral_type,\n                r.distributor\n            order by\n                r.ts_start desc\n        ) as distributor_index\n    from\n        dim\n    left join rewards_distributed as r\n        on\n            dim.pool_id = r.pool_id\n            and lower(\n                dim.collateral_type\n            ) = lower(\n                r.collateral_type\n            )\n            and dim.ts + '1 hour'::INTERVAL >= r.ts_start\n            and dim.ts < r.ts_start + r.\"duration\" * '1 second'::INTERVAL\n    where\n        r.\"duration\" > 0\n),\n\nstreamed_rewards as (\n    select\n        d.ts,\n        d.pool_id,\n        d.collateral_type,\n        d.distributor,\n        d.token_symbol,\n        -- get the amount of time distributed this hour\n        -- use the smaller of those two intervals\n        -- convert the interval to a number of hours\n        -- multiply the result by the hourly amount to get the amount distributed this hour\n        (\n            extract(\n                epoch\n                from\n                least(\n                    d.\"duration\" / 3600 * '1 hour'::INTERVAL,\n                    least(\n                        d.ts + '1 hour'::INTERVAL - greatest(\n                            d.ts,\n                            d.ts_start\n                        ),\n                        least(\n                            d.ts_start + d.\"duration\" * '1 second'::INTERVAL,\n                            d.ts + '1 hour'::INTERVAL\n                        ) - d.ts\n                    )\n                )\n            ) / 3600\n        ) * d.amount / (\n            d.\"duration\" / 3600\n        ) as amount\n    from\n        hourly_distributions as d\n    where\n        d.distributor_index = 1\n),\n\ninstant_rewards as (\n    select\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        pool_id,\n        collateral_type,\n        distributor,\n        token_symbol,\n        amount\n    from\n        rewards_distributed\n    where\n        \"duration\" = 0\n),\n\ncombined as (\n    select\n        combo.ts,\n        combo.pool_id,\n        combo.collateral_type,\n        combo.distributor,\n        combo.token_symbol,\n        combo.amount,\n        p.price\n    from\n        (\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                distributor,\n                token_symbol,\n                amount\n            from\n                streamed_rewards\n            union all\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                distributor,\n                token_symbol,\n                amount\n            from\n                instant_rewards\n        ) as combo\n    left join \"analytics\".\"prod_base_sepolia\".\"fct_prices_hourly_base_sepolia\" as p\n        on\n            combo.token_symbol = p.market_symbol\n            and combo.ts = p.ts\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    distributor,\n    token_symbol,\n    sum(amount) as amount,\n    sum(\n        amount * price\n    ) as rewards_usd\nfrom\n    combined\ngroup by\n    ts,\n    pool_id,\n    collateral_type,\n    distributor,\n    token_symbol", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.804259Z", "completed_at": "2025-03-04T12:53:18.812096Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.819188Z", "completed_at": "2025-03-04T12:53:18.819201Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026792526245117188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_prices_hourly_base_sepolia_price__True__0.9b4c65b6bd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_prices_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.814615Z", "completed_at": "2025-03-04T12:53:18.823495Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.830374Z", "completed_at": "2025-03-04T12:53:18.830388Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021360397338867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_base_sepolia_market_symbol.35c2706bfd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect market_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_prices_hourly_base_sepolia\"\nwhere market_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.825521Z", "completed_at": "2025-03-04T12:53:18.833303Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.843036Z", "completed_at": "2025-03-04T12:53:18.843047Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022754192352294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_base_sepolia_price.e263ee2224", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_prices_hourly_base_sepolia\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.833974Z", "completed_at": "2025-03-04T12:53:18.844185Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.846697Z", "completed_at": "2025-03-04T12:53:18.846706Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02261805534362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_prices_hourly_base_sepolia_ts.fc60cfbaeb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_prices_hourly_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.838699Z", "completed_at": "2025-03-04T12:53:18.846016Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.856429Z", "completed_at": "2025-03-04T12:53:18.856442Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03169727325439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_perp_stats_daily_base_sepolia", "compiled": true, "compiled_code": "select\n    DATE_TRUNC(\n        'day',\n        ts\n    ) as ts,\n    SUM(trades) as trades,\n    SUM(exchange_fees) as exchange_fees,\n    SUM(referral_fees) as referral_fees,\n    SUM(collected_fees) as collected_fees,\n    SUM(volume) as volume,\n    SUM(liquidation_rewards) as liquidation_rewards,\n    SUM(liquidated_accounts) as liquidated_accounts,\n    MAX(cumulative_exchange_fees) as cumulative_exchange_fees,\n    MAX(cumulative_referral_fees) as cumulative_referral_fees,\n    MAX(cumulative_collected_fees) as cumulative_collected_fees,\n    MAX(cumulative_volume) as cumulative_volume\nfrom\n    \"analytics\".\"prod_base_sepolia\".\"fct_perp_stats_hourly_base_sepolia\"\ngroup by\n    DATE_TRUNC(\n        'day',\n        ts\n    )", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_perp_stats_daily_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.847586Z", "completed_at": "2025-03-04T12:53:18.860169Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.867022Z", "completed_at": "2025-03-04T12:53:18.867034Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024918079376220703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_eth_mainnet", "compiled": true, "compiled_code": "\n\nwith dim as (\n    select\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)), '1 hour'::interval\n        ) as ts,\n        p.pool_id,\n        p.collateral_type\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n    ) as p\n    group by\n        p.pool_id,\n        p.collateral_type\n),\n\nissuance as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        hourly_issuance\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_issuance_hourly_eth_mainnet\"\n),\n\ndebt as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(debt) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as debt\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_debt_eth_mainnet\"\n),\n\ncollateral as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(collateral_value) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as collateral_value\n    from\n        \"analytics\".\"prod_raw_eth_mainnet\".\"core_vault_collateral_eth_mainnet\"\n    where\n        pool_id = 1\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        coalesce(\n            last(debt.debt) over (\n                partition by dim.collateral_type, dim.pool_id\n                order by dim.ts\n                rows between unbounded preceding and current row\n            ),\n            0\n        ) as debt,\n        coalesce(\n            last(collateral.collateral_value) over (\n                partition by dim.collateral_type, dim.pool_id\n                order by dim.ts\n                rows between unbounded preceding and current row\n            ),\n            0\n        ) as collateral_value\n    from\n        dim\n    left join debt\n        on\n            dim.ts = debt.ts\n            and dim.pool_id = debt.pool_id\n            and dim.collateral_type = debt.collateral_type\n    left join collateral\n        on\n            dim.ts = collateral.ts\n            and dim.pool_id = collateral.pool_id\n            and dim.collateral_type = collateral.collateral_type\n),\n\nhourly_pnl as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        coalesce(lag(debt) over (\n            partition by pool_id, collateral_type\n            order by\n                ts\n        ) - debt, 0) as hourly_pnl\n    from\n        ffill\n),\n\nhourly_rewards as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        rewards_usd\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_hourly_eth_mainnet\"\n),\n\nhourly_migration as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        hourly_debt_migrated\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_core_migration_hourly_eth_mainnet\"\n),\n\nhourly_returns as (\n    select\n        pnl.ts,\n        pnl.pool_id,\n        pnl.collateral_type,\n        pnl.collateral_value,\n        pnl.debt,\n        coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_issuance,\n        coalesce(\n            migration.hourly_debt_migrated,\n            0\n        ) as hourly_debt_migrated,\n        pnl.hourly_pnl + coalesce(\n            iss.hourly_issuance,\n            0\n        ) + coalesce(\n            migration.hourly_debt_migrated,\n            0\n        ) as hourly_pnl,\n        coalesce(\n            rewards.rewards_usd,\n            0\n        ) as rewards_usd,\n        case\n            when pnl.collateral_value = 0 then 0\n            else coalesce(\n                rewards.rewards_usd,\n                0\n            ) / pnl.collateral_value\n        end as hourly_rewards_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else (\n                coalesce(iss.hourly_issuance, 0)\n                + pnl.hourly_pnl\n                + coalesce(migration.hourly_debt_migrated, 0)\n            ) / pnl.collateral_value\n        end as hourly_pnl_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else (\n                coalesce(rewards.rewards_usd, 0)\n                + pnl.hourly_pnl\n                + coalesce(iss.hourly_issuance, 0)\n                + coalesce(migration.hourly_debt_migrated, 0)\n            ) / pnl.collateral_value\n        end as hourly_total_pct\n    from\n        hourly_pnl as pnl\n    left join hourly_rewards as rewards\n        on\n            pnl.ts = rewards.ts\n            and pnl.pool_id = rewards.pool_id\n            and pnl.collateral_type = rewards.collateral_type\n    left join issuance as iss\n        on\n            pnl.ts = iss.ts\n            and pnl.pool_id = iss.pool_id\n            and lower(\n                pnl.collateral_type\n            ) = lower(\n                iss.collateral_type\n            )\n    left join hourly_migration as migration\n        on\n            pnl.ts = migration.ts\n            and pnl.pool_id = migration.pool_id\n            and lower(\n                pnl.collateral_type\n            ) = lower(\n                migration.collateral_type\n            )\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    hourly_debt_migrated,\n    rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    hourly_total_pct\nfrom\n    hourly_returns", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.860801Z", "completed_at": "2025-03-04T12:53:18.868683Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.879812Z", "completed_at": "2025-03-04T12:53:18.879822Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024183034896850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_hourly_eth_mainnet_pool_id__True__0.208ead2f02", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.869265Z", "completed_at": "2025-03-04T12:53:18.882295Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.884787Z", "completed_at": "2025-03-04T12:53:18.884798Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025369882583618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_hourly_eth_mainnet_rewards_usd__True__0.2e789c32db", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.875386Z", "completed_at": "2025-03-04T12:53:18.883553Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.890220Z", "completed_at": "2025-03-04T12:53:18.890233Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024735450744628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_eth_mainnet_collateral_type.1949d93db9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_hourly_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.885681Z", "completed_at": "2025-03-04T12:53:18.898422Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.901418Z", "completed_at": "2025-03-04T12:53:18.901430Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020699262619018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_eth_mainnet_pool_id.7f91755bfb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_hourly_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.893340Z", "completed_at": "2025-03-04T12:53:18.903622Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.913947Z", "completed_at": "2025-03-04T12:53:18.913963Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029968738555908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_eth_mainnet_rewards_usd.3095906515", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_hourly_eth_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.904928Z", "completed_at": "2025-03-04T12:53:18.917346Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.924100Z", "completed_at": "2025-03-04T12:53:18.924113Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024125337600708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_eth_mainnet_ts.89ba67bb4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_hourly_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.909360Z", "completed_at": "2025-03-04T12:53:18.917985Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.925130Z", "completed_at": "2025-03-04T12:53:18.925141Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024445533752441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_rewards_claimed_arbitrum_mainnet_reward_type__liquidation__incentive.f085008f7b", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        reward_type as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\n    group by reward_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'liquidation','incentive'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.919190Z", "completed_at": "2025-03-04T12:53:18.927481Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.934353Z", "completed_at": "2025-03-04T12:53:18.934363Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0194854736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_arbitrum_mainnet_amount__True__0.f1f607d257", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.928772Z", "completed_at": "2025-03-04T12:53:18.936628Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.943335Z", "completed_at": "2025-03-04T12:53:18.943349Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02495265007019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_arbitrum_mainnet_amount_usd__True__0.b585d882a2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.938513Z", "completed_at": "2025-03-04T12:53:18.953057Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.959448Z", "completed_at": "2025-03-04T12:53:18.959487Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02603912353515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_arbitrum_mainnet_pool_id__True__0.921fb2b807", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.944961Z", "completed_at": "2025-03-04T12:53:18.954415Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.961152Z", "completed_at": "2025-03-04T12:53:18.961160Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02600574493408203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_arbitrum_mainnet_price__True__0.dfb329c87e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.955029Z", "completed_at": "2025-03-04T12:53:18.962897Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.969491Z", "completed_at": "2025-03-04T12:53:18.969500Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025296926498413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_account_id.376dff28b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.963512Z", "completed_at": "2025-03-04T12:53:18.971716Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.978196Z", "completed_at": "2025-03-04T12:53:18.978210Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02456068992614746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_amount.b0810cddb3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.973620Z", "completed_at": "2025-03-04T12:53:18.986181Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.992667Z", "completed_at": "2025-03-04T12:53:18.992679Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024030685424804688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_amount_usd.5523f73504", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere amount_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.979870Z", "completed_at": "2025-03-04T12:53:18.987571Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:18.994370Z", "completed_at": "2025-03-04T12:53:18.994378Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02399468421936035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_collateral_type.ecd55e58f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.988160Z", "completed_at": "2025-03-04T12:53:18.996130Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.004602Z", "completed_at": "2025-03-04T12:53:19.004613Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025504112243652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_distributor.7ca3dc1198", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:18.996727Z", "completed_at": "2025-03-04T12:53:19.006866Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.013287Z", "completed_at": "2025-03-04T12:53:19.013301Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026502132415771484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_pool_id.af23fbb2ae", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.008774Z", "completed_at": "2025-03-04T12:53:19.020275Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.022847Z", "completed_at": "2025-03-04T12:53:19.022856Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019040346145629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_price.3667efda4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.014930Z", "completed_at": "2025-03-04T12:53:19.022210Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.028919Z", "completed_at": "2025-03-04T12:53:19.028930Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02340984344482422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_reward_type.81245bf314", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reward_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere reward_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.023758Z", "completed_at": "2025-03-04T12:53:19.035125Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.037198Z", "completed_at": "2025-03-04T12:53:19.037207Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02302694320678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_token_symbol.98d97e13a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.030666Z", "completed_at": "2025-03-04T12:53:19.038137Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.040624Z", "completed_at": "2025-03-04T12:53:19.040632Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0191500186920166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_arbitrum_mainnet_ts.6ce72dd401", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_rewards_claimed_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.042077Z", "completed_at": "2025-03-04T12:53:19.056829Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.063637Z", "completed_at": "2025-03-04T12:53:19.063648Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02735733985900879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_balances_arbitrum_mainnet_account_balance__True__0.dbab39a9b8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_balance >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.048552Z", "completed_at": "2025-03-04T12:53:19.063009Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.069494Z", "completed_at": "2025-03-04T12:53:19.069505Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03094482421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_balances_arbitrum_mainnet_total_balance__True__0.812107bf6c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_balance >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.057605Z", "completed_at": "2025-03-04T12:53:19.070445Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.072645Z", "completed_at": "2025-03-04T12:53:19.072654Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02571272850036621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_account_balance.11024ee382", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_balance\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere account_balance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.064717Z", "completed_at": "2025-03-04T12:53:19.073513Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.076039Z", "completed_at": "2025-03-04T12:53:19.076047Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019948720932006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_account_balance_usd.0d4c84db1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_balance_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere account_balance_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.084567Z", "completed_at": "2025-03-04T12:53:19.091792Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.098726Z", "completed_at": "2025-03-04T12:53:19.098740Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02411675453186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_amount_delta_usd.87a9fb1df3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delta_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere amount_delta_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.079398Z", "completed_at": "2025-03-04T12:53:19.092343Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.099723Z", "completed_at": "2025-03-04T12:53:19.099733Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02573871612548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_amount_delta.fd722dec08", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delta\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere amount_delta is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.092967Z", "completed_at": "2025-03-04T12:53:19.108302Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.110629Z", "completed_at": "2025-03-04T12:53:19.110641Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03261065483093262, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_collateral_id.9d63381e5b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere collateral_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.100742Z", "completed_at": "2025-03-04T12:53:19.111485Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.113981Z", "completed_at": "2025-03-04T12:53:19.113990Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02329087257385254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_event_type.c4d454fad0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere event_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.115432Z", "completed_at": "2025-03-04T12:53:19.128039Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.134845Z", "completed_at": "2025-03-04T12:53:19.134856Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025162935256958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_synth_symbol.61c7da825c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere synth_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.121802Z", "completed_at": "2025-03-04T12:53:19.134219Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.140699Z", "completed_at": "2025-03-04T12:53:19.140710Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0287630558013916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_synth_token_address.fc366d34b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_token_address\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere synth_token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.128795Z", "completed_at": "2025-03-04T12:53:19.141630Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.144357Z", "completed_at": "2025-03-04T12:53:19.144365Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024120330810546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_total_balance.71649f4230", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_balance\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere total_balance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.135880Z", "completed_at": "2025-03-04T12:53:19.143701Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.146690Z", "completed_at": "2025-03-04T12:53:19.146698Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01939988136291504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_total_balance_usd.f1c3169523", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_balance_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere total_balance_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.150773Z", "completed_at": "2025-03-04T12:53:19.164719Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.174046Z", "completed_at": "2025-03-04T12:53:19.174063Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02897787094116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_transaction_hash.1444f820b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.155917Z", "completed_at": "2025-03-04T12:53:19.165306Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.175235Z", "completed_at": "2025-03-04T12:53:19.175243Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029450416564941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_mainnet_ts.766783dff7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_perp_collateral_balances_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.165914Z", "completed_at": "2025-03-04T12:53:19.177178Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.179744Z", "completed_at": "2025-03-04T12:53:19.179751Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029757976531982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "with token_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        rewards_usd\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    SUM(rewards_usd) as rewards_usd\nfrom\n    token_hourly\ngroup by\n    ts,\n    pool_id,\n    collateral_type", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.169340Z", "completed_at": "2025-03-04T12:53:19.177779Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.180704Z", "completed_at": "2025-03-04T12:53:19.180712Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018384456634521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_arbitrum_mainnet_amount__True__0.c3b84fc77c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.184965Z", "completed_at": "2025-03-04T12:53:19.202172Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.210484Z", "completed_at": "2025-03-04T12:53:19.210497Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031552791595458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_arbitrum_mainnet_pool_id__True__0.4ed8a94f92", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.191418Z", "completed_at": "2025-03-04T12:53:19.209814Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.212129Z", "completed_at": "2025-03-04T12:53:19.212136Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030655384063720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_arbitrum_mainnet_rewards_usd__True__0.034dbdbb73", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.197826Z", "completed_at": "2025-03-04T12:53:19.211374Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.214245Z", "completed_at": "2025-03-04T12:53:19.214257Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02435779571533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_mainnet_amount.5d52c05b74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.202953Z", "completed_at": "2025-03-04T12:53:19.212994Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.215884Z", "completed_at": "2025-03-04T12:53:19.215894Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025211572647094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_mainnet_collateral_type.dee4fdda32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.221847Z", "completed_at": "2025-03-04T12:53:19.237871Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.243411Z", "completed_at": "2025-03-04T12:53:19.243426Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02680349349975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_mainnet_distributor.a9383020e8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.227727Z", "completed_at": "2025-03-04T12:53:19.244311Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.246485Z", "completed_at": "2025-03-04T12:53:19.246494Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02852630615234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_mainnet_pool_id.35527b8712", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.233133Z", "completed_at": "2025-03-04T12:53:19.245838Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.248689Z", "completed_at": "2025-03-04T12:53:19.248700Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028818130493164062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_mainnet_rewards_usd.38626f59b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.238575Z", "completed_at": "2025-03-04T12:53:19.247399Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.250254Z", "completed_at": "2025-03-04T12:53:19.250264Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029166460037231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_mainnet_token_symbol.0f93337098", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.253777Z", "completed_at": "2025-03-04T12:53:19.261207Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.272369Z", "completed_at": "2025-03-04T12:53:19.272381Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024532079696655273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_mainnet_ts.22756175d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.261806Z", "completed_at": "2025-03-04T12:53:19.278487Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.280637Z", "completed_at": "2025-03-04T12:53:19.280647Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028344154357910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "with token_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        rewards_usd\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    SUM(rewards_usd) as rewards_usd\nfrom\n    token_hourly\ngroup by\n    ts,\n    pool_id,\n    collateral_type", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.267833Z", "completed_at": "2025-03-04T12:53:19.279861Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.282846Z", "completed_at": "2025-03-04T12:53:19.282857Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024332284927368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_arbitrum_sepolia_amount__True__0.c8e44e38be", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.273600Z", "completed_at": "2025-03-04T12:53:19.282228Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.285086Z", "completed_at": "2025-03-04T12:53:19.285094Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025325536727905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_arbitrum_sepolia_pool_id__True__0.dc85f8adb9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.287526Z", "completed_at": "2025-03-04T12:53:19.295963Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.308563Z", "completed_at": "2025-03-04T12:53:19.308575Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027098894119262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_arbitrum_sepolia_rewards_usd__True__0.1aeeb784bf", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.296557Z", "completed_at": "2025-03-04T12:53:19.314235Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.316675Z", "completed_at": "2025-03-04T12:53:19.316684Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029928922653198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_sepolia_amount.53214f6b62", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.302032Z", "completed_at": "2025-03-04T12:53:19.315884Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.318816Z", "completed_at": "2025-03-04T12:53:19.318827Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02564835548400879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_sepolia_collateral_type.6bd3efb9ab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.309615Z", "completed_at": "2025-03-04T12:53:19.317545Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.320340Z", "completed_at": "2025-03-04T12:53:19.320348Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025740623474121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_sepolia_distributor.57d35a371e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.323877Z", "completed_at": "2025-03-04T12:53:19.331395Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.342120Z", "completed_at": "2025-03-04T12:53:19.342133Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024132966995239258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_sepolia_pool_id.c9c0638ac8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.331977Z", "completed_at": "2025-03-04T12:53:19.348822Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.350887Z", "completed_at": "2025-03-04T12:53:19.350899Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028435468673706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_sepolia_rewards_usd.a4c3a5bd6d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.337508Z", "completed_at": "2025-03-04T12:53:19.349400Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.352340Z", "completed_at": "2025-03-04T12:53:19.352347Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023789644241333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_sepolia_token_symbol.43135a2a58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.343375Z", "completed_at": "2025-03-04T12:53:19.351757Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.354501Z", "completed_at": "2025-03-04T12:53:19.354509Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02469778060913086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_arbitrum_sepolia_ts.408bc991e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.356027Z", "completed_at": "2025-03-04T12:53:19.365700Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.372330Z", "completed_at": "2025-03-04T12:53:19.372342Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022368431091308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_balances_arbitrum_sepolia_account_balance__True__0.f24a0e3189", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_balance >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.367515Z", "completed_at": "2025-03-04T12:53:19.384437Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.386203Z", "completed_at": "2025-03-04T12:53:19.386214Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023340940475463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_balances_arbitrum_sepolia_total_balance__True__0.cb9ccb808a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_balance >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.374038Z", "completed_at": "2025-03-04T12:53:19.387132Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.389602Z", "completed_at": "2025-03-04T12:53:19.389610Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025457382202148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_account_balance.95f87597e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_balance\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere account_balance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.379743Z", "completed_at": "2025-03-04T12:53:19.387752Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.390492Z", "completed_at": "2025-03-04T12:53:19.390500Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02431654930114746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_account_balance_usd.2c0fcdaa2f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_balance_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere account_balance_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.391342Z", "completed_at": "2025-03-04T12:53:19.399860Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.406734Z", "completed_at": "2025-03-04T12:53:19.406746Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02160167694091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_amount_delta.a5e73a73e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delta\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere amount_delta is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.401068Z", "completed_at": "2025-03-04T12:53:19.415188Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.421598Z", "completed_at": "2025-03-04T12:53:19.421611Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02547287940979004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_amount_delta_usd.1cd0e8e566", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delta_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere amount_delta_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.408331Z", "completed_at": "2025-03-04T12:53:19.422490Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.424631Z", "completed_at": "2025-03-04T12:53:19.424639Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02549886703491211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_collateral_id.0e501ca686", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere collateral_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.416752Z", "completed_at": "2025-03-04T12:53:19.425489Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.427967Z", "completed_at": "2025-03-04T12:53:19.427974Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027635574340820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_event_type.e48a7dddd6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere event_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.428848Z", "completed_at": "2025-03-04T12:53:19.440722Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.442742Z", "completed_at": "2025-03-04T12:53:19.442754Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019774436950683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_synth_symbol.d08c2bc587", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_symbol\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere synth_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.435896Z", "completed_at": "2025-03-04T12:53:19.443673Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.450303Z", "completed_at": "2025-03-04T12:53:19.450312Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023747920989990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_synth_token_address.4de81c923a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_token_address\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere synth_token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.444247Z", "completed_at": "2025-03-04T12:53:19.456002Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.458101Z", "completed_at": "2025-03-04T12:53:19.458111Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02384042739868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_total_balance.f558ebc2c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_balance\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere total_balance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.451392Z", "completed_at": "2025-03-04T12:53:19.459116Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.461632Z", "completed_at": "2025-03-04T12:53:19.461640Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019780397415161133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_total_balance_usd.2c1e3f6b35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_balance_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere total_balance_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.462505Z", "completed_at": "2025-03-04T12:53:19.475579Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.477640Z", "completed_at": "2025-03-04T12:53:19.477649Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021124601364135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_transaction_hash.49e734bc96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.471315Z", "completed_at": "2025-03-04T12:53:19.478581Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.485339Z", "completed_at": "2025-03-04T12:53:19.485348Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0251619815826416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_arbitrum_sepolia_ts.fc2513a1e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_perp_collateral_balances_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.479125Z", "completed_at": "2025-03-04T12:53:19.491250Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.493282Z", "completed_at": "2025-03-04T12:53:19.493291Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023534297943115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.accepted_values_fct_core_rewards_claimed_base_mainnet_reward_type__liquidation__incentive.082095451d", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        reward_type as value_field,\n        count(*) as n_records\n\n    from \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\n    group by reward_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'liquidation','incentive'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.486417Z", "completed_at": "2025-03-04T12:53:19.494251Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.496743Z", "completed_at": "2025-03-04T12:53:19.496751Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019971609115600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_base_mainnet_amount__True__0.90c43b0ddb", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.497627Z", "completed_at": "2025-03-04T12:53:19.509841Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.511888Z", "completed_at": "2025-03-04T12:53:19.511898Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020155668258666992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_base_mainnet_amount_usd__True__0.7e3a7d96ae", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.504992Z", "completed_at": "2025-03-04T12:53:19.512812Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.522263Z", "completed_at": "2025-03-04T12:53:19.522275Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026972293853759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_base_mainnet_pool_id__True__0.20d8daf9bf", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.513392Z", "completed_at": "2025-03-04T12:53:19.528840Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.531433Z", "completed_at": "2025-03-04T12:53:19.531443Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028257369995117188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_rewards_claimed_base_mainnet_price__True__0.fa55c70702", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.523328Z", "completed_at": "2025-03-04T12:53:19.530839Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.537901Z", "completed_at": "2025-03-04T12:53:19.537914Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026956796646118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_account_id.fa140caedb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.532991Z", "completed_at": "2025-03-04T12:53:19.541130Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.547894Z", "completed_at": "2025-03-04T12:53:19.547904Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019984960556030273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_amount.01fefa72ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.542370Z", "completed_at": "2025-03-04T12:53:19.550835Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.561654Z", "completed_at": "2025-03-04T12:53:19.561668Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029448270797729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_amount_usd.6b55d3963e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere amount_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.551417Z", "completed_at": "2025-03-04T12:53:19.564287Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.572940Z", "completed_at": "2025-03-04T12:53:19.572951Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03132200241088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_collateral_type.f69c131f38", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.556184Z", "completed_at": "2025-03-04T12:53:19.571721Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.573961Z", "completed_at": "2025-03-04T12:53:19.573968Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02695155143737793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_distributor.4982771aca", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.564935Z", "completed_at": "2025-03-04T12:53:19.575512Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.582003Z", "completed_at": "2025-03-04T12:53:19.582012Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02130866050720215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_pool_id.729ebbdf44", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.577392Z", "completed_at": "2025-03-04T12:53:19.585227Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.587638Z", "completed_at": "2025-03-04T12:53:19.587646Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015474557876586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_price.4bf4a857ba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.588529Z", "completed_at": "2025-03-04T12:53:19.603996Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.606237Z", "completed_at": "2025-03-04T12:53:19.606250Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023439645767211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_reward_type.e5ed5a7b16", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reward_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere reward_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.593208Z", "completed_at": "2025-03-04T12:53:19.604806Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.607734Z", "completed_at": "2025-03-04T12:53:19.607742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02426290512084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_token_symbol.31b80fe8d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.599563Z", "completed_at": "2025-03-04T12:53:19.607110Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.609921Z", "completed_at": "2025-03-04T12:53:19.609929Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023045063018798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_rewards_claimed_base_mainnet_ts.48488fcf94", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_rewards_claimed_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.611412Z", "completed_at": "2025-03-04T12:53:19.619787Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.628658Z", "completed_at": "2025-03-04T12:53:19.628670Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023404598236083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_balances_base_mainnet_account_balance__True__0.d558974b62", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_balance >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.620967Z", "completed_at": "2025-03-04T12:53:19.639741Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.642129Z", "completed_at": "2025-03-04T12:53:19.642139Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025943994522094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_balances_base_mainnet_total_balance__True__0.f700d43ea1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_balance >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.634354Z", "completed_at": "2025-03-04T12:53:19.641575Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.644240Z", "completed_at": "2025-03-04T12:53:19.644248Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02517390251159668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_account_balance_usd.57013177d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_balance_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere account_balance_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.629624Z", "completed_at": "2025-03-04T12:53:19.643035Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.645845Z", "completed_at": "2025-03-04T12:53:19.645853Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02815103530883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_account_balance.4e0c87c2a8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_balance\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere account_balance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.646735Z", "completed_at": "2025-03-04T12:53:19.654246Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.656677Z", "completed_at": "2025-03-04T12:53:19.656686Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016030073165893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_amount_delta.3b1e1ace8a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delta\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere amount_delta is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.657562Z", "completed_at": "2025-03-04T12:53:19.675990Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.678481Z", "completed_at": "2025-03-04T12:53:19.678492Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026558399200439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_amount_delta_usd.3edc4b4ee4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delta_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere amount_delta_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.668596Z", "completed_at": "2025-03-04T12:53:19.677308Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.683829Z", "completed_at": "2025-03-04T12:53:19.683840Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02853846549987793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_event_type.d0809405df", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere event_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.663010Z", "completed_at": "2025-03-04T12:53:19.677927Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.684917Z", "completed_at": "2025-03-04T12:53:19.684926Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0314640998840332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_collateral_id.7f5bcd6ac4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere collateral_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.679355Z", "completed_at": "2025-03-04T12:53:19.687310Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.689887Z", "completed_at": "2025-03-04T12:53:19.689897Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014844655990600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_synth_symbol.6915a64c77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere synth_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.693863Z", "completed_at": "2025-03-04T12:53:19.710111Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.716366Z", "completed_at": "2025-03-04T12:53:19.716383Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027945280075073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_synth_token_address.6aa8d47004", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_token_address\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere synth_token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.698891Z", "completed_at": "2025-03-04T12:53:19.710729Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.717449Z", "completed_at": "2025-03-04T12:53:19.717457Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028323650360107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_total_balance.78218714a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_balance\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere total_balance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.704302Z", "completed_at": "2025-03-04T12:53:19.715752Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.718481Z", "completed_at": "2025-03-04T12:53:19.718489Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027817487716674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_transaction_hash.39c937a7b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.711369Z", "completed_at": "2025-03-04T12:53:19.719353Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.721987Z", "completed_at": "2025-03-04T12:53:19.721995Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018535137176513672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_mainnet_ts.1a99836525", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_perp_collateral_balances_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.730313Z", "completed_at": "2025-03-04T12:53:19.747525Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.754353Z", "completed_at": "2025-03-04T12:53:19.754366Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03166341781616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_base_mainnet", "compiled": true, "compiled_code": "\n\nwith dim as (\n\n    select\n        p.pool_id,\n        p.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\n    ) as p\n    group by\n        p.pool_id,\n        p.collateral_type\n),\n\nissuance as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        hourly_issuance\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_issuance_hourly_base_mainnet\"\n),\n\ndebt as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(debt) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as debt\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_debt_base_mainnet\"\n),\n\ncollateral as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(collateral_value) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as collateral_value\n    from\n        \"analytics\".\"prod_raw_base_mainnet\".\"core_vault_collateral_base_mainnet\"\n    where\n        pool_id = 1\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        coalesce(last(debt.debt) over (\n            partition by dim.collateral_type, dim.pool_id\n            order by\n                dim.ts\n            rows between unbounded preceding\n            and current row\n        ), 0) as debt,\n        coalesce(last(collateral.collateral_value) over (\n            partition by dim.collateral_type, dim.pool_id\n            order by\n                dim.ts\n            rows between unbounded preceding\n            and current row\n        ), 0) as collateral_value\n    from\n        dim\n    left join debt\n        on\n            dim.ts = debt.ts\n            and dim.pool_id = debt.pool_id\n            and dim.collateral_type = debt.collateral_type\n    left join collateral\n        on\n            dim.ts = collateral.ts\n            and dim.pool_id = collateral.pool_id\n            and dim.collateral_type = collateral.collateral_type\n),\n\nhourly_pnl as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        coalesce(lag(debt) over (\n            partition by pool_id, collateral_type\n            order by\n                ts\n        ) - debt, 0) as hourly_pnl\n    from\n        ffill\n),\n\npool_rewards as (\n    select\n        r.ts,\n        r.pool_id,\n        r.token_symbol,\n        pnl.collateral_type,\n        pnl.collateral_value,\n        sum(\n            pnl.collateral_value\n        ) over (\n            partition by\n                r.ts,\n                r.pool_id, r.token_symbol\n        ) as pool_collateral_value,\n        pnl.collateral_value / sum(\n            pnl.collateral_value\n        ) over (\n            partition by\n                r.ts,\n                r.pool_id, r.token_symbol\n        ) as collateral_type_share,\n        r.rewards_usd as pool_rewards,\n        -- reward share of pool rewards\n        r.rewards_usd\n        * (\n            pnl.collateral_value\n            / sum(pnl.collateral_value)\n                over (partition by r.ts, r.pool_id, r.token_symbol)\n        ) as rewards_usd\n    from\n        (\n            select\n                r.ts,\n                r.pool_id,\n                r.token_symbol,\n                r.rewards_usd\n            from\n                \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\" as r\n        ) as r\n    inner join hourly_pnl as pnl\n        on\n            r.ts = pnl.ts\n            and r.pool_id = pnl.pool_id\n),\n\nhourly_rewards as (\n    select\n        ts,\n        pool_id,\n        lower(collateral_type) as collateral_type,\n        sum(rewards_usd) as rewards_usd,\n        sum(liquidation_rewards_usd) as liquidation_rewards_usd\n    from\n        (\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                rewards_usd,\n                liquidation_rewards_usd\n            from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\n            union all\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                rewards_usd,\n                0 as liquidation_rewards_usd\n            from pool_rewards\n        ) as all_rewards\n    group by ts, pool_id, lower(collateral_type)\n),\n\nhourly_returns as (\n    select\n        pnl.ts,\n        pnl.pool_id,\n        pnl.collateral_type,\n        pnl.collateral_value,\n        pnl.debt,\n        coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_issuance,\n        pnl.hourly_pnl + coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_pnl,\n        coalesce(\n            rewards.rewards_usd,\n            0\n        ) as rewards_usd,\n        coalesce(\n            rewards.liquidation_rewards_usd,\n            0\n        ) as liquidation_rewards_usd,\n        case\n            when pnl.collateral_value = 0 then 0\n            else coalesce(\n                rewards.rewards_usd,\n                0\n            ) / pnl.collateral_value\n        end as hourly_rewards_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else\n                (coalesce(iss.hourly_issuance, 0) + pnl.hourly_pnl)\n                / pnl.collateral_value\n        end as hourly_pnl_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else (\n                coalesce(\n                    rewards.rewards_usd,\n                    0\n                ) + pnl.hourly_pnl + coalesce(\n                    iss.hourly_issuance,\n                    0\n                )\n            ) / pnl.collateral_value\n        end as hourly_total_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else (coalesce(\n                rewards.rewards_usd,\n                0\n            ) - coalesce(\n                rewards.liquidation_rewards_usd,\n                0\n            )) / pnl.collateral_value\n        end as hourly_incentive_rewards_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else (\n                coalesce(\n                    rewards.liquidation_rewards_usd,\n                    0\n                ) + pnl.hourly_pnl + coalesce(\n                    iss.hourly_issuance,\n                    0\n                )\n            ) / pnl.collateral_value\n        end as hourly_performance_pct\n    from\n        hourly_pnl as pnl\n    left join hourly_rewards as rewards\n        on\n            pnl.ts = rewards.ts\n            and pnl.pool_id = rewards.pool_id\n            and lower(\n                pnl.collateral_type\n            ) = lower(\n                rewards.collateral_type\n            )\n    left join issuance as iss\n        on\n            pnl.ts = iss.ts\n            and pnl.pool_id = iss.pool_id\n            and lower(\n                pnl.collateral_type\n            ) = lower(\n                iss.collateral_type\n            )\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    rewards_usd,\n    liquidation_rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    hourly_total_pct,\n    hourly_incentive_rewards_pct,\n    hourly_performance_pct\nfrom\n    hourly_returns", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.736916Z", "completed_at": "2025-03-04T12:53:19.752974Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.755444Z", "completed_at": "2025-03-04T12:53:19.755452Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03205394744873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_pool_hourly_base_mainnet_amount__True__0.b67eb2dc17", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.741766Z", "completed_at": "2025-03-04T12:53:19.753792Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.756913Z", "completed_at": "2025-03-04T12:53:19.756921Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03061652183532715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_pool_hourly_base_mainnet_pool_id__True__0.30606339f8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.748311Z", "completed_at": "2025-03-04T12:53:19.756278Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.759665Z", "completed_at": "2025-03-04T12:53:19.759674Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030079364776611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_pool_hourly_base_mainnet_rewards_usd__True__0.adf9b2435e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.771571Z", "completed_at": "2025-03-04T12:53:19.788845Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.790484Z", "completed_at": "2025-03-04T12:53:19.790498Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02875995635986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_base_mainnet_liquidation_rewards_usd__True__0.916046d280", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidation_rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.766294Z", "completed_at": "2025-03-04T12:53:19.789843Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.792663Z", "completed_at": "2025-03-04T12:53:19.792676Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03161501884460449, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_base_mainnet_amount__True__0.dbf212e433", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.784125Z", "completed_at": "2025-03-04T12:53:19.791484Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.794194Z", "completed_at": "2025-03-04T12:53:19.794205Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029329299926757812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_base_mainnet_rewards_usd__True__0.2f31fe80de", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.779151Z", "completed_at": "2025-03-04T12:53:19.792072Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.795167Z", "completed_at": "2025-03-04T12:53:19.795175Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03211092948913574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_base_mainnet_pool_id__True__0.59419d2477", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.801843Z", "completed_at": "2025-03-04T12:53:19.817219Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.824743Z", "completed_at": "2025-03-04T12:53:19.824761Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028143882751464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_pool_hourly_base_mainnet_amount.e61f0abae3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.808037Z", "completed_at": "2025-03-04T12:53:19.825653Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.828427Z", "completed_at": "2025-03-04T12:53:19.828435Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02985405921936035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_pool_hourly_base_mainnet_pool_id.7caa7784fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.817813Z", "completed_at": "2025-03-04T12:53:19.826500Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.829351Z", "completed_at": "2025-03-04T12:53:19.829360Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02886962890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_pool_hourly_base_mainnet_token_symbol.deb64d0827", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.812678Z", "completed_at": "2025-03-04T12:53:19.827652Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.831188Z", "completed_at": "2025-03-04T12:53:19.831197Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0313105583190918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_pool_hourly_base_mainnet_rewards_usd.70250ab142", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.835963Z", "completed_at": "2025-03-04T12:53:19.843551Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.858311Z", "completed_at": "2025-03-04T12:53:19.858324Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027911901473999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_pool_hourly_base_mainnet_ts.f9b0c31f8e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.844135Z", "completed_at": "2025-03-04T12:53:19.859807Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.862354Z", "completed_at": "2025-03-04T12:53:19.862362Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02778911590576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_mainnet_amount.ee0d98f0ab", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.848848Z", "completed_at": "2025-03-04T12:53:19.861165Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.864092Z", "completed_at": "2025-03-04T12:53:19.864099Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028890371322631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_mainnet_collateral_type.52b0ac191f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.853534Z", "completed_at": "2025-03-04T12:53:19.861798Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.864993Z", "completed_at": "2025-03-04T12:53:19.865001Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024179697036743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_mainnet_liquidation_rewards_usd.51744c62bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidation_rewards_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\nwhere liquidation_rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.869157Z", "completed_at": "2025-03-04T12:53:19.876627Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.889399Z", "completed_at": "2025-03-04T12:53:19.889413Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02614760398864746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_mainnet_pool_id.26caff37a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.877785Z", "completed_at": "2025-03-04T12:53:19.895896Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.898495Z", "completed_at": "2025-03-04T12:53:19.898504Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03012824058532715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_mainnet_rewards_usd.2724c9008d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.884538Z", "completed_at": "2025-03-04T12:53:19.896452Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.899369Z", "completed_at": "2025-03-04T12:53:19.899376Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025571107864379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_mainnet_token_symbol.185f4e6438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.890372Z", "completed_at": "2025-03-04T12:53:19.897928Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.900869Z", "completed_at": "2025-03-04T12:53:19.900877Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0263059139251709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_mainnet_ts.b6c015406d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.903036Z", "completed_at": "2025-03-04T12:53:19.911309Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.918049Z", "completed_at": "2025-03-04T12:53:19.918065Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021002531051635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_balances_base_sepolia_account_balance__True__0.ba878826df", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not account_balance >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.913165Z", "completed_at": "2025-03-04T12:53:19.931747Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.933801Z", "completed_at": "2025-03-04T12:53:19.933811Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025172710418701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_perp_collateral_balances_base_sepolia_total_balance__True__0.285571ff56", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_balance >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.919079Z", "completed_at": "2025-03-04T12:53:19.932354Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.935269Z", "completed_at": "2025-03-04T12:53:19.935279Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026006221771240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_account_balance.57eaade64d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_balance\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere account_balance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.923810Z", "completed_at": "2025-03-04T12:53:19.934672Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.937579Z", "completed_at": "2025-03-04T12:53:19.937593Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02758622169494629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_account_balance_usd.42b7f430e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_balance_usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere account_balance_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.939093Z", "completed_at": "2025-03-04T12:53:19.946672Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.953281Z", "completed_at": "2025-03-04T12:53:19.953293Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02035999298095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_amount_delta.36e38848f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delta\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere amount_delta is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.948447Z", "completed_at": "2025-03-04T12:53:19.965195Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.967362Z", "completed_at": "2025-03-04T12:53:19.967374Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02369236946105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_amount_delta_usd.cecfa33867", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount_delta_usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere amount_delta_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.954996Z", "completed_at": "2025-03-04T12:53:19.966641Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.969516Z", "completed_at": "2025-03-04T12:53:19.969524Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02437448501586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_collateral_id.aecff52f67", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere collateral_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.960684Z", "completed_at": "2025-03-04T12:53:19.968308Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.971084Z", "completed_at": "2025-03-04T12:53:19.971092Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023936748504638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_event_type.a711fcead6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere event_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.971976Z", "completed_at": "2025-03-04T12:53:19.979664Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:19.982031Z", "completed_at": "2025-03-04T12:53:19.982042Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01620340347290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_synth_symbol.2c78f613ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere synth_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.982944Z", "completed_at": "2025-03-04T12:53:20.001061Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.003170Z", "completed_at": "2025-03-04T12:53:20.003182Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02583765983581543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_synth_token_address.a79650fc4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect synth_token_address\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere synth_token_address is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.990782Z", "completed_at": "2025-03-04T12:53:20.002504Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.005293Z", "completed_at": "2025-03-04T12:53:20.005302Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02642202377319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_total_balance.d18382e843", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_balance\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere total_balance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:19.996371Z", "completed_at": "2025-03-04T12:53:20.004716Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.011631Z", "completed_at": "2025-03-04T12:53:20.011641Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030947446823120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_transaction_hash.91f74feda4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_hash\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere transaction_hash is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.006894Z", "completed_at": "2025-03-04T12:53:20.014796Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.017320Z", "completed_at": "2025-03-04T12:53:20.017328Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01564335823059082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_perp_collateral_balances_base_sepolia_ts.71ad0dbc51", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_perp_collateral_balances_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.018792Z", "completed_at": "2025-03-04T12:53:20.035993Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.038707Z", "completed_at": "2025-03-04T12:53:20.038719Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025423526763916016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_rewards_hourly_base_sepolia", "compiled": true, "compiled_code": "with token_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        rewards_usd\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    SUM(rewards_usd) as rewards_usd\nfrom\n    token_hourly\ngroup by\n    ts,\n    pool_id,\n    collateral_type", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.023652Z", "completed_at": "2025-03-04T12:53:20.036966Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.039628Z", "completed_at": "2025-03-04T12:53:20.039636Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024290800094604492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_base_sepolia_amount__True__0.8db4f3d98c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not amount >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.030593Z", "completed_at": "2025-03-04T12:53:20.038110Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.045449Z", "completed_at": "2025-03-04T12:53:20.045482Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02889847755432129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_base_sepolia_pool_id__True__0.81592c4342", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.040510Z", "completed_at": "2025-03-04T12:53:20.048964Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.051483Z", "completed_at": "2025-03-04T12:53:20.051491Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016360044479370117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_token_hourly_base_sepolia_rewards_usd__True__0.c0730ac36d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.059866Z", "completed_at": "2025-03-04T12:53:20.070691Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.073073Z", "completed_at": "2025-03-04T12:53:20.073086Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02299022674560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_sepolia_collateral_type.d1a6cde42d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.064859Z", "completed_at": "2025-03-04T12:53:20.071902Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.079189Z", "completed_at": "2025-03-04T12:53:20.079203Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028486967086791992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_sepolia_distributor.e0a88ca283", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect distributor\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\nwhere distributor is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.054706Z", "completed_at": "2025-03-04T12:53:20.072519Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.081973Z", "completed_at": "2025-03-04T12:53:20.081982Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03252148628234863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_sepolia_amount.f5bf39a8d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect amount\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\nwhere amount is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.074022Z", "completed_at": "2025-03-04T12:53:20.085151Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.087727Z", "completed_at": "2025-03-04T12:53:20.087739Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018439531326293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_sepolia_pool_id.be2709e1ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.095901Z", "completed_at": "2025-03-04T12:53:20.106539Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.108398Z", "completed_at": "2025-03-04T12:53:20.108411Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022068500518798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_sepolia_token_symbol.0efe3d5a1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect token_symbol\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\nwhere token_symbol is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.100920Z", "completed_at": "2025-03-04T12:53:20.107195Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.109882Z", "completed_at": "2025-03-04T12:53:20.109889Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022892475128173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_sepolia_ts.965132b4de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.091023Z", "completed_at": "2025-03-04T12:53:20.109273Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.116227Z", "completed_at": "2025-03-04T12:53:20.116235Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030529260635375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_token_hourly_base_sepolia_rewards_usd.d3001484ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.110746Z", "completed_at": "2025-03-04T12:53:20.118605Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.121133Z", "completed_at": "2025-03-04T12:53:20.121144Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0160064697265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_reward_eth_mainnet", "compiled": true, "compiled_code": "\n\nwith dim as (\n\n    select\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol as reward_token,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n            from\n                \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\n            group by\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n        ) as t\n    cross join (\n        select distinct token_symbol\n        from\n            \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\n    ) as p\n    group by\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol\n),\n\nreward_hourly_token as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol as reward_token,\n        sum(\n            rewards_usd\n        ) as rewards_usd\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_rewards_token_hourly_eth_mainnet\"\n    group by\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    dim.collateral_value,\n    dim.reward_token,\n    coalesce(\n        reward_hourly_token.rewards_usd,\n        0\n    ) as rewards_usd,\n    case\n        when dim.collateral_value = 0 then 0\n        else coalesce(\n            reward_hourly_token.rewards_usd,\n            0\n        ) / dim.collateral_value\n    end as hourly_rewards_pct\nfrom\n    dim\nleft join reward_hourly_token\n    on\n        dim.ts = reward_hourly_token.ts\n        and dim.pool_id = reward_hourly_token.pool_id\n        and dim.collateral_type = reward_hourly_token.collateral_type\n        and dim.reward_token = reward_hourly_token.reward_token", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_reward_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.123248Z", "completed_at": "2025-03-04T12:53:20.142199Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.144417Z", "completed_at": "2025-03-04T12:53:20.144429Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026627540588378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_token_yields_eth_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select distinct\n        p.ts,\n        p.pool_id,\n        p.collateral_type,\n        t.token_symbol,\n        t.yield_token_symbol\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\n        as p\n    inner join\n        \"analytics\".\"prod_seeds\".\"eth_mainnet_tokens\"\n        as t\n        on lower(p.collateral_type) = lower(t.token_address)\n    where\n        t.yield_token_symbol is not null\n),\n\ntoken_prices as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        dim.token_symbol,\n        dim.yield_token_symbol,\n        tp.price as token_price,\n        yp.price as yield_token_price,\n        tp.price / yp.price as exchange_rate\n    from\n        dim\n    inner join \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\" as tp\n        on\n            dim.token_symbol = tp.market_symbol\n            and dim.ts = tp.ts\n    inner join \"analytics\".\"prod_eth_mainnet\".\"fct_prices_hourly_eth_mainnet\" as yp\n        on\n            dim.yield_token_symbol = yp.market_symbol\n            and dim.ts = yp.ts\n),\n\nrate_changes as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        exchange_rate,\n        exchange_rate / lag(exchange_rate) over (\n            partition by token_symbol, yield_token_symbol\n            order by\n                ts\n        ) - 1 as hourly_exchange_rate_pnl\n    from\n        token_prices\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    exchange_rate,\n    hourly_exchange_rate_pnl,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '24 HOURS' preceding\n        and current row\n    ) * 24 * 365 as apr_24h_underlying,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '7 DAYS' preceding\n        and current row\n    ) * 24 * 365 as apr_7d_underlying,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '28 DAYS' preceding\n        and current row\n    ) * 24 * 365 as apr_28d_underlying\nfrom\n    rate_changes", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.129543Z", "completed_at": "2025-03-04T12:53:20.143708Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.150725Z", "completed_at": "2025-03-04T12:53:20.150739Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030961036682128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_eth_mainnet_collateral_value__True__0.aa5cf487aa", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.137537Z", "completed_at": "2025-03-04T12:53:20.145345Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.152827Z", "completed_at": "2025-03-04T12:53:20.152837Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03090810775756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_eth_mainnet_hourly_pnl_pct__True__1___1.ad0a057625", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct >= -1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.145960Z", "completed_at": "2025-03-04T12:53:20.154632Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.157180Z", "completed_at": "2025-03-04T12:53:20.157187Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0205996036529541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_eth_mainnet_hourly_rewards_pct__True__1__0.b431022b52", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.160541Z", "completed_at": "2025-03-04T12:53:20.176500Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.178522Z", "completed_at": "2025-03-04T12:53:20.178533Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023459434509277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_eth_mainnet_pool_id__True__0.ad130b0c2f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.166260Z", "completed_at": "2025-03-04T12:53:20.177822Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.187384Z", "completed_at": "2025-03-04T12:53:20.187398Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03100895881652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_eth_mainnet_rewards_usd__True__0.80c1c42490", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.171942Z", "completed_at": "2025-03-04T12:53:20.186794Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.189334Z", "completed_at": "2025-03-04T12:53:20.189346Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030800580978393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_collateral_type.8346dc5b9e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.179489Z", "completed_at": "2025-03-04T12:53:20.190918Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.193547Z", "completed_at": "2025-03-04T12:53:20.193555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022650957107543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_collateral_value.bf72ec5191", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.196869Z", "completed_at": "2025-03-04T12:53:20.214007Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.216215Z", "completed_at": "2025-03-04T12:53:20.216227Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024776458740234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_debt.34ed8f7e19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.203031Z", "completed_at": "2025-03-04T12:53:20.215550Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.222525Z", "completed_at": "2025-03-04T12:53:20.222539Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029758930206298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_hourly_debt_migrated.b2364c3711", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_debt_migrated\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere hourly_debt_migrated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.208969Z", "completed_at": "2025-03-04T12:53:20.217162Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.224178Z", "completed_at": "2025-03-04T12:53:20.224188Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029276609420776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_hourly_issuance.d981b1941f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.217775Z", "completed_at": "2025-03-04T12:53:20.226664Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.229144Z", "completed_at": "2025-03-04T12:53:20.229151Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02128434181213379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_hourly_pnl.aef91ccc24", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.231199Z", "completed_at": "2025-03-04T12:53:20.249405Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.251493Z", "completed_at": "2025-03-04T12:53:20.251505Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025626659393310547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_hourly_pnl_pct.d9b73c59f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.237574Z", "completed_at": "2025-03-04T12:53:20.250778Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.257448Z", "completed_at": "2025-03-04T12:53:20.257457Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029661178588867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_hourly_rewards_pct.d8b6a6177f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.245033Z", "completed_at": "2025-03-04T12:53:20.252389Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.259172Z", "completed_at": "2025-03-04T12:53:20.259180Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029264450073242188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_hourly_total_pct.b8f62bde16", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_total_pct\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere hourly_total_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.252976Z", "completed_at": "2025-03-04T12:53:20.260934Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.263522Z", "completed_at": "2025-03-04T12:53:20.263529Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019387483596801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_pool_id.d4b3c4be36", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.266874Z", "completed_at": "2025-03-04T12:53:20.284419Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.292893Z", "completed_at": "2025-03-04T12:53:20.292908Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03156089782714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_rewards_usd.8fd34c30e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.272142Z", "completed_at": "2025-03-04T12:53:20.293877Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.296625Z", "completed_at": "2025-03-04T12:53:20.296634Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0338895320892334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_eth_mainnet_ts.2a846b2bb8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.277602Z", "completed_at": "2025-03-04T12:53:20.294533Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.297528Z", "completed_at": "2025-03-04T12:53:20.297539Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03267240524291992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_arbitrum_mainnet", "compiled": true, "compiled_code": "\n\nwith dim as (\n    select\n        p.pool_id,\n        p.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\n    ) as p\n    group by\n        p.pool_id,\n        p.collateral_type\n),\n\nissuance as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        hourly_issuance\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_issuance_hourly_arbitrum_mainnet\"\n),\n\ndebt as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(debt) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as debt\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_debt_arbitrum_mainnet\"\n),\n\ncollateral as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(collateral_value) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as collateral_value\n    from\n        \"analytics\".\"prod_raw_arbitrum_mainnet\".\"core_vault_collateral_arbitrum_mainnet\"\n    where\n        pool_id = 1\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        coalesce(\n            last(debt) over (\n                partition by dim.collateral_type, dim.pool_id\n                order by dim.ts\n                rows between unbounded preceding and current row\n            ),\n            0\n        ) as debt,\n        coalesce(\n            last(collateral_value) over (\n                partition by dim.collateral_type, dim.pool_id\n                order by dim.ts\n                rows between unbounded preceding and current row\n            ),\n            0\n        ) as collateral_value\n    from\n        dim\n    left join debt\n        on\n            dim.ts = debt.ts\n            and dim.pool_id = debt.pool_id\n            and dim.collateral_type = debt.collateral_type\n    left join collateral\n        on\n            dim.ts = collateral.ts\n            and dim.pool_id = collateral.pool_id\n            and dim.collateral_type = collateral.collateral_type\n),\n\nhourly_pnl as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        coalesce(lag(debt) over (\n            partition by pool_id, collateral_type\n            order by\n                ts\n        ) - debt, 0) as hourly_pnl\n    from\n        ffill\n),\n\nhourly_rewards as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        rewards_usd\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_hourly_arbitrum_mainnet\"\n),\n\nhourly_returns as (\n    select\n        pnl.ts,\n        pnl.pool_id,\n        pnl.collateral_type,\n        pnl.collateral_value,\n        pnl.debt,\n        coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_issuance,\n        pnl.hourly_pnl + coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_pnl,\n        coalesce(\n            rewards.rewards_usd,\n            0\n        ) as rewards_usd,\n        case\n            when pnl.collateral_value = 0 then 0\n            else coalesce(\n                rewards.rewards_usd,\n                0\n            ) / pnl.collateral_value\n        end as hourly_rewards_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else\n                (coalesce(iss.hourly_issuance, 0) + pnl.hourly_pnl)\n                / pnl.collateral_value\n        end as hourly_pnl_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else\n                (\n                    coalesce(rewards.rewards_usd, 0)\n                    + pnl.hourly_pnl\n                    + coalesce(iss.hourly_issuance, 0)\n                )\n                / pnl.collateral_value\n        end as hourly_total_pct\n    from\n        hourly_pnl as pnl\n    left join hourly_rewards as rewards\n        on\n            pnl.ts = rewards.ts\n            and pnl.pool_id = rewards.pool_id\n            and lower(pnl.collateral_type) = lower(rewards.collateral_type)\n    left join issuance as iss\n        on\n            pnl.ts = iss.ts\n            and pnl.pool_id = iss.pool_id\n            and lower(\n                pnl.collateral_type\n            ) = lower(\n                iss.collateral_type\n            )\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    hourly_total_pct\nfrom\n    hourly_returns", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.285229Z", "completed_at": "2025-03-04T12:53:20.295934Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.299088Z", "completed_at": "2025-03-04T12:53:20.299098Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02243185043334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_hourly_arbitrum_mainnet_pool_id__True__0.4d32e65287", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.304613Z", "completed_at": "2025-03-04T12:53:20.317534Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.327363Z", "completed_at": "2025-03-04T12:53:20.327379Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029154300689697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_hourly_arbitrum_mainnet_rewards_usd__True__0.d689f56d7e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.312689Z", "completed_at": "2025-03-04T12:53:20.328521Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.330719Z", "completed_at": "2025-03-04T12:53:20.330729Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02759385108947754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_arbitrum_mainnet_collateral_type.490293ba7d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_hourly_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.322751Z", "completed_at": "2025-03-04T12:53:20.330049Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.332949Z", "completed_at": "2025-03-04T12:53:20.332959Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02301788330078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_arbitrum_mainnet_rewards_usd.f0877fa7b3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_hourly_arbitrum_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.318305Z", "completed_at": "2025-03-04T12:53:20.331595Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.334486Z", "completed_at": "2025-03-04T12:53:20.334494Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030638933181762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_arbitrum_mainnet_pool_id.3237fb1ab1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_hourly_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.338041Z", "completed_at": "2025-03-04T12:53:20.353586Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.359748Z", "completed_at": "2025-03-04T12:53:20.359759Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027619123458862305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_arbitrum_mainnet_ts.55c84a8938", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_hourly_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.347887Z", "completed_at": "2025-03-04T12:53:20.365319Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.367627Z", "completed_at": "2025-03-04T12:53:20.367636Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031049728393554688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_arbitrum_sepolia", "compiled": true, "compiled_code": "\n\nwith dim as (\n    select\n        p.pool_id,\n        p.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\n    ) as p\n    group by\n        p.pool_id,\n        p.collateral_type\n),\n\nissuance as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        hourly_issuance\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_issuance_hourly_arbitrum_sepolia\"\n),\n\ndebt as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(debt) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as debt\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_debt_arbitrum_sepolia\"\n),\n\ncollateral as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(collateral_value) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as collateral_value\n    from\n        \"analytics\".\"prod_raw_arbitrum_sepolia\".\"core_vault_collateral_arbitrum_sepolia\"\n    where\n        pool_id = 1\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        coalesce(\n            last(debt) over (\n                partition by dim.collateral_type, dim.pool_id\n                order by dim.ts\n                rows between unbounded preceding and current row\n            ),\n            0\n        ) as debt,\n        coalesce(\n            last(collateral_value) over (\n                partition by dim.collateral_type, dim.pool_id\n                order by dim.ts\n                rows between unbounded preceding and current row\n            ),\n            0\n        ) as collateral_value\n    from\n        dim\n    left join debt\n        on\n            dim.ts = debt.ts\n            and dim.pool_id = debt.pool_id\n            and dim.collateral_type = debt.collateral_type\n    left join collateral\n        on\n            dim.ts = collateral.ts\n            and dim.pool_id = collateral.pool_id\n            and dim.collateral_type = collateral.collateral_type\n),\n\nhourly_pnl as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        coalesce(lag(debt) over (\n            partition by pool_id, collateral_type\n            order by\n                ts\n        ) - debt, 0) as hourly_pnl\n    from\n        ffill\n),\n\nhourly_rewards as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        rewards_usd\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_hourly_arbitrum_sepolia\"\n),\n\nhourly_returns as (\n    select\n        pnl.ts,\n        pnl.pool_id,\n        pnl.collateral_type,\n        pnl.collateral_value,\n        pnl.debt,\n        coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_issuance,\n        pnl.hourly_pnl + coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_pnl,\n        coalesce(\n            rewards.rewards_usd,\n            0\n        ) as rewards_usd,\n        case\n            when pnl.collateral_value = 0 then 0\n            else coalesce(\n                rewards.rewards_usd,\n                0\n            ) / pnl.collateral_value\n        end as hourly_rewards_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else\n                (coalesce(iss.hourly_issuance, 0) + pnl.hourly_pnl)\n                / pnl.collateral_value\n        end as hourly_pnl_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else\n                (\n                    coalesce(rewards.rewards_usd, 0)\n                    + pnl.hourly_pnl\n                    + coalesce(iss.hourly_issuance, 0)\n                )\n                / pnl.collateral_value\n        end as hourly_total_pct\n    from\n        hourly_pnl as pnl\n    left join hourly_rewards as rewards\n        on\n            pnl.ts = rewards.ts\n            and pnl.pool_id = rewards.pool_id\n            and lower(pnl.collateral_type) = lower(rewards.collateral_type)\n    left join issuance as iss\n        on\n            pnl.ts = iss.ts\n            and pnl.pool_id = iss.pool_id\n            and lower(\n                pnl.collateral_type\n            ) = lower(\n                iss.collateral_type\n            )\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    hourly_total_pct\nfrom\n    hourly_returns", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.354878Z", "completed_at": "2025-03-04T12:53:20.366905Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.369808Z", "completed_at": "2025-03-04T12:53:20.369816Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027083873748779297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_hourly_arbitrum_sepolia_pool_id__True__0.550e7516ff", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.360732Z", "completed_at": "2025-03-04T12:53:20.369196Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.372386Z", "completed_at": "2025-03-04T12:53:20.372394Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026231765747070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_hourly_arbitrum_sepolia_rewards_usd__True__0.29163ebf9c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.374602Z", "completed_at": "2025-03-04T12:53:20.382984Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.395481Z", "completed_at": "2025-03-04T12:53:20.395494Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027020931243896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_arbitrum_sepolia_collateral_type.e8435924a6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_hourly_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.383570Z", "completed_at": "2025-03-04T12:53:20.401122Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.402696Z", "completed_at": "2025-03-04T12:53:20.402705Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028853416442871094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_arbitrum_sepolia_pool_id.a84969537b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_hourly_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.396548Z", "completed_at": "2025-03-04T12:53:20.403666Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.406130Z", "completed_at": "2025-03-04T12:53:20.406141Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024541616439819336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_arbitrum_sepolia_ts.c0fe0cb40b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_hourly_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.388868Z", "completed_at": "2025-03-04T12:53:20.404238Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.407045Z", "completed_at": "2025-03-04T12:53:20.407053Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026865720748901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_arbitrum_sepolia_rewards_usd.a8bf6b50cf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_hourly_arbitrum_sepolia\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.410398Z", "completed_at": "2025-03-04T12:53:20.422863Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.429779Z", "completed_at": "2025-03-04T12:53:20.429789Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025098562240600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_reward_base_mainnet", "compiled": true, "compiled_code": "\n\nwith dim as (\n\n    select\n        t.ts,\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol as reward_token\n    from\n        (\n            select\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n            from\n                \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n            group by\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n        ) as t\n    cross join (\n        select distinct token_symbol\n        from\n            (\n                select token_symbol\n                from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\n                union all\n                select token_symbol\n                from \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\"\n            ) as tokens\n    ) as p\n    group by\n        t.ts,\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol\n),\n\nreward_hourly_token as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol as reward_token,\n        SUM(\n            rewards_usd\n        ) as rewards_usd,\n        SUM(\n            liquidation_rewards_usd\n        ) as liquidation_rewards_usd\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_token_hourly_base_mainnet\"\n    group by\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol\n),\n\nreward_hourly_pool as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        dim.reward_token,\n        dim.collateral_value,\n        SUM(\n            dim.collateral_value\n        ) over (\n            partition by\n                dim.ts,\n                dim.pool_id,\n                dim.reward_token\n        ) as pool_collateral_value,\n        dim.collateral_value / SUM(\n            dim.collateral_value\n        ) over (\n            partition by\n                dim.ts,\n                dim.pool_id,\n                dim.reward_token\n        ) as collateral_type_share,\n        r.rewards_usd as pool_rewards,\n        r.rewards_usd\n        * (\n            dim.collateral_value\n            / SUM(dim.collateral_value)\n                over (partition by dim.ts, dim.pool_id, dim.reward_token)\n        ) as rewards_usd\n    from\n        (\n            select\n                r.ts,\n                r.pool_id,\n                r.token_symbol,\n                r.rewards_usd\n            from\n                \"analytics\".\"prod_base_mainnet\".\"fct_pool_rewards_pool_hourly_base_mainnet\" as r\n        ) as r\n    inner join dim\n        on\n            r.ts = dim.ts\n            and r.pool_id = dim.pool_id\n            and r.token_symbol = dim.reward_token\n),\n\n\nreward_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        SUM(rewards_usd) as rewards_usd,\n        SUM(liquidation_rewards_usd) as liquidation_rewards_usd\n    from\n        (\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                reward_token,\n                rewards_usd,\n                liquidation_rewards_usd\n            from reward_hourly_token\n            union all\n            select\n                ts,\n                pool_id,\n                collateral_type,\n                reward_token,\n                rewards_usd,\n                0 as liquidation_rewards_usd\n            from reward_hourly_pool\n        ) as all_rewards\n    group by ts, pool_id, collateral_type, reward_token\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    dim.collateral_value,\n    dim.reward_token,\n    COALESCE(\n        reward_hourly.rewards_usd,\n        0\n    ) as rewards_usd,\n    case\n        when dim.collateral_value = 0 then 0\n        else COALESCE(\n            reward_hourly.rewards_usd,\n            0\n        ) / dim.collateral_value\n    end as hourly_rewards_pct,\n    COALESCE(\n        reward_hourly.liquidation_rewards_usd,\n        0\n    ) as liquidation_rewards_usd\nfrom\n    dim\nleft join reward_hourly\n    on\n        dim.ts = reward_hourly.ts\n        and dim.pool_id = reward_hourly.pool_id\n        and LOWER(dim.collateral_type)\n        = LOWER(reward_hourly.collateral_type)\n        and dim.reward_token = reward_hourly.reward_token", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_reward_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.417951Z", "completed_at": "2025-03-04T12:53:20.429113Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.435497Z", "completed_at": "2025-03-04T12:53:20.435507Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027133941650390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_token_yields_base_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select distinct\n        p.ts,\n        p.pool_id,\n        p.collateral_type,\n        t.token_symbol,\n        t.yield_token_symbol\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n        as p\n    inner join\n        \"analytics\".\"prod_seeds\".\"base_mainnet_tokens\"\n        as t\n        on lower(p.collateral_type) = lower(t.token_address)\n    where\n        t.yield_token_symbol is not null\n),\n\ntoken_prices as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        dim.token_symbol,\n        dim.yield_token_symbol,\n        tp.price as token_price,\n        yp.price as yield_token_price,\n        tp.price / yp.price as exchange_rate\n    from\n        dim\n    inner join \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\" as tp\n        on\n            dim.token_symbol = tp.market_symbol\n            and dim.ts = tp.ts\n    inner join \"analytics\".\"prod_base_mainnet\".\"fct_prices_hourly_base_mainnet\" as yp\n        on\n            dim.yield_token_symbol = yp.market_symbol\n            and dim.ts = yp.ts\n),\n\nrate_changes as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        exchange_rate,\n        exchange_rate / lag(exchange_rate) over (\n            partition by token_symbol, yield_token_symbol\n            order by\n                ts\n        ) - 1 as hourly_exchange_rate_pnl\n    from\n        token_prices\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    exchange_rate,\n    hourly_exchange_rate_pnl,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '24 HOURS' preceding\n        and current row\n    ) * 24 * 365 as apr_24h_underlying,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '7 DAYS' preceding\n        and current row\n    ) * 24 * 365 as apr_7d_underlying,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '28 DAYS' preceding\n        and current row\n    ) * 24 * 365 as apr_28d_underlying\nfrom\n    rate_changes", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.424292Z", "completed_at": "2025-03-04T12:53:20.437478Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.440373Z", "completed_at": "2025-03-04T12:53:20.440383Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023944854736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_mainnet_collateral_value__True__0.7bf7b1ccab", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.430724Z", "completed_at": "2025-03-04T12:53:20.438197Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.441266Z", "completed_at": "2025-03-04T12:53:20.441273Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02416515350341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_mainnet_hourly_incentive_rewards_pct__True__0.004fdd855a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_incentive_rewards_pct >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.445395Z", "completed_at": "2025-03-04T12:53:20.459538Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.465554Z", "completed_at": "2025-03-04T12:53:20.465568Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026015758514404297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_mainnet_hourly_performance_pct__True__0.c967236ca4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_performance_pct >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.454004Z", "completed_at": "2025-03-04T12:53:20.466625Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.473518Z", "completed_at": "2025-03-04T12:53:20.473527Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031493186950683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_mainnet_hourly_rewards_pct__True__1__0.24176cb1b5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.460815Z", "completed_at": "2025-03-04T12:53:20.472906Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.475219Z", "completed_at": "2025-03-04T12:53:20.475227Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022793292999267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_mainnet_liquidation_rewards_usd__True__0.b8d99cf207", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidation_rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.467222Z", "completed_at": "2025-03-04T12:53:20.476080Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.478654Z", "completed_at": "2025-03-04T12:53:20.478662Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025435924530029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_mainnet_pool_id__True__0.4246141dca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.480130Z", "completed_at": "2025-03-04T12:53:20.488424Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.500660Z", "completed_at": "2025-03-04T12:53:20.500672Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026253938674926758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_mainnet_rewards_usd__True__0.65717bc033", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.489041Z", "completed_at": "2025-03-04T12:53:20.506912Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.509740Z", "completed_at": "2025-03-04T12:53:20.509750Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03034663200378418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_collateral_type.7d4e861773", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.501848Z", "completed_at": "2025-03-04T12:53:20.508614Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.511243Z", "completed_at": "2025-03-04T12:53:20.511250Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02352428436279297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_debt.e2d08dec52", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.493609Z", "completed_at": "2025-03-04T12:53:20.509152Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.512136Z", "completed_at": "2025-03-04T12:53:20.512146Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02719259262084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_collateral_value.34ddcc2ccb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.513733Z", "completed_at": "2025-03-04T12:53:20.522050Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.524393Z", "completed_at": "2025-03-04T12:53:20.524402Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01668858528137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_hourly_incentive_rewards_pct.672fad6dbf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_incentive_rewards_pct\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere hourly_incentive_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.525290Z", "completed_at": "2025-03-04T12:53:20.540694Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.542686Z", "completed_at": "2025-03-04T12:53:20.542697Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022802114486694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_hourly_issuance.b0e645a132", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.534749Z", "completed_at": "2025-03-04T12:53:20.542065Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.544816Z", "completed_at": "2025-03-04T12:53:20.544827Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02344679832458496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_hourly_pnl.6f321ca648", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.529887Z", "completed_at": "2025-03-04T12:53:20.543624Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.546345Z", "completed_at": "2025-03-04T12:53:20.546354Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02567577362060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_hourly_performance_pct.22d288a34b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_performance_pct\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere hourly_performance_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.547291Z", "completed_at": "2025-03-04T12:53:20.557415Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.563847Z", "completed_at": "2025-03-04T12:53:20.563862Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0226438045501709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_hourly_pnl_pct.43ef5d27cc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.559260Z", "completed_at": "2025-03-04T12:53:20.570918Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.576981Z", "completed_at": "2025-03-04T12:53:20.576991Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02235555648803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_hourly_rewards_pct.0d02b364b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.565532Z", "completed_at": "2025-03-04T12:53:20.577903Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.579950Z", "completed_at": "2025-03-04T12:53:20.579960Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02385878562927246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_hourly_total_pct.9656973b1c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_total_pct\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere hourly_total_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.571513Z", "completed_at": "2025-03-04T12:53:20.580857Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.587710Z", "completed_at": "2025-03-04T12:53:20.587720Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029783010482788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_liquidation_rewards_usd.d6fb46716b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidation_rewards_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere liquidation_rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.581447Z", "completed_at": "2025-03-04T12:53:20.589346Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.595883Z", "completed_at": "2025-03-04T12:53:20.595894Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019737958908081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_pool_id.7352d1abe5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.591222Z", "completed_at": "2025-03-04T12:53:20.598871Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.607580Z", "completed_at": "2025-03-04T12:53:20.607590Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.021408796310424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_rewards_usd.de69bca40d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.599447Z", "completed_at": "2025-03-04T12:53:20.614795Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.621011Z", "completed_at": "2025-03-04T12:53:20.621020Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031176090240478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_mainnet_ts.7c76badc22", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.608578Z", "completed_at": "2025-03-04T12:53:20.621909Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.624013Z", "completed_at": "2025-03-04T12:53:20.624021Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02675175666809082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_base_sepolia", "compiled": true, "compiled_code": "\n\nwith dim as (\n    select\n        p.pool_id,\n        p.collateral_type,\n        generate_series(\n            date_trunc('hour', min(t.ts)),\n            date_trunc('hour', max(t.ts)),\n            '1 hour'::INTERVAL\n        ) as ts\n    from\n        (\n            select ts\n            from\n                \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\n        ) as t\n    cross join (\n        select distinct\n            pool_id,\n            collateral_type\n        from\n            \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\n    ) as p\n    group by\n        p.pool_id,\n        p.collateral_type\n),\n\nissuance as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        hourly_issuance\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_issuance_hourly_base_sepolia\"\n),\n\ndebt as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(debt) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as debt\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_debt_base_sepolia\"\n),\n\ncollateral as (\n    select distinct\n        pool_id,\n        collateral_type,\n        date_trunc(\n            'hour',\n            ts\n        ) as ts,\n        last_value(collateral_value) over (\n            partition by date_trunc('hour', ts), pool_id, collateral_type\n            order by\n                ts\n            rows between unbounded preceding\n            and unbounded following\n        ) as collateral_value\n    from\n        \"analytics\".\"prod_raw_base_sepolia\".\"core_vault_collateral_base_sepolia\"\n    where\n        pool_id = 1\n),\n\nffill as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        coalesce(\n            last(debt) over (\n                partition by dim.collateral_type, dim.pool_id\n                order by dim.ts\n                rows between unbounded preceding and current row\n            ),\n            0\n        ) as debt,\n        coalesce(\n            last(collateral_value) over (\n                partition by dim.collateral_type, dim.pool_id\n                order by dim.ts\n                rows between unbounded preceding and current row\n            ),\n            0\n        ) as collateral_value\n    from\n        dim\n    left join debt\n        on\n            dim.ts = debt.ts\n            and dim.pool_id = debt.pool_id\n            and dim.collateral_type = debt.collateral_type\n    left join collateral\n        on\n            dim.ts = collateral.ts\n            and dim.pool_id = collateral.pool_id\n            and dim.collateral_type = collateral.collateral_type\n),\n\nhourly_pnl as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        coalesce(lag(debt) over (\n            partition by pool_id, collateral_type\n            order by\n                ts\n        ) - debt, 0) as hourly_pnl\n    from\n        ffill\n),\n\nhourly_rewards as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        rewards_usd\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_hourly_base_sepolia\"\n),\n\nhourly_returns as (\n    select\n        pnl.ts,\n        pnl.pool_id,\n        pnl.collateral_type,\n        pnl.collateral_value,\n        pnl.debt,\n        coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_issuance,\n        pnl.hourly_pnl + coalesce(\n            iss.hourly_issuance,\n            0\n        ) as hourly_pnl,\n        coalesce(\n            rewards.rewards_usd,\n            0\n        ) as rewards_usd,\n        case\n            when pnl.collateral_value = 0 then 0\n            else coalesce(\n                rewards.rewards_usd,\n                0\n            ) / pnl.collateral_value\n        end as hourly_rewards_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else\n                (coalesce(iss.hourly_issuance, 0) + pnl.hourly_pnl)\n                / pnl.collateral_value\n        end as hourly_pnl_pct,\n        case\n            when pnl.collateral_value = 0 then 0\n            else\n                (\n                    coalesce(rewards.rewards_usd, 0)\n                    + pnl.hourly_pnl\n                    + coalesce(iss.hourly_issuance, 0)\n                )\n                / pnl.collateral_value\n        end as hourly_total_pct\n    from\n        hourly_pnl as pnl\n    left join hourly_rewards as rewards\n        on\n            pnl.ts = rewards.ts\n            and pnl.pool_id = rewards.pool_id\n            and lower(pnl.collateral_type) = lower(rewards.collateral_type)\n    left join issuance as iss\n        on\n            pnl.ts = iss.ts\n            and pnl.pool_id = iss.pool_id\n            and lower(\n                pnl.collateral_type\n            ) = lower(\n                iss.collateral_type\n            )\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    hourly_total_pct\nfrom\n    hourly_returns", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.616222Z", "completed_at": "2025-03-04T12:53:20.624872Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.627391Z", "completed_at": "2025-03-04T12:53:20.627402Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020620107650756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_hourly_base_sepolia_pool_id__True__0.7fb80d19e2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.628729Z", "completed_at": "2025-03-04T12:53:20.641033Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.646837Z", "completed_at": "2025-03-04T12:53:20.646852Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024445295333862305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_rewards_hourly_base_sepolia_rewards_usd__True__0.a1e92ad42f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.635783Z", "completed_at": "2025-03-04T12:53:20.647724Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.649919Z", "completed_at": "2025-03-04T12:53:20.649928Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023916244506835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_base_sepolia_collateral_type.ca06f7aa20", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_hourly_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.642386Z", "completed_at": "2025-03-04T12:53:20.650791Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.659832Z", "completed_at": "2025-03-04T12:53:20.659843Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025649070739746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_base_sepolia_pool_id.9e81c4a855", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_hourly_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.651398Z", "completed_at": "2025-03-04T12:53:20.662057Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.668445Z", "completed_at": "2025-03-04T12:53:20.668479Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02697300910949707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_base_sepolia_rewards_usd.f98e64d589", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_hourly_base_sepolia\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.663318Z", "completed_at": "2025-03-04T12:53:20.674861Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.676923Z", "completed_at": "2025-03-04T12:53:20.676934Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01862311363220215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_rewards_hourly_base_sepolia_ts.521c0d428a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_hourly_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.670203Z", "completed_at": "2025-03-04T12:53:20.677767Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.684953Z", "completed_at": "2025-03-04T12:53:20.684966Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023650169372558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_rewards_eth_mainnet", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        collateral_value,\n        rewards_usd,\n        hourly_rewards_pct\n    from\n        \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_reward_eth_mainnet\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_rewards_pct\n    from\n        pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.reward_token,\n        pnl_hourly.collateral_value,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_rewards_pct,\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards\n    from\n        pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n            and pnl_hourly.reward_token = avg_returns.reward_token\n),\n\napy_calculations as (\n    select\n        *,\n        (POWER(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (POWER(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (POWER(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards\n    from\n        apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    reward_token,\n    collateral_value,\n    rewards_usd,\n    hourly_rewards_pct,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards\nfrom\n    apy_calculations\norder by\n    ts", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_rewards_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.678375Z", "completed_at": "2025-03-04T12:53:20.691795Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.694389Z", "completed_at": "2025-03-04T12:53:20.694402Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025109052658081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_eth_mainnet", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        hourly_pnl,\n        hourly_issuance,\n        hourly_debt_migrated,\n        rewards_usd,\n        hourly_pnl_pct,\n        hourly_rewards_pct,\n        hourly_total_pct,\n        hourly_rewards_pct as hourly_incentive_rewards_pct,\n        hourly_pnl_pct as hourly_performance_pct,\n        sum(coalesce(hourly_issuance, 0)) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_issuance,\n        sum(hourly_pnl) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_pnl,\n        sum(rewards_usd) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_rewards\n    from \"analytics\".\"prod_eth_mainnet\".\"fct_pool_pnl_hourly_eth_mainnet\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_pnl_pct,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_pnl_pct,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_pnl_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_rewards_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_rewards_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_rewards_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_total_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_total_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_total_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_incentive_rewards_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_incentive_rewards_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_incentive_rewards_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_performance_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_performance_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_performance_pct\n    from pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.collateral_value,\n        pnl_hourly.debt,\n        pnl_hourly.hourly_pnl,\n        pnl_hourly.cumulative_pnl,\n        pnl_hourly.cumulative_rewards,\n        pnl_hourly.hourly_issuance,\n        pnl_hourly.hourly_debt_migrated,\n        pnl_hourly.cumulative_issuance,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_pnl_pct,\n        pnl_hourly.hourly_rewards_pct,\n        -- total pnls\n        avg_returns.avg_24h_total_pct * 24 * 365 as apr_24h,\n        avg_returns.avg_7d_total_pct * 24 * 365 as apr_7d,\n        avg_returns.avg_28d_total_pct * 24 * 365 as apr_28d,\n        -- pool pnls\n        avg_returns.avg_24h_pnl_pct * 24 * 365 as apr_24h_pnl,\n        avg_returns.avg_7d_pnl_pct * 24 * 365 as apr_7d_pnl,\n        avg_returns.avg_28d_pnl_pct * 24 * 365 as apr_28d_pnl,\n        -- rewards pnls\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards,\n        -- incentive rewards pnls\n        avg_returns.avg_24h_incentive_rewards_pct\n        * 24\n        * 365 as apr_24h_incentive_rewards,\n        avg_returns.avg_7d_incentive_rewards_pct\n        * 24\n        * 365 as apr_7d_incentive_rewards,\n        avg_returns.avg_28d_incentive_rewards_pct\n        * 24\n        * 365 as apr_28d_incentive_rewards,\n        -- performance pnls\n        avg_returns.avg_24h_performance_pct * 24 * 365 as apr_24h_performance,\n        avg_returns.avg_7d_performance_pct * 24 * 365 as apr_7d_performance,\n        avg_returns.avg_28d_performance_pct * 24 * 365 as apr_28d_performance,\n        -- underlying yields\n        coalesce(yr.apr_24h_underlying, 0) as apr_24h_underlying,\n        coalesce(yr.apr_7d_underlying, 0) as apr_7d_underlying,\n        coalesce(yr.apr_28d_underlying, 0) as apr_28d_underlying\n    from pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n    left join \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\" as yr\n        on\n            pnl_hourly.ts = yr.ts\n            and pnl_hourly.pool_id = yr.pool_id\n            and pnl_hourly.collateral_type = yr.collateral_type\n),\n\napy_calculations as (\n    select\n        *,\n        (power(1 + apr_24h / 8760, 8760) - 1) as apy_24h,\n        (power(1 + apr_7d / 8760, 8760) - 1) as apy_7d,\n        (power(1 + apr_28d / 8760, 8760) - 1) as apy_28d,\n        (power(1 + apr_24h_pnl / 8760, 8760) - 1) as apy_24h_pnl,\n        (power(1 + apr_7d_pnl / 8760, 8760) - 1) as apy_7d_pnl,\n        (power(1 + apr_28d_pnl / 8760, 8760) - 1) as apy_28d_pnl,\n        (power(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (power(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (power(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards,\n        (\n            power(1 + apr_24h_incentive_rewards / 8760, 8760) - 1\n        ) as apy_24h_incentive_rewards,\n        (\n            power(1 + apr_7d_incentive_rewards / 8760, 8760) - 1\n        ) as apy_7d_incentive_rewards,\n        (\n            power(1 + apr_28d_incentive_rewards / 8760, 8760) - 1\n        ) as apy_28d_incentive_rewards,\n        (\n            power(1 + apr_24h_performance / 8760, 8760) - 1\n        ) as apy_24h_performance,\n        (power(1 + apr_7d_performance / 8760, 8760) - 1) as apy_7d_performance,\n        (\n            power(1 + apr_28d_performance / 8760, 8760) - 1\n        ) as apy_28d_performance,\n        (power(1 + apr_24h_underlying / 8760, 8760) - 1) as apy_24h_underlying,\n        (power(1 + apr_7d_underlying / 8760, 8760) - 1) as apy_7d_underlying,\n        (power(1 + apr_28d_underlying / 8760, 8760) - 1) as apy_28d_underlying\n    from apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_debt_migrated,\n    hourly_pnl,\n    cumulative_pnl,\n    cumulative_issuance,\n    cumulative_rewards,\n    rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    apr_24h,\n    apy_24h,\n    apr_7d,\n    apy_7d,\n    apr_28d,\n    apy_28d,\n    apr_24h_pnl,\n    apy_24h_pnl,\n    apr_7d_pnl,\n    apy_7d_pnl,\n    apr_28d_pnl,\n    apy_28d_pnl,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards,\n    apr_24h_incentive_rewards,\n    apy_24h_incentive_rewards,\n    apr_7d_incentive_rewards,\n    apy_7d_incentive_rewards,\n    apr_28d_incentive_rewards,\n    apy_28d_incentive_rewards,\n    apr_24h_performance,\n    apy_24h_performance,\n    apr_7d_performance,\n    apy_7d_performance,\n    apr_28d_performance,\n    apy_28d_performance,\n    apr_24h_underlying,\n    apy_24h_underlying,\n    apr_7d_underlying,\n    apy_7d_underlying,\n    apr_28d_underlying,\n    apy_28d_underlying\nfrom apy_calculations\norder by ts", "relation_name": "\"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.686652Z", "completed_at": "2025-03-04T12:53:20.697131Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.707540Z", "completed_at": "2025-03-04T12:53:20.707550Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03146195411682129, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_token_yields_eth_mainnet_pool_id__True__0.9c7381d1dc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.699705Z", "completed_at": "2025-03-04T12:53:20.714613Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.716663Z", "completed_at": "2025-03-04T12:53:20.716672Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024292707443237305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_eth_mainnet_apr_24h_underlying.6bae41fe83", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_24h_underlying\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\nwhere apr_24h_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.709278Z", "completed_at": "2025-03-04T12:53:20.717528Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.724098Z", "completed_at": "2025-03-04T12:53:20.724106Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027683019638061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_eth_mainnet_apr_28d_underlying.f23af72c02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_28d_underlying\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\nwhere apr_28d_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.718104Z", "completed_at": "2025-03-04T12:53:20.729551Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.731610Z", "completed_at": "2025-03-04T12:53:20.731619Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023244142532348633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_eth_mainnet_apr_7d_underlying.dc820afc6f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_7d_underlying\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\nwhere apr_7d_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.725130Z", "completed_at": "2025-03-04T12:53:20.732516Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.735007Z", "completed_at": "2025-03-04T12:53:20.735014Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019176483154296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_eth_mainnet_collateral_type.cd417131e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.735898Z", "completed_at": "2025-03-04T12:53:20.746983Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.749028Z", "completed_at": "2025-03-04T12:53:20.749039Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019015073776245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_eth_mainnet_exchange_rate.a508669212", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exchange_rate\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\nwhere exchange_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.742477Z", "completed_at": "2025-03-04T12:53:20.749939Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.758279Z", "completed_at": "2025-03-04T12:53:20.758291Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02471446990966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_eth_mainnet_hourly_exchange_rate_pnl.8798ca2c34", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_exchange_rate_pnl\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\nwhere hourly_exchange_rate_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.750525Z", "completed_at": "2025-03-04T12:53:20.764316Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.766435Z", "completed_at": "2025-03-04T12:53:20.766447Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025537729263305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_eth_mainnet_pool_id.c171eefa43", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.759360Z", "completed_at": "2025-03-04T12:53:20.767339Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.773996Z", "completed_at": "2025-03-04T12:53:20.774006Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025884389877319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_eth_mainnet_ts.b113b4ee36", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_token_yields_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.768605Z", "completed_at": "2025-03-04T12:53:20.776255Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.782485Z", "completed_at": "2025-03-04T12:53:20.782498Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01891160011291504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_reward_arbitrum_mainnet", "compiled": true, "compiled_code": "\n\nwith dim as (\n\n    select\n        t.ts,\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol as reward_token\n    from\n        (\n            select\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n            from\n                \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\n            group by\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n        ) as t\n    cross join (\n        select distinct token_symbol\n        from\n            \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\n    ) as p\n    group by\n        t.ts,\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol\n),\n\nreward_hourly_token as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol as reward_token,\n        SUM(\n            rewards_usd\n        ) as rewards_usd\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_rewards_token_hourly_arbitrum_mainnet\"\n    group by\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    dim.collateral_value,\n    dim.reward_token,\n    COALESCE(\n        reward_hourly_token.rewards_usd,\n        0\n    ) as rewards_usd,\n    case\n        when dim.collateral_value = 0 then 0\n        else COALESCE(\n            reward_hourly_token.rewards_usd,\n            0\n        ) / dim.collateral_value\n    end as hourly_rewards_pct\nfrom\n    dim\nleft join reward_hourly_token\n    on\n        dim.ts = reward_hourly_token.ts\n        and dim.pool_id = reward_hourly_token.pool_id\n        and LOWER(dim.collateral_type)\n        = LOWER(reward_hourly_token.collateral_type)\n        and dim.reward_token = reward_hourly_token.reward_token", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_reward_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.777568Z", "completed_at": "2025-03-04T12:53:20.789191Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.791494Z", "completed_at": "2025-03-04T12:53:20.791506Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023653268814086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_token_yields_arbitrum_mainnet", "compiled": true, "compiled_code": "with dim as (\n    select distinct\n        p.ts,\n        p.pool_id,\n        p.collateral_type,\n        t.token_symbol,\n        t.yield_token_symbol\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\n        as p\n    inner join\n        \"analytics\".\"prod_seeds\".\"arbitrum_mainnet_tokens\"\n        as t\n        on lower(p.collateral_type) = lower(t.token_address)\n    where\n        t.yield_token_symbol is not null\n),\n\ntoken_prices as (\n    select\n        dim.ts,\n        dim.pool_id,\n        dim.collateral_type,\n        dim.token_symbol,\n        dim.yield_token_symbol,\n        tp.price as token_price,\n        yp.price as yield_token_price,\n        tp.price / yp.price as exchange_rate\n    from\n        dim\n    inner join \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\" as tp\n        on\n            dim.token_symbol = tp.market_symbol\n            and dim.ts = tp.ts\n    inner join \"analytics\".\"prod_arbitrum_mainnet\".\"fct_prices_hourly_arbitrum_mainnet\" as yp\n        on\n            dim.yield_token_symbol = yp.market_symbol\n            and dim.ts = yp.ts\n),\n\nrate_changes as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        exchange_rate,\n        exchange_rate / lag(exchange_rate) over (\n            partition by token_symbol, yield_token_symbol\n            order by\n                ts\n        ) - 1 as hourly_exchange_rate_pnl\n    from\n        token_prices\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    exchange_rate,\n    hourly_exchange_rate_pnl,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '24 HOURS' preceding\n        and current row\n    ) * 24 * 365 as apr_24h_underlying,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '7 DAYS' preceding\n        and current row\n    ) * 24 * 365 as apr_7d_underlying,\n    avg(hourly_exchange_rate_pnl) over (\n        partition by collateral_type\n        order by\n            ts\n        range between interval '28 DAYS' preceding\n        and current row\n    ) * 24 * 365 as apr_28d_underlying\nfrom\n    rate_changes", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.784488Z", "completed_at": "2025-03-04T12:53:20.792418Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.799309Z", "completed_at": "2025-03-04T12:53:20.799321Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023803234100341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_mainnet_collateral_value__True__0.2e110c1268", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.793672Z", "completed_at": "2025-03-04T12:53:20.801899Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.811066Z", "completed_at": "2025-03-04T12:53:20.811079Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027609825134277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_mainnet_hourly_pnl_pct__True__1___1.5893ffde97", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct >= -1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.803160Z", "completed_at": "2025-03-04T12:53:20.819926Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.822058Z", "completed_at": "2025-03-04T12:53:20.822071Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029202938079833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_mainnet_hourly_rewards_pct__True__1__0.c0f135f71a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.812774Z", "completed_at": "2025-03-04T12:53:20.823089Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.830393Z", "completed_at": "2025-03-04T12:53:20.830404Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029278278350830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_mainnet_pool_id__True__0.82a420e70a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.824529Z", "completed_at": "2025-03-04T12:53:20.833416Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.841272Z", "completed_at": "2025-03-04T12:53:20.841282Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029377222061157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_mainnet_rewards_usd__True__0.636294733f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.834121Z", "completed_at": "2025-03-04T12:53:20.847495Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.854082Z", "completed_at": "2025-03-04T12:53:20.854092Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030367374420166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_collateral_type.5b16d63899", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.842287Z", "completed_at": "2025-03-04T12:53:20.853324Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.855811Z", "completed_at": "2025-03-04T12:53:20.855819Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023869037628173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_collateral_value.d293fcea90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.848951Z", "completed_at": "2025-03-04T12:53:20.856649Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.859192Z", "completed_at": "2025-03-04T12:53:20.859202Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018680572509765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_debt.9ac5b9bf5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.860781Z", "completed_at": "2025-03-04T12:53:20.870114Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.880147Z", "completed_at": "2025-03-04T12:53:20.880158Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025246143341064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_hourly_issuance.5511774a0b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.871326Z", "completed_at": "2025-03-04T12:53:20.882717Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.889710Z", "completed_at": "2025-03-04T12:53:20.889720Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029692888259887695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_hourly_pnl.678864f7b5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.875686Z", "completed_at": "2025-03-04T12:53:20.883426Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.890623Z", "completed_at": "2025-03-04T12:53:20.890631Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02328181266784668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_hourly_pnl_pct.860b962ff4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.884031Z", "completed_at": "2025-03-04T12:53:20.892828Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.899578Z", "completed_at": "2025-03-04T12:53:20.899586Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028975963592529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_hourly_rewards_pct.8068a50a34", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.894190Z", "completed_at": "2025-03-04T12:53:20.901817Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.908215Z", "completed_at": "2025-03-04T12:53:20.908225Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019401073455810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_hourly_total_pct.2ba37617f1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_total_pct\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere hourly_total_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.903675Z", "completed_at": "2025-03-04T12:53:20.918075Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.924764Z", "completed_at": "2025-03-04T12:53:20.924776Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026078224182128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_pool_id.e6c4e35168", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.909973Z", "completed_at": "2025-03-04T12:53:20.919579Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.926322Z", "completed_at": "2025-03-04T12:53:20.926330Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025998592376708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_rewards_usd.196b421cb3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.920125Z", "completed_at": "2025-03-04T12:53:20.932501Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.934737Z", "completed_at": "2025-03-04T12:53:20.934746Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025538921356201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_mainnet_ts.b23b3c4ccc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.928132Z", "completed_at": "2025-03-04T12:53:20.936274Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.938764Z", "completed_at": "2025-03-04T12:53:20.938771Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01998758316040039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_arbitrum_sepolia", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        hourly_pnl,\n        hourly_issuance,\n        rewards_usd,\n        hourly_pnl_pct,\n        hourly_rewards_pct,\n        hourly_total_pct,\n        SUM(\n            COALESCE(\n                hourly_issuance,\n                0\n            )\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n        ) as cumulative_issuance,\n        SUM(\n            hourly_pnl\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n        ) as cumulative_pnl\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        AVG(\n            hourly_pnl_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_pnl_pct,\n        AVG(\n            hourly_pnl_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_pnl_pct,\n        AVG(\n            hourly_pnl_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_pnl_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_rewards_pct,\n        AVG(\n            hourly_total_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_total_pct,\n        AVG(\n            hourly_total_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_total_pct,\n        AVG(\n            hourly_total_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_total_pct\n    from\n        pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.collateral_value,\n        pnl_hourly.debt,\n        pnl_hourly.hourly_pnl,\n        pnl_hourly.cumulative_pnl,\n        pnl_hourly.hourly_issuance,\n        pnl_hourly.cumulative_issuance,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_pnl_pct,\n        pnl_hourly.hourly_rewards_pct,\n        -- total pnls\n        avg_returns.avg_24h_total_pct * 24 * 365 as apr_24h,\n        avg_returns.avg_7d_total_pct * 24 * 365 as apr_7d,\n        avg_returns.avg_28d_total_pct * 24 * 365 as apr_28d,\n        -- pool pnls\n        avg_returns.avg_24h_pnl_pct * 24 * 365 as apr_24h_pnl,\n        avg_returns.avg_7d_pnl_pct * 24 * 365 as apr_7d_pnl,\n        avg_returns.avg_28d_pnl_pct * 24 * 365 as apr_28d_pnl,\n        -- rewards pnls\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards\n    from\n        pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n),\n\napy_calculations as (\n    select\n        *,\n        (POWER(1 + apr_24h / 8760, 8760) - 1) as apy_24h,\n        (POWER(1 + apr_7d / 8760, 8760) - 1) as apy_7d,\n        (POWER(1 + apr_28d / 8760, 8760) - 1) as apy_28d,\n        (POWER(1 + apr_24h_pnl / 8760, 8760) - 1) as apy_24h_pnl,\n        (POWER(1 + apr_7d_pnl / 8760, 8760) - 1) as apy_7d_pnl,\n        (POWER(1 + apr_28d_pnl / 8760, 8760) - 1) as apy_28d_pnl,\n        (POWER(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (POWER(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (POWER(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards\n    from\n        apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    cumulative_pnl,\n    cumulative_issuance,\n    rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    apr_24h,\n    apy_24h,\n    apr_7d,\n    apy_7d,\n    apr_28d,\n    apy_28d,\n    apr_24h_pnl,\n    apy_24h_pnl,\n    apr_7d_pnl,\n    apy_7d_pnl,\n    apr_28d_pnl,\n    apy_28d_pnl,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards\nfrom\n    apy_calculations\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.939634Z", "completed_at": "2025-03-04T12:53:20.952173Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.960825Z", "completed_at": "2025-03-04T12:53:20.960837Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02700018882751465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_reward_arbitrum_sepolia", "compiled": true, "compiled_code": "\n\nwith dim as (\n\n    select\n        t.ts,\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol as reward_token\n    from\n        (\n            select\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n            from\n                \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\n            group by\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n        ) as t\n    cross join (\n        select distinct token_symbol\n        from\n            \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\n    ) as p\n    group by\n        t.ts,\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol\n),\n\nreward_hourly_token as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol as reward_token,\n        SUM(\n            rewards_usd\n        ) as rewards_usd\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_rewards_token_hourly_arbitrum_sepolia\"\n    group by\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    dim.collateral_value,\n    dim.reward_token,\n    COALESCE(\n        reward_hourly_token.rewards_usd,\n        0\n    ) as rewards_usd,\n    case\n        when dim.collateral_value = 0 then 0\n        else COALESCE(\n            reward_hourly_token.rewards_usd,\n            0\n        ) / dim.collateral_value\n    end as hourly_rewards_pct\nfrom\n    dim\nleft join reward_hourly_token\n    on\n        dim.ts = reward_hourly_token.ts\n        and dim.pool_id = reward_hourly_token.pool_id\n        and LOWER(dim.collateral_type)\n        = LOWER(reward_hourly_token.collateral_type)\n        and dim.reward_token = reward_hourly_token.reward_token", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_reward_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.945094Z", "completed_at": "2025-03-04T12:53:20.953579Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.962357Z", "completed_at": "2025-03-04T12:53:20.962364Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026805877685546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_sepolia_collateral_value__True__0.8f44ccf6a8", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.954133Z", "completed_at": "2025-03-04T12:53:20.969749Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.971865Z", "completed_at": "2025-03-04T12:53:20.971874Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027561187744140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_sepolia_hourly_pnl_pct__True__1___1.758a1bd318", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct >= -1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.964092Z", "completed_at": "2025-03-04T12:53:20.972714Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.975158Z", "completed_at": "2025-03-04T12:53:20.975168Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022388219833374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_sepolia_hourly_rewards_pct__True__1__0.155d04b096", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.976076Z", "completed_at": "2025-03-04T12:53:20.989221Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.995620Z", "completed_at": "2025-03-04T12:53:20.995635Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025377511978149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_sepolia_pool_id__True__0.2553f9acd9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.981089Z", "completed_at": "2025-03-04T12:53:20.994974Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:20.997375Z", "completed_at": "2025-03-04T12:53:20.997383Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026343584060668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_arbitrum_sepolia_rewards_usd__True__0.c70c3ef6d1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.990572Z", "completed_at": "2025-03-04T12:53:20.998308Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.004873Z", "completed_at": "2025-03-04T12:53:21.004882Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018121719360351562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_collateral_type.ad28430a8b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:20.999596Z", "completed_at": "2025-03-04T12:53:21.007824Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.010319Z", "completed_at": "2025-03-04T12:53:21.010330Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020566225051879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_collateral_value.4feda18e6e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.011203Z", "completed_at": "2025-03-04T12:53:21.024056Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.030319Z", "completed_at": "2025-03-04T12:53:21.030330Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024657249450683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_debt.064b4f1aa0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.017972Z", "completed_at": "2025-03-04T12:53:21.029053Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.031341Z", "completed_at": "2025-03-04T12:53:21.031348Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02491164207458496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_hourly_issuance.98a21247a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.024638Z", "completed_at": "2025-03-04T12:53:21.032842Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.039503Z", "completed_at": "2025-03-04T12:53:21.039515Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029946088790893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_hourly_pnl.71c511680d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.034820Z", "completed_at": "2025-03-04T12:53:21.043339Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.050029Z", "completed_at": "2025-03-04T12:53:21.050040Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020501136779785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_hourly_pnl_pct.cfa91548b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.045163Z", "completed_at": "2025-03-04T12:53:21.057182Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.066000Z", "completed_at": "2025-03-04T12:53:21.066011Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025509357452392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_hourly_rewards_pct.85b61a0a46", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.050941Z", "completed_at": "2025-03-04T12:53:21.064564Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.067047Z", "completed_at": "2025-03-04T12:53:21.067055Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025920629501342773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_hourly_total_pct.57d5efdf83", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_total_pct\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere hourly_total_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.057921Z", "completed_at": "2025-03-04T12:53:21.068581Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.075066Z", "completed_at": "2025-03-04T12:53:21.075075Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03065204620361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_pool_id.aa93d2af52", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.070514Z", "completed_at": "2025-03-04T12:53:21.078767Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.091087Z", "completed_at": "2025-03-04T12:53:21.091099Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026026487350463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_rewards_usd.de45431bfe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.080672Z", "completed_at": "2025-03-04T12:53:21.104266Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.117215Z", "completed_at": "2025-03-04T12:53:21.117226Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04124879837036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_arbitrum_sepolia_ts.a70d2ff18c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.093371Z", "completed_at": "2025-03-04T12:53:21.116610Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.118878Z", "completed_at": "2025-03-04T12:53:21.118886Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04225492477416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_rewards_base_mainnet", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        collateral_value,\n        rewards_usd,\n        hourly_rewards_pct\n    from\n        \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_reward_base_mainnet\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_rewards_pct\n    from\n        pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.reward_token,\n        pnl_hourly.collateral_value,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_rewards_pct,\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards\n    from\n        pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n            and pnl_hourly.reward_token = avg_returns.reward_token\n),\n\napy_calculations as (\n    select\n        *,\n        (POWER(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (POWER(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (POWER(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards\n    from\n        apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    reward_token,\n    collateral_value,\n    rewards_usd,\n    hourly_rewards_pct,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards\nfrom\n    apy_calculations\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_apr_rewards_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.105523Z", "completed_at": "2025-03-04T12:53:21.119806Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.126731Z", "completed_at": "2025-03-04T12:53:21.126739Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.046826839447021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_base_mainnet", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        hourly_pnl,\n        hourly_issuance,\n        rewards_usd,\n        liquidation_rewards_usd,\n        hourly_pnl_pct,\n        hourly_incentive_rewards_pct,\n        hourly_performance_pct,\n        hourly_rewards_pct,\n        hourly_total_pct,\n        sum(coalesce(hourly_issuance, 0)) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_issuance,\n        sum(hourly_pnl) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_pnl,\n        sum(liquidation_rewards_usd) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_liquidation_rewards,\n        sum(rewards_usd) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_rewards\n    from \"analytics\".\"prod_base_mainnet\".\"fct_pool_pnl_hourly_base_mainnet\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_pnl_pct,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_pnl_pct,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_pnl_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_rewards_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_rewards_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_rewards_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_total_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_total_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_total_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_incentive_rewards_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_incentive_rewards_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_incentive_rewards_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_performance_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_performance_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_performance_pct\n    from pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.collateral_value,\n        pnl_hourly.debt,\n        pnl_hourly.hourly_pnl,\n        pnl_hourly.cumulative_pnl,\n        pnl_hourly.cumulative_liquidation_rewards,\n        pnl_hourly.cumulative_rewards,\n        pnl_hourly.hourly_issuance,\n        pnl_hourly.cumulative_issuance,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.liquidation_rewards_usd,\n        pnl_hourly.hourly_pnl_pct,\n        pnl_hourly.hourly_rewards_pct,\n        -- total pnls\n        avg_returns.avg_24h_total_pct * 24 * 365 as apr_24h,\n        avg_returns.avg_7d_total_pct * 24 * 365 as apr_7d,\n        avg_returns.avg_28d_total_pct * 24 * 365 as apr_28d,\n        -- pool pnls\n        avg_returns.avg_24h_pnl_pct * 24 * 365 as apr_24h_pnl,\n        avg_returns.avg_7d_pnl_pct * 24 * 365 as apr_7d_pnl,\n        avg_returns.avg_28d_pnl_pct * 24 * 365 as apr_28d_pnl,\n        -- rewards pnls\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards,\n        -- incentive rewards pnls\n        avg_returns.avg_24h_incentive_rewards_pct\n        * 24\n        * 365 as apr_24h_incentive_rewards,\n        avg_returns.avg_7d_incentive_rewards_pct\n        * 24\n        * 365 as apr_7d_incentive_rewards,\n        avg_returns.avg_28d_incentive_rewards_pct\n        * 24\n        * 365 as apr_28d_incentive_rewards,\n        -- performance pnls\n        avg_returns.avg_24h_performance_pct * 24 * 365 as apr_24h_performance,\n        avg_returns.avg_7d_performance_pct * 24 * 365 as apr_7d_performance,\n        avg_returns.avg_28d_performance_pct * 24 * 365 as apr_28d_performance,\n        -- underlying yields\n        coalesce(yr.apr_24h_underlying, 0) as apr_24h_underlying,\n        coalesce(yr.apr_7d_underlying, 0) as apr_7d_underlying,\n        coalesce(yr.apr_28d_underlying, 0) as apr_28d_underlying\n    from pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n    left join \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\" as yr\n        on\n            pnl_hourly.ts = yr.ts\n            and pnl_hourly.pool_id = yr.pool_id\n            and pnl_hourly.collateral_type = yr.collateral_type\n),\n\napy_calculations as (\n    select\n        *,\n        (power(1 + apr_24h / 8760, 8760) - 1) as apy_24h,\n        (power(1 + apr_7d / 8760, 8760) - 1) as apy_7d,\n        (power(1 + apr_28d / 8760, 8760) - 1) as apy_28d,\n        (power(1 + apr_24h_pnl / 8760, 8760) - 1) as apy_24h_pnl,\n        (power(1 + apr_7d_pnl / 8760, 8760) - 1) as apy_7d_pnl,\n        (power(1 + apr_28d_pnl / 8760, 8760) - 1) as apy_28d_pnl,\n        (power(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (power(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (power(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards,\n        (\n            power(1 + apr_24h_incentive_rewards / 8760, 8760) - 1\n        ) as apy_24h_incentive_rewards,\n        (\n            power(1 + apr_7d_incentive_rewards / 8760, 8760) - 1\n        ) as apy_7d_incentive_rewards,\n        (\n            power(1 + apr_28d_incentive_rewards / 8760, 8760) - 1\n        ) as apy_28d_incentive_rewards,\n        (\n            power(1 + apr_24h_performance / 8760, 8760) - 1\n        ) as apy_24h_performance,\n        (power(1 + apr_7d_performance / 8760, 8760) - 1) as apy_7d_performance,\n        (\n            power(1 + apr_28d_performance / 8760, 8760) - 1\n        ) as apy_28d_performance,\n        (power(1 + apr_24h_underlying / 8760, 8760) - 1) as apy_24h_underlying,\n        (power(1 + apr_7d_underlying / 8760, 8760) - 1) as apy_7d_underlying,\n        (power(1 + apr_28d_underlying / 8760, 8760) - 1) as apy_28d_underlying\n    from apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    cumulative_pnl,\n    cumulative_liquidation_rewards,\n    cumulative_issuance,\n    cumulative_rewards,\n    rewards_usd,\n    liquidation_rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    apr_24h,\n    apy_24h,\n    apr_7d,\n    apy_7d,\n    apr_28d,\n    apy_28d,\n    apr_24h_pnl,\n    apy_24h_pnl,\n    apr_7d_pnl,\n    apy_7d_pnl,\n    apr_28d_pnl,\n    apy_28d_pnl,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards,\n    apr_24h_incentive_rewards,\n    apy_24h_incentive_rewards,\n    apr_7d_incentive_rewards,\n    apy_7d_incentive_rewards,\n    apr_28d_incentive_rewards,\n    apy_28d_incentive_rewards,\n    apr_24h_performance,\n    apy_24h_performance,\n    apr_7d_performance,\n    apy_7d_performance,\n    apr_28d_performance,\n    apy_28d_performance,\n    apr_24h_underlying,\n    apy_24h_underlying,\n    apr_7d_underlying,\n    apy_7d_underlying,\n    apr_28d_underlying,\n    apy_28d_underlying\nfrom apy_calculations\norder by ts", "relation_name": "\"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.121054Z", "completed_at": "2025-03-04T12:53:21.129058Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.132143Z", "completed_at": "2025-03-04T12:53:21.132151Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016733407974243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_token_yields_base_mainnet_pool_id__True__0.6f215eb4c9", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.140510Z", "completed_at": "2025-03-04T12:53:21.147241Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.153656Z", "completed_at": "2025-03-04T12:53:21.153666Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025386333465576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_base_mainnet_apr_28d_underlying.bceab337bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_28d_underlying\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\nwhere apr_28d_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.133659Z", "completed_at": "2025-03-04T12:53:21.147830Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.154651Z", "completed_at": "2025-03-04T12:53:21.154659Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02708888053894043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_base_mainnet_apr_24h_underlying.aa98e6206d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_24h_underlying\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\nwhere apr_24h_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.148427Z", "completed_at": "2025-03-04T12:53:21.160977Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.163611Z", "completed_at": "2025-03-04T12:53:21.163619Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030696392059326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_base_mainnet_apr_7d_underlying.cb64e996fd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_7d_underlying\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\nwhere apr_7d_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.155629Z", "completed_at": "2025-03-04T12:53:21.163004Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.165695Z", "completed_at": "2025-03-04T12:53:21.165703Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01925182342529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_base_mainnet_collateral_type.f17c8c1c4b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.167821Z", "completed_at": "2025-03-04T12:53:21.179653Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.187600Z", "completed_at": "2025-03-04T12:53:21.187611Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02538156509399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_base_mainnet_exchange_rate.323b042c68", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exchange_rate\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\nwhere exchange_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.173802Z", "completed_at": "2025-03-04T12:53:21.188492Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.194999Z", "completed_at": "2025-03-04T12:53:21.195011Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030652284622192383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_base_mainnet_hourly_exchange_rate_pnl.91d1a05376", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_exchange_rate_pnl\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\nwhere hourly_exchange_rate_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.180974Z", "completed_at": "2025-03-04T12:53:21.194309Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.197281Z", "completed_at": "2025-03-04T12:53:21.197288Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02425384521484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_base_mainnet_pool_id.f680c571d0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.189167Z", "completed_at": "2025-03-04T12:53:21.196707Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.199434Z", "completed_at": "2025-03-04T12:53:21.199442Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02125096321105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_base_mainnet_ts.006d253f55", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_token_yields_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.201636Z", "completed_at": "2025-03-04T12:53:21.209378Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.220062Z", "completed_at": "2025-03-04T12:53:21.220073Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024144887924194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_base_sepolia", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        hourly_pnl,\n        hourly_issuance,\n        rewards_usd,\n        hourly_pnl_pct,\n        hourly_rewards_pct,\n        hourly_total_pct,\n        SUM(\n            COALESCE(\n                hourly_issuance,\n                0\n            )\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n        ) as cumulative_issuance,\n        SUM(\n            hourly_pnl\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n        ) as cumulative_pnl\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        AVG(\n            hourly_pnl_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_pnl_pct,\n        AVG(\n            hourly_pnl_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_pnl_pct,\n        AVG(\n            hourly_pnl_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_pnl_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_rewards_pct,\n        AVG(\n            hourly_total_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_total_pct,\n        AVG(\n            hourly_total_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_total_pct,\n        AVG(\n            hourly_total_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_total_pct\n    from\n        pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.collateral_value,\n        pnl_hourly.debt,\n        pnl_hourly.hourly_pnl,\n        pnl_hourly.cumulative_pnl,\n        pnl_hourly.hourly_issuance,\n        pnl_hourly.cumulative_issuance,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_pnl_pct,\n        pnl_hourly.hourly_rewards_pct,\n        -- total pnls\n        avg_returns.avg_24h_total_pct * 24 * 365 as apr_24h,\n        avg_returns.avg_7d_total_pct * 24 * 365 as apr_7d,\n        avg_returns.avg_28d_total_pct * 24 * 365 as apr_28d,\n        -- pool pnls\n        avg_returns.avg_24h_pnl_pct * 24 * 365 as apr_24h_pnl,\n        avg_returns.avg_7d_pnl_pct * 24 * 365 as apr_7d_pnl,\n        avg_returns.avg_28d_pnl_pct * 24 * 365 as apr_28d_pnl,\n        -- rewards pnls\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards\n    from\n        pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n),\n\napy_calculations as (\n    select\n        *,\n        (POWER(1 + apr_24h / 8760, 8760) - 1) as apy_24h,\n        (POWER(1 + apr_7d / 8760, 8760) - 1) as apy_7d,\n        (POWER(1 + apr_28d / 8760, 8760) - 1) as apy_28d,\n        (POWER(1 + apr_24h_pnl / 8760, 8760) - 1) as apy_24h_pnl,\n        (POWER(1 + apr_7d_pnl / 8760, 8760) - 1) as apy_7d_pnl,\n        (POWER(1 + apr_28d_pnl / 8760, 8760) - 1) as apy_28d_pnl,\n        (POWER(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (POWER(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (POWER(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards\n    from\n        apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    cumulative_pnl,\n    cumulative_issuance,\n    rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    apr_24h,\n    apy_24h,\n    apr_7d,\n    apy_7d,\n    apr_28d,\n    apy_28d,\n    apr_24h_pnl,\n    apy_24h_pnl,\n    apr_7d_pnl,\n    apy_7d_pnl,\n    apr_28d_pnl,\n    apy_28d_pnl,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards\nfrom\n    apy_calculations\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.209991Z", "completed_at": "2025-03-04T12:53:21.225784Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.228547Z", "completed_at": "2025-03-04T12:53:21.228556Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027672529220581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_pool_pnl_hourly_reward_base_sepolia", "compiled": true, "compiled_code": "\n\nwith dim as (\n\n    select\n        t.ts,\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol as reward_token\n    from\n        (\n            select\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n            from\n                \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\n            group by\n                ts,\n                collateral_type,\n                pool_id,\n                collateral_value\n        ) as t\n    cross join (\n        select distinct token_symbol\n        from\n            \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\n    ) as p\n    group by\n        t.ts,\n        t.pool_id,\n        t.collateral_type,\n        t.collateral_value,\n        p.token_symbol\n),\n\nreward_hourly_token as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol as reward_token,\n        SUM(\n            rewards_usd\n        ) as rewards_usd\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_rewards_token_hourly_base_sepolia\"\n    group by\n        ts,\n        pool_id,\n        collateral_type,\n        token_symbol\n)\n\nselect\n    dim.ts,\n    dim.pool_id,\n    dim.collateral_type,\n    dim.collateral_value,\n    dim.reward_token,\n    COALESCE(\n        reward_hourly_token.rewards_usd,\n        0\n    ) as rewards_usd,\n    case\n        when dim.collateral_value = 0 then 0\n        else COALESCE(\n            reward_hourly_token.rewards_usd,\n            0\n        ) / dim.collateral_value\n    end as hourly_rewards_pct\nfrom\n    dim\nleft join reward_hourly_token\n    on\n        dim.ts = reward_hourly_token.ts\n        and dim.pool_id = reward_hourly_token.pool_id\n        and LOWER(dim.collateral_type)\n        = LOWER(reward_hourly_token.collateral_type)\n        and dim.reward_token = reward_hourly_token.reward_token", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_reward_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.215217Z", "completed_at": "2025-03-04T12:53:21.227227Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.230714Z", "completed_at": "2025-03-04T12:53:21.230722Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024022340774536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_sepolia_collateral_value__True__0.4f1a814d7b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.221128Z", "completed_at": "2025-03-04T12:53:21.230128Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.232938Z", "completed_at": "2025-03-04T12:53:21.232946Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02489948272705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_sepolia_hourly_rewards_pct__True__1__0.3ae208ff52", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.237401Z", "completed_at": "2025-03-04T12:53:21.250434Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.256216Z", "completed_at": "2025-03-04T12:53:21.256228Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02685856819152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_sepolia_pool_id__True__0.05c766378f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.245785Z", "completed_at": "2025-03-04T12:53:21.257179Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.263877Z", "completed_at": "2025-03-04T12:53:21.263889Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02958393096923828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_pool_pnl_hourly_base_sepolia_rewards_usd__True__0.9baf8da1f5", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.251761Z", "completed_at": "2025-03-04T12:53:21.263260Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.265631Z", "completed_at": "2025-03-04T12:53:21.265639Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022606611251831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_collateral_type.1eca6afa4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.257821Z", "completed_at": "2025-03-04T12:53:21.266445Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.269017Z", "completed_at": "2025-03-04T12:53:21.269028Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02466106414794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_collateral_value.02a125e570", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.270573Z", "completed_at": "2025-03-04T12:53:21.277888Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.289936Z", "completed_at": "2025-03-04T12:53:21.289949Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025150537490844727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_debt.27270b83bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.279099Z", "completed_at": "2025-03-04T12:53:21.292477Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.299110Z", "completed_at": "2025-03-04T12:53:21.299121Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.029296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_hourly_issuance.64beeb7093", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.285625Z", "completed_at": "2025-03-04T12:53:21.293155Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.300188Z", "completed_at": "2025-03-04T12:53:21.300197Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025180339813232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_hourly_pnl.1b2d20f29b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.293753Z", "completed_at": "2025-03-04T12:53:21.301846Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.308639Z", "completed_at": "2025-03-04T12:53:21.308650Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030287504196166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_hourly_pnl_pct.5e738de9f7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.303810Z", "completed_at": "2025-03-04T12:53:21.312228Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.318690Z", "completed_at": "2025-03-04T12:53:21.318704Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02053976058959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_hourly_rewards_pct.d3c5df3f72", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.314054Z", "completed_at": "2025-03-04T12:53:21.326049Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.334657Z", "completed_at": "2025-03-04T12:53:21.334670Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025231122970581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_hourly_total_pct.32d5d04358", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_total_pct\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere hourly_total_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.319822Z", "completed_at": "2025-03-04T12:53:21.334058Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.336312Z", "completed_at": "2025-03-04T12:53:21.336320Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026236534118652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_pool_id.c9853b1694", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.326738Z", "completed_at": "2025-03-04T12:53:21.337843Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.344580Z", "completed_at": "2025-03-04T12:53:21.344589Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03127717971801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_rewards_usd.3d8b12547d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.338514Z", "completed_at": "2025-03-04T12:53:21.346853Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.353640Z", "completed_at": "2025-03-04T12:53:21.353651Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020461320877075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_pool_pnl_hourly_base_sepolia_ts.5acc26229f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.348724Z", "completed_at": "2025-03-04T12:53:21.360891Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.362984Z", "completed_at": "2025-03-04T12:53:21.362995Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019268512725830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_eth_mainnet_collateral_value__True__0.b44f8cd90f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.355271Z", "completed_at": "2025-03-04T12:53:21.363836Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.370763Z", "completed_at": "2025-03-04T12:53:21.370771Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025272607803344727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_eth_mainnet_hourly_pnl_pct__True__1___1.573c85fbab", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct >= -1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.364428Z", "completed_at": "2025-03-04T12:53:21.377370Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.379438Z", "completed_at": "2025-03-04T12:53:21.379448Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024923086166381836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_eth_mainnet_hourly_rewards_pct__True__1__0.a383e39737", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.371798Z", "completed_at": "2025-03-04T12:53:21.380276Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.389706Z", "completed_at": "2025-03-04T12:53:21.389719Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02756953239440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_eth_mainnet_pool_id__True__0.2e06d77a8b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.381535Z", "completed_at": "2025-03-04T12:53:21.392757Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.399559Z", "completed_at": "2025-03-04T12:53:21.399569Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023039817810058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_eth_mainnet_rewards_usd__True__0.0ccd0edcb4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.393355Z", "completed_at": "2025-03-04T12:53:21.405244Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.407561Z", "completed_at": "2025-03-04T12:53:21.407571Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026793241500854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_apr_24h.1e94a76b1e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_24h\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere apr_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.400566Z", "completed_at": "2025-03-04T12:53:21.408415Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.415198Z", "completed_at": "2025-03-04T12:53:21.415210Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02394580841064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_apr_28d.8dfb1e005a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_28d\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere apr_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.409028Z", "completed_at": "2025-03-04T12:53:21.418089Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.424949Z", "completed_at": "2025-03-04T12:53:21.424959Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026173114776611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_apr_7d.35bc5cfb13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_7d\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere apr_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.418765Z", "completed_at": "2025-03-04T12:53:21.431396Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.439589Z", "completed_at": "2025-03-04T12:53:21.439601Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026059389114379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_apy_24h.b52a8fd842", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_24h\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere apy_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.425980Z", "completed_at": "2025-03-04T12:53:21.440481Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.442640Z", "completed_at": "2025-03-04T12:53:21.442650Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025897502899169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_apy_28d.053e0eda01", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_28d\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere apy_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.432866Z", "completed_at": "2025-03-04T12:53:21.443480Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.445987Z", "completed_at": "2025-03-04T12:53:21.445995Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02181720733642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_apy_7d.08d703cbb6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_7d\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere apy_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.446871Z", "completed_at": "2025-03-04T12:53:21.459013Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.465580Z", "completed_at": "2025-03-04T12:53:21.465591Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024618148803710938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_collateral_type.0bc0302d7e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.453697Z", "completed_at": "2025-03-04T12:53:21.464849Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.467180Z", "completed_at": "2025-03-04T12:53:21.467187Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022622108459472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_collateral_value.14594eca47", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.460450Z", "completed_at": "2025-03-04T12:53:21.468063Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.474617Z", "completed_at": "2025-03-04T12:53:21.474626Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022496700286865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_cumulative_issuance.ab1f8da889", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_issuance\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere cumulative_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.469314Z", "completed_at": "2025-03-04T12:53:21.477660Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.480096Z", "completed_at": "2025-03-04T12:53:21.480106Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020501375198364258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_cumulative_pnl.4a739c13a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_pnl\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere cumulative_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.485703Z", "completed_at": "2025-03-04T12:53:21.728560Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.730633Z", "completed_at": "2025-03-04T12:53:21.730647Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.25438761711120605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_debt.14b9039622", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.480997Z", "completed_at": "2025-03-04T12:53:21.729142Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.731612Z", "completed_at": "2025-03-04T12:53:21.731623Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2561361789703369, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_cumulative_rewards.7a9b9c1725", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_rewards\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere cumulative_rewards is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.493912Z", "completed_at": "2025-03-04T12:53:21.732439Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.735067Z", "completed_at": "2025-03-04T12:53:21.735076Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2557089328765869, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_hourly_debt_migrated.1606ded24b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_debt_migrated\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere hourly_debt_migrated is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.735958Z", "completed_at": "2025-03-04T12:53:21.745251Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.756192Z", "completed_at": "2025-03-04T12:53:21.756204Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026578903198242188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_hourly_issuance.d21fe7e33b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.745880Z", "completed_at": "2025-03-04T12:53:21.762962Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.765126Z", "completed_at": "2025-03-04T12:53:21.765138Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024147748947143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_hourly_pnl.6570b2bdb2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.750872Z", "completed_at": "2025-03-04T12:53:21.763719Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.766615Z", "completed_at": "2025-03-04T12:53:21.766622Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024814844131469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_hourly_pnl_pct.b582b1f1e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.757424Z", "completed_at": "2025-03-04T12:53:21.766018Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.768742Z", "completed_at": "2025-03-04T12:53:21.768750Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0241696834564209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_hourly_rewards_pct.284fa06b64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.770232Z", "completed_at": "2025-03-04T12:53:21.780766Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.791005Z", "completed_at": "2025-03-04T12:53:21.791018Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02675795555114746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_pool_id.c5e20f437d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.781346Z", "completed_at": "2025-03-04T12:53:21.797080Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.799179Z", "completed_at": "2025-03-04T12:53:21.799191Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02250361442565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_rewards_usd.e91f21e2d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.786650Z", "completed_at": "2025-03-04T12:53:21.797784Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.800647Z", "completed_at": "2025-03-04T12:53:21.800654Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022540807723999023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_eth_mainnet_ts.99cae9616f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_eth_mainnet\".\"fct_core_apr_eth_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.792239Z", "completed_at": "2025-03-04T12:53:21.800035Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.802746Z", "completed_at": "2025-03-04T12:53:21.802754Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023286104202270508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_rewards_arbitrum_mainnet", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        collateral_value,\n        rewards_usd,\n        hourly_rewards_pct\n    from\n        \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_reward_arbitrum_mainnet\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_rewards_pct\n    from\n        pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.reward_token,\n        pnl_hourly.collateral_value,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_rewards_pct,\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards\n    from\n        pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n            and pnl_hourly.reward_token = avg_returns.reward_token\n),\n\napy_calculations as (\n    select\n        *,\n        (POWER(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (POWER(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (POWER(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards\n    from\n        apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    reward_token,\n    collateral_value,\n    rewards_usd,\n    hourly_rewards_pct,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards\nfrom\n    apy_calculations\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_rewards_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.804264Z", "completed_at": "2025-03-04T12:53:21.812316Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.819028Z", "completed_at": "2025-03-04T12:53:21.819046Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02069854736328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_arbitrum_mainnet", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        collateral_value,\n        debt,\n        hourly_pnl,\n        hourly_issuance,\n        rewards_usd,\n        hourly_pnl_pct,\n        hourly_rewards_pct,\n        hourly_total_pct,\n        hourly_rewards_pct as hourly_incentive_rewards_pct,\n        hourly_pnl_pct as hourly_performance_pct,\n        sum(coalesce(hourly_issuance, 0)) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_issuance,\n        sum(hourly_pnl) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_pnl,\n        sum(rewards_usd) over (\n            partition by pool_id, collateral_type\n            order by ts\n        ) as cumulative_rewards\n    from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_pool_pnl_hourly_arbitrum_mainnet\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_pnl_pct,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_pnl_pct,\n        avg(hourly_pnl_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_pnl_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_rewards_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_rewards_pct,\n        avg(hourly_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_rewards_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_total_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_total_pct,\n        avg(hourly_total_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_total_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_incentive_rewards_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_incentive_rewards_pct,\n        avg(hourly_incentive_rewards_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_incentive_rewards_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '24 HOURS' preceding and current row\n        ) as avg_24h_performance_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '7 DAYS' preceding and current row\n        ) as avg_7d_performance_pct,\n        avg(hourly_performance_pct) over (\n            partition by pool_id, collateral_type\n            order by ts\n            range between interval '28 DAYS' preceding and current row\n        ) as avg_28d_performance_pct\n    from pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.collateral_value,\n        pnl_hourly.debt,\n        pnl_hourly.hourly_pnl,\n        pnl_hourly.cumulative_pnl,\n        pnl_hourly.cumulative_rewards,\n        pnl_hourly.hourly_issuance,\n        pnl_hourly.cumulative_issuance,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_pnl_pct,\n        pnl_hourly.hourly_rewards_pct,\n        -- total pnls\n        avg_returns.avg_24h_total_pct * 24 * 365 as apr_24h,\n        avg_returns.avg_7d_total_pct * 24 * 365 as apr_7d,\n        avg_returns.avg_28d_total_pct * 24 * 365 as apr_28d,\n        -- pool pnls\n        avg_returns.avg_24h_pnl_pct * 24 * 365 as apr_24h_pnl,\n        avg_returns.avg_7d_pnl_pct * 24 * 365 as apr_7d_pnl,\n        avg_returns.avg_28d_pnl_pct * 24 * 365 as apr_28d_pnl,\n        -- rewards pnls\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards,\n        -- incentive rewards pnls\n        avg_returns.avg_24h_incentive_rewards_pct\n        * 24\n        * 365 as apr_24h_incentive_rewards,\n        avg_returns.avg_7d_incentive_rewards_pct\n        * 24\n        * 365 as apr_7d_incentive_rewards,\n        avg_returns.avg_28d_incentive_rewards_pct\n        * 24\n        * 365 as apr_28d_incentive_rewards,\n        -- performance pnls\n        avg_returns.avg_24h_performance_pct * 24 * 365 as apr_24h_performance,\n        avg_returns.avg_7d_performance_pct * 24 * 365 as apr_7d_performance,\n        avg_returns.avg_28d_performance_pct * 24 * 365 as apr_28d_performance,\n        -- underlying yields\n        coalesce(yr.apr_24h_underlying, 0) as apr_24h_underlying,\n        coalesce(yr.apr_7d_underlying, 0) as apr_7d_underlying,\n        coalesce(yr.apr_28d_underlying, 0) as apr_28d_underlying\n    from pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n    left join \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\" as yr\n        on\n            pnl_hourly.ts = yr.ts\n            and pnl_hourly.pool_id = yr.pool_id\n            and pnl_hourly.collateral_type = yr.collateral_type\n),\n\napy_calculations as (\n    select\n        *,\n        (power(1 + apr_24h / 8760, 8760) - 1) as apy_24h,\n        (power(1 + apr_7d / 8760, 8760) - 1) as apy_7d,\n        (power(1 + apr_28d / 8760, 8760) - 1) as apy_28d,\n        (power(1 + apr_24h_pnl / 8760, 8760) - 1) as apy_24h_pnl,\n        (power(1 + apr_7d_pnl / 8760, 8760) - 1) as apy_7d_pnl,\n        (power(1 + apr_28d_pnl / 8760, 8760) - 1) as apy_28d_pnl,\n        (power(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (power(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (power(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards,\n        (\n            power(1 + apr_24h_incentive_rewards / 8760, 8760) - 1\n        ) as apy_24h_incentive_rewards,\n        (\n            power(1 + apr_7d_incentive_rewards / 8760, 8760) - 1\n        ) as apy_7d_incentive_rewards,\n        (\n            power(1 + apr_28d_incentive_rewards / 8760, 8760) - 1\n        ) as apy_28d_incentive_rewards,\n        (\n            power(1 + apr_24h_performance / 8760, 8760) - 1\n        ) as apy_24h_performance,\n        (power(1 + apr_7d_performance / 8760, 8760) - 1) as apy_7d_performance,\n        (\n            power(1 + apr_28d_performance / 8760, 8760) - 1\n        ) as apy_28d_performance,\n        (power(1 + apr_24h_underlying / 8760, 8760) - 1) as apy_24h_underlying,\n        (power(1 + apr_7d_underlying / 8760, 8760) - 1) as apy_7d_underlying,\n        (power(1 + apr_28d_underlying / 8760, 8760) - 1) as apy_28d_underlying\n    from apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    collateral_value,\n    debt,\n    hourly_issuance,\n    hourly_pnl,\n    cumulative_pnl,\n    cumulative_issuance,\n    cumulative_rewards,\n    rewards_usd,\n    hourly_pnl_pct,\n    hourly_rewards_pct,\n    apr_24h,\n    apy_24h,\n    apr_7d,\n    apy_7d,\n    apr_28d,\n    apy_28d,\n    apr_24h_pnl,\n    apy_24h_pnl,\n    apr_7d_pnl,\n    apy_7d_pnl,\n    apr_28d_pnl,\n    apy_28d_pnl,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards,\n    apr_24h_incentive_rewards,\n    apy_24h_incentive_rewards,\n    apr_7d_incentive_rewards,\n    apy_7d_incentive_rewards,\n    apr_28d_incentive_rewards,\n    apy_28d_incentive_rewards,\n    apr_24h_performance,\n    apy_24h_performance,\n    apr_7d_performance,\n    apy_7d_performance,\n    apr_28d_performance,\n    apy_28d_performance,\n    apr_24h_underlying,\n    apy_24h_underlying,\n    apr_7d_underlying,\n    apy_7d_underlying,\n    apr_28d_underlying,\n    apy_28d_underlying\nfrom apy_calculations\norder by ts", "relation_name": "\"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.814098Z", "completed_at": "2025-03-04T12:53:21.833916Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.835326Z", "completed_at": "2025-03-04T12:53:21.835337Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02611517906188965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_token_yields_arbitrum_mainnet_pool_id__True__0.a516b65df4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.820764Z", "completed_at": "2025-03-04T12:53:21.836315Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.843188Z", "completed_at": "2025-03-04T12:53:21.843199Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03239250183105469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_arbitrum_mainnet_apr_24h_underlying.7c2984ec6c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_24h_underlying\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\nwhere apr_24h_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.828018Z", "completed_at": "2025-03-04T12:53:21.841818Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.844253Z", "completed_at": "2025-03-04T12:53:21.844262Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031472206115722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_arbitrum_mainnet_apr_28d_underlying.4ba35f6e70", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_28d_underlying\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\nwhere apr_28d_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.836990Z", "completed_at": "2025-03-04T12:53:21.845176Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.847795Z", "completed_at": "2025-03-04T12:53:21.847803Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014680147171020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_arbitrum_mainnet_apr_7d_underlying.8e34cc270d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_7d_underlying\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\nwhere apr_7d_underlying is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.851158Z", "completed_at": "2025-03-04T12:53:21.867259Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.868903Z", "completed_at": "2025-03-04T12:53:21.868915Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02327561378479004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_arbitrum_mainnet_collateral_type.58435d5c51", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.858109Z", "completed_at": "2025-03-04T12:53:21.869839Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.878031Z", "completed_at": "2025-03-04T12:53:21.878043Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028902769088745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_arbitrum_mainnet_exchange_rate.10af784f3d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exchange_rate\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\nwhere exchange_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.862675Z", "completed_at": "2025-03-04T12:53:21.877321Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.879804Z", "completed_at": "2025-03-04T12:53:21.879813Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.030002832412719727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_arbitrum_mainnet_hourly_exchange_rate_pnl.8c0d0e2af1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_exchange_rate_pnl\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\nwhere hourly_exchange_rate_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.870447Z", "completed_at": "2025-03-04T12:53:21.880638Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.883137Z", "completed_at": "2025-03-04T12:53:21.883148Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025910615921020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_arbitrum_mainnet_pool_id.f89eae592a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.884747Z", "completed_at": "2025-03-04T12:53:21.892782Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.903665Z", "completed_at": "2025-03-04T12:53:21.903677Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024692535400390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_token_yields_arbitrum_mainnet_ts.6743506061", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_token_yields_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.898098Z", "completed_at": "2025-03-04T12:53:21.909511Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.911653Z", "completed_at": "2025-03-04T12:53:21.911661Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022333383560180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_sepolia_hourly_pnl_pct__True__1___1.71d905126b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct >= -1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.893358Z", "completed_at": "2025-03-04T12:53:21.910267Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.913231Z", "completed_at": "2025-03-04T12:53:21.913238Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02925252914428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_sepolia_collateral_value__True__0.fdfbc111a3", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.904830Z", "completed_at": "2025-03-04T12:53:21.912672Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.915433Z", "completed_at": "2025-03-04T12:53:21.915443Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02339482307434082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_sepolia_hourly_rewards_pct__True__1__0.573ad6f791", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.919617Z", "completed_at": "2025-03-04T12:53:21.939822Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.945344Z", "completed_at": "2025-03-04T12:53:21.945359Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03142356872558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_sepolia_pool_id__True__0.a2269ae87b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.927690Z", "completed_at": "2025-03-04T12:53:21.946539Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.949189Z", "completed_at": "2025-03-04T12:53:21.949198Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031647443771362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_sepolia_rewards_usd__True__0.16097a4425", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.935394Z", "completed_at": "2025-03-04T12:53:21.947086Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.950113Z", "completed_at": "2025-03-04T12:53:21.950121Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03125357627868652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_apr_24h.70ceb15524", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_24h\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere apr_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.940667Z", "completed_at": "2025-03-04T12:53:21.948528Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.951671Z", "completed_at": "2025-03-04T12:53:21.951679Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025502681732177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_apr_28d.1273ef3c47", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_28d\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere apr_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.956325Z", "completed_at": "2025-03-04T12:53:21.968618Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.979857Z", "completed_at": "2025-03-04T12:53:21.979871Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028987884521484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_apr_7d.9df14e1133", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_7d\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere apr_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.964084Z", "completed_at": "2025-03-04T12:53:21.980965Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.983626Z", "completed_at": "2025-03-04T12:53:21.983634Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028656005859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_apy_24h.cc6a60bf0d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_24h\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere apy_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.969219Z", "completed_at": "2025-03-04T12:53:21.981703Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.984517Z", "completed_at": "2025-03-04T12:53:21.984525Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028901338577270508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_apy_28d.c90acf86f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_28d\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere apy_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.973629Z", "completed_at": "2025-03-04T12:53:21.983021Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:21.986031Z", "completed_at": "2025-03-04T12:53:21.986038Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024727344512939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_apy_7d.d37e5ab6c3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_7d\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere apy_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.990827Z", "completed_at": "2025-03-04T12:53:22.007182Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.012799Z", "completed_at": "2025-03-04T12:53:22.012814Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027567625045776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_collateral_type.a646b7cb26", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:21.998338Z", "completed_at": "2025-03-04T12:53:22.013859Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.015957Z", "completed_at": "2025-03-04T12:53:22.015968Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026503562927246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_collateral_value.2ada9cf10f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.002928Z", "completed_at": "2025-03-04T12:53:22.014427Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.017412Z", "completed_at": "2025-03-04T12:53:22.017419Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027360916137695312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_cumulative_issuance.574d2a783c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_issuance\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere cumulative_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.007963Z", "completed_at": "2025-03-04T12:53:22.016827Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.019631Z", "completed_at": "2025-03-04T12:53:22.019639Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024065256118774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_cumulative_pnl.4b337f056f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_pnl\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere cumulative_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.023658Z", "completed_at": "2025-03-04T12:53:22.037563Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.048153Z", "completed_at": "2025-03-04T12:53:22.048165Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030010461807250977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_debt.9b76325181", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.032284Z", "completed_at": "2025-03-04T12:53:22.047371Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.049377Z", "completed_at": "2025-03-04T12:53:22.049385Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027765989303588867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_hourly_issuance.18ef26f177", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.038158Z", "completed_at": "2025-03-04T12:53:22.050342Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.052901Z", "completed_at": "2025-03-04T12:53:22.052909Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029987573623657227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_hourly_pnl.d189c809ff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.042786Z", "completed_at": "2025-03-04T12:53:22.050918Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.053786Z", "completed_at": "2025-03-04T12:53:22.053797Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02295684814453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_hourly_pnl_pct.e663f8a83d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.065038Z", "completed_at": "2025-03-04T12:53:22.082081Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.083666Z", "completed_at": "2025-03-04T12:53:22.083678Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028500080108642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_pool_id.58add87a89", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.059844Z", "completed_at": "2025-03-04T12:53:22.082763Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.085215Z", "completed_at": "2025-03-04T12:53:22.085224Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030646324157714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_hourly_rewards_pct.12f359d425", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.071237Z", "completed_at": "2025-03-04T12:53:22.084594Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.087323Z", "completed_at": "2025-03-04T12:53:22.087330Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028844594955444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_rewards_usd.ae2ea707de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.077812Z", "completed_at": "2025-03-04T12:53:22.086086Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.088979Z", "completed_at": "2025-03-04T12:53:22.088987Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029893875122070312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_sepolia_ts.e6b3476db0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_arbitrum_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.094904Z", "completed_at": "2025-03-04T12:53:22.110048Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.116312Z", "completed_at": "2025-03-04T12:53:22.116325Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026647567749023438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_rewards_arbitrum_sepolia", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        collateral_value,\n        rewards_usd,\n        hourly_rewards_pct\n    from\n        \"analytics\".\"prod_arbitrum_sepolia\".\"fct_pool_pnl_hourly_reward_arbitrum_sepolia\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_rewards_pct\n    from\n        pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.reward_token,\n        pnl_hourly.collateral_value,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_rewards_pct,\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards\n    from\n        pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n            and pnl_hourly.reward_token = avg_returns.reward_token\n),\n\napy_calculations as (\n    select\n        *,\n        (POWER(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (POWER(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (POWER(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards\n    from\n        apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    reward_token,\n    collateral_value,\n    rewards_usd,\n    hourly_rewards_pct,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards\nfrom\n    apy_calculations\norder by\n    ts", "relation_name": "\"analytics\".\"prod_arbitrum_sepolia\".\"fct_core_apr_rewards_arbitrum_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.099698Z", "completed_at": "2025-03-04T12:53:22.115583Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.118066Z", "completed_at": "2025-03-04T12:53:22.118074Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027019977569580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_mainnet_collateral_value__True__0.09ad3e4f8e", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.105322Z", "completed_at": "2025-03-04T12:53:22.117360Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.120298Z", "completed_at": "2025-03-04T12:53:22.120305Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027353763580322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_mainnet_hourly_rewards_pct__True__1__0.615edfd299", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.110840Z", "completed_at": "2025-03-04T12:53:22.118967Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.121881Z", "completed_at": "2025-03-04T12:53:22.121889Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02772235870361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_mainnet_liquidation_rewards_usd__True__0.39e9010dfe", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not liquidation_rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.135258Z", "completed_at": "2025-03-04T12:53:22.149646Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.151245Z", "completed_at": "2025-03-04T12:53:22.151257Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02733445167541504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_mainnet_rewards_usd__True__0.cd9a35763d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.140574Z", "completed_at": "2025-03-04T12:53:22.150582Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.152807Z", "completed_at": "2025-03-04T12:53:22.152815Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026961088180541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_apr_24h.5f87709afa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_24h\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere apr_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.127796Z", "completed_at": "2025-03-04T12:53:22.152155Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.155082Z", "completed_at": "2025-03-04T12:53:22.155090Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0324397087097168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_mainnet_pool_id__True__0.6f65c027c2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.145138Z", "completed_at": "2025-03-04T12:53:22.154363Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.157266Z", "completed_at": "2025-03-04T12:53:22.157274Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03020620346069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_apr_28d.69fcad855f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_28d\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere apr_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.161884Z", "completed_at": "2025-03-04T12:53:22.179101Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.184396Z", "completed_at": "2025-03-04T12:53:22.184409Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027912378311157227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_apr_7d.8545f2f45f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_7d\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere apr_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.173047Z", "completed_at": "2025-03-04T12:53:22.185377Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.187443Z", "completed_at": "2025-03-04T12:53:22.187454Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02691054344177246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_apy_28d.384e146fdc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_28d\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere apy_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.167886Z", "completed_at": "2025-03-04T12:53:22.185952Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.188887Z", "completed_at": "2025-03-04T12:53:22.188895Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0301821231842041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_apy_24h.0d59b73826", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_24h\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere apy_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.179841Z", "completed_at": "2025-03-04T12:53:22.188285Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.191076Z", "completed_at": "2025-03-04T12:53:22.191083Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02461838722229004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_apy_7d.d068a55e21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_7d\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere apy_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.195117Z", "completed_at": "2025-03-04T12:53:22.206302Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.212772Z", "completed_at": "2025-03-04T12:53:22.212783Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023113012313842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_collateral_type.6b18aa87ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.201887Z", "completed_at": "2025-03-04T12:53:22.212075Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.218376Z", "completed_at": "2025-03-04T12:53:22.218385Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02533555030822754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_collateral_value.ca0cfe00d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.207632Z", "completed_at": "2025-03-04T12:53:22.219232Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.221403Z", "completed_at": "2025-03-04T12:53:22.221414Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02711009979248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_cumulative_issuance.6b5aeff994", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_issuance\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere cumulative_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.213687Z", "completed_at": "2025-03-04T12:53:22.222234Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.224787Z", "completed_at": "2025-03-04T12:53:22.224796Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02441716194152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_cumulative_liquidation_rewards.7451371132", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_liquidation_rewards\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere cumulative_liquidation_rewards is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.228033Z", "completed_at": "2025-03-04T12:53:22.244482Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.246385Z", "completed_at": "2025-03-04T12:53:22.246395Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023691654205322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_cumulative_pnl.0dfa79c775", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_pnl\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere cumulative_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.234495Z", "completed_at": "2025-03-04T12:53:22.245692Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.252258Z", "completed_at": "2025-03-04T12:53:22.252266Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028896808624267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_cumulative_rewards.f65fe93acf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_rewards\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere cumulative_rewards is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.240258Z", "completed_at": "2025-03-04T12:53:22.251549Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.253974Z", "completed_at": "2025-03-04T12:53:22.253982Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027274131774902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_debt.3003bbaef9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.247351Z", "completed_at": "2025-03-04T12:53:22.255663Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.258259Z", "completed_at": "2025-03-04T12:53:22.258267Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018996000289916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_hourly_issuance.58d7e6392e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.261618Z", "completed_at": "2025-03-04T12:53:22.278082Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.280154Z", "completed_at": "2025-03-04T12:53:22.280164Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023989439010620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_hourly_pnl.aace5f4a92", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.266948Z", "completed_at": "2025-03-04T12:53:22.279590Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.286005Z", "completed_at": "2025-03-04T12:53:22.286013Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02849268913269043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_hourly_pnl_pct.709eae57a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.272066Z", "completed_at": "2025-03-04T12:53:22.285260Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.287709Z", "completed_at": "2025-03-04T12:53:22.287717Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028063535690307617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_hourly_rewards_pct.e5170bb035", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.281113Z", "completed_at": "2025-03-04T12:53:22.288532Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.291132Z", "completed_at": "2025-03-04T12:53:22.291143Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019977569580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_liquidation_rewards_usd.f34e42ea45", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect liquidation_rewards_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere liquidation_rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.295128Z", "completed_at": "2025-03-04T12:53:22.309714Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.311308Z", "completed_at": "2025-03-04T12:53:22.311318Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021586179733276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_pool_id.ec4f69201c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.300809Z", "completed_at": "2025-03-04T12:53:22.312214Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.318798Z", "completed_at": "2025-03-04T12:53:22.318806Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026892900466918945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_rewards_usd.9770eed99e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.305258Z", "completed_at": "2025-03-04T12:53:22.312805Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.319755Z", "completed_at": "2025-03-04T12:53:22.319762Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026632308959960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_mainnet_ts.fa672a8124", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_mainnet\".\"fct_core_apr_base_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.313381Z", "completed_at": "2025-03-04T12:53:22.322055Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.324608Z", "completed_at": "2025-03-04T12:53:22.324615Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02455449104309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_sepolia_collateral_value__True__0.50d2b91f46", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.326072Z", "completed_at": "2025-03-04T12:53:22.339192Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.345254Z", "completed_at": "2025-03-04T12:53:22.345264Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02460503578186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_sepolia_hourly_rewards_pct__True__1__0.6c15e31d20", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.334625Z", "completed_at": "2025-03-04T12:53:22.346236Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.348877Z", "completed_at": "2025-03-04T12:53:22.348888Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025043010711669922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_sepolia_pool_id__True__0.dca944c591", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.340585Z", "completed_at": "2025-03-04T12:53:22.348264Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.354983Z", "completed_at": "2025-03-04T12:53:22.354992Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02966141700744629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_base_sepolia_rewards_usd__True__0.090c92559d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.349778Z", "completed_at": "2025-03-04T12:53:22.357270Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.363546Z", "completed_at": "2025-03-04T12:53:22.363556Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023767471313476562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_apr_24h.275116a918", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_24h\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere apr_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.359146Z", "completed_at": "2025-03-04T12:53:22.367161Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.378963Z", "completed_at": "2025-03-04T12:53:22.378973Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024922609329223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_apr_28d.e099bf170a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_28d\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere apr_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.367769Z", "completed_at": "2025-03-04T12:53:22.380981Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.387248Z", "completed_at": "2025-03-04T12:53:22.387258Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.028886079788208008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_apr_7d.cfc4ec14a3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_7d\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere apr_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.372841Z", "completed_at": "2025-03-04T12:53:22.382179Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.389151Z", "completed_at": "2025-03-04T12:53:22.389162Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024771928787231445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_apy_24h.b04b5222f4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_24h\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere apy_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.382832Z", "completed_at": "2025-03-04T12:53:22.391812Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.394453Z", "completed_at": "2025-03-04T12:53:22.394482Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022416353225708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_apy_28d.1e8e0632e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_28d\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere apy_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.395342Z", "completed_at": "2025-03-04T12:53:22.407378Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.413204Z", "completed_at": "2025-03-04T12:53:22.413215Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025158405303955078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_apy_7d.45a63722a9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_7d\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere apy_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.402893Z", "completed_at": "2025-03-04T12:53:22.414095Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.416130Z", "completed_at": "2025-03-04T12:53:22.416138Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022433757781982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_collateral_type.7a5590eb90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.408653Z", "completed_at": "2025-03-04T12:53:22.417105Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.425304Z", "completed_at": "2025-03-04T12:53:22.425316Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02523016929626465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_collateral_value.6b7be2743f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.417807Z", "completed_at": "2025-03-04T12:53:22.427620Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.434030Z", "completed_at": "2025-03-04T12:53:22.434042Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02618718147277832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_cumulative_issuance.5f3ec9bec1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_issuance\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere cumulative_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.428883Z", "completed_at": "2025-03-04T12:53:22.440054Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.442168Z", "completed_at": "2025-03-04T12:53:22.442177Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0183870792388916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_cumulative_pnl.ce3ab4e606", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_pnl\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere cumulative_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.435716Z", "completed_at": "2025-03-04T12:53:22.443730Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.450066Z", "completed_at": "2025-03-04T12:53:22.450075Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023190975189208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_debt.fadc5bb67a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.444301Z", "completed_at": "2025-03-04T12:53:22.451735Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.458110Z", "completed_at": "2025-03-04T12:53:22.458119Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02327275276184082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_hourly_issuance.2fcf5254d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.452310Z", "completed_at": "2025-03-04T12:53:22.459798Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.466099Z", "completed_at": "2025-03-04T12:53:22.466108Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023093223571777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_hourly_pnl.75c8c54189", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.460367Z", "completed_at": "2025-03-04T12:53:22.467812Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.476051Z", "completed_at": "2025-03-04T12:53:22.476060Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025097370147705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_hourly_pnl_pct.d827dc6b5f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.468365Z", "completed_at": "2025-03-04T12:53:22.482136Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.484324Z", "completed_at": "2025-03-04T12:53:22.484333Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025306224822998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_hourly_rewards_pct.adeb7db337", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.477799Z", "completed_at": "2025-03-04T12:53:22.485893Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.492504Z", "completed_at": "2025-03-04T12:53:22.492515Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02552962303161621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_pool_id.a2ea5cc601", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.486490Z", "completed_at": "2025-03-04T12:53:22.498774Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.500899Z", "completed_at": "2025-03-04T12:53:22.500908Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023936748504638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_rewards_usd.0b9d66ba19", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.494234Z", "completed_at": "2025-03-04T12:53:22.501801Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.507593Z", "completed_at": "2025-03-04T12:53:22.507603Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022437095642089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_base_sepolia_ts.2cc1721326", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_base_sepolia\".\"fct_core_apr_base_sepolia\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.503052Z", "completed_at": "2025-03-04T12:53:22.510531Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.517342Z", "completed_at": "2025-03-04T12:53:22.517354Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.023909568786621094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.synthetix.fct_core_apr_rewards_base_sepolia", "compiled": true, "compiled_code": "\n\nwith pnl_hourly as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        collateral_value,\n        rewards_usd,\n        hourly_rewards_pct\n    from\n        \"analytics\".\"prod_base_sepolia\".\"fct_pool_pnl_hourly_reward_base_sepolia\"\n),\n\navg_returns as (\n    select\n        ts,\n        pool_id,\n        collateral_type,\n        reward_token,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '24 HOURS' preceding\n            and current row\n        ) as avg_24h_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '7 DAYS' preceding\n            and current row\n        ) as avg_7d_rewards_pct,\n        AVG(\n            hourly_rewards_pct\n        ) over (\n            partition by\n                pool_id,\n                collateral_type,\n                reward_token\n            order by\n                ts\n            range between interval '28 DAYS' preceding\n            and current row\n        ) as avg_28d_rewards_pct\n    from\n        pnl_hourly\n),\n\napr_calculations as (\n    select\n        pnl_hourly.ts,\n        pnl_hourly.pool_id,\n        pnl_hourly.collateral_type,\n        pnl_hourly.reward_token,\n        pnl_hourly.collateral_value,\n        pnl_hourly.rewards_usd,\n        pnl_hourly.hourly_rewards_pct,\n        avg_returns.avg_24h_rewards_pct * 24 * 365 as apr_24h_rewards,\n        avg_returns.avg_7d_rewards_pct * 24 * 365 as apr_7d_rewards,\n        avg_returns.avg_28d_rewards_pct * 24 * 365 as apr_28d_rewards\n    from\n        pnl_hourly\n    inner join avg_returns\n        on\n            pnl_hourly.ts = avg_returns.ts\n            and pnl_hourly.pool_id = avg_returns.pool_id\n            and pnl_hourly.collateral_type = avg_returns.collateral_type\n            and pnl_hourly.reward_token = avg_returns.reward_token\n),\n\napy_calculations as (\n    select\n        *,\n        (POWER(1 + apr_24h_rewards / 8760, 8760) - 1) as apy_24h_rewards,\n        (POWER(1 + apr_7d_rewards / 8760, 8760) - 1) as apy_7d_rewards,\n        (POWER(1 + apr_28d_rewards / 8760, 8760) - 1) as apy_28d_rewards\n    from\n        apr_calculations\n)\n\nselect\n    ts,\n    pool_id,\n    collateral_type,\n    reward_token,\n    collateral_value,\n    rewards_usd,\n    hourly_rewards_pct,\n    apr_24h_rewards,\n    apy_24h_rewards,\n    apr_7d_rewards,\n    apy_7d_rewards,\n    apr_28d_rewards,\n    apy_28d_rewards\nfrom\n    apy_calculations\norder by\n    ts", "relation_name": "\"analytics\".\"prod_base_sepolia\".\"fct_core_apr_rewards_base_sepolia\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.511172Z", "completed_at": "2025-03-04T12:53:22.524953Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.526982Z", "completed_at": "2025-03-04T12:53:22.526991Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024704694747924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_mainnet_collateral_value__True__0.ffb99e9e0a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not collateral_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.518374Z", "completed_at": "2025-03-04T12:53:22.527888Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.534401Z", "completed_at": "2025-03-04T12:53:22.534409Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02530646324157715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_mainnet_hourly_pnl_pct__True__1___1.1b8022dfc1", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct >= -1\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_pnl_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.528495Z", "completed_at": "2025-03-04T12:53:22.536721Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.543236Z", "completed_at": "2025-03-04T12:53:22.543244Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026644468307495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_mainnet_hourly_rewards_pct__True__1__0.f1335e174b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not hourly_rewards_pct <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.537983Z", "completed_at": "2025-03-04T12:53:22.550344Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.552412Z", "completed_at": "2025-03-04T12:53:22.552421Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019488811492919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_mainnet_pool_id__True__0.8a8c4f782b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not pool_id >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.544971Z", "completed_at": "2025-03-04T12:53:22.553280Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.559751Z", "completed_at": "2025-03-04T12:53:22.559760Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023750782012939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.dbt_utils_accepted_range_fct_core_apr_arbitrum_mainnet_rewards_usd__True__0.1ddf38024d", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not rewards_usd >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.553879Z", "completed_at": "2025-03-04T12:53:22.565237Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.567433Z", "completed_at": "2025-03-04T12:53:22.567442Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023435354232788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_apr_24h.8106520838", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_24h\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere apr_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.560796Z", "completed_at": "2025-03-04T12:53:22.568356Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.570907Z", "completed_at": "2025-03-04T12:53:22.570915Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019273042678833008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_apr_28d.964b18810e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_28d\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere apr_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.571810Z", "completed_at": "2025-03-04T12:53:22.584980Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.586953Z", "completed_at": "2025-03-04T12:53:22.586963Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021234512329101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_apr_7d.06f4c6a6e1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apr_7d\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere apr_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.580583Z", "completed_at": "2025-03-04T12:53:22.592319Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.595236Z", "completed_at": "2025-03-04T12:53:22.595245Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.025786876678466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_apy_24h.83d96a1a08", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_24h\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere apy_24h is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.587932Z", "completed_at": "2025-03-04T12:53:22.594643Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.601649Z", "completed_at": "2025-03-04T12:53:22.601660Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022673606872558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_apy_28d.fa829d9ef7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_28d\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere apy_28d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.596153Z", "completed_at": "2025-03-04T12:53:22.604680Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.611599Z", "completed_at": "2025-03-04T12:53:22.611612Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025559425354003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_apy_7d.cf96fd9428", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect apy_7d\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere apy_7d is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.605971Z", "completed_at": "2025-03-04T12:53:22.613795Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.626433Z", "completed_at": "2025-03-04T12:53:22.626445Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025652170181274414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_collateral_type.063adda35b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_type\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere collateral_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.619831Z", "completed_at": "2025-03-04T12:53:22.629799Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.636059Z", "completed_at": "2025-03-04T12:53:22.636070Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025279521942138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_cumulative_issuance.e1798a309e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_issuance\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere cumulative_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.615080Z", "completed_at": "2025-03-04T12:53:22.631066Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.637589Z", "completed_at": "2025-03-04T12:53:22.637596Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03238344192504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_collateral_value.21b8ffe226", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect collateral_value\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere collateral_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.631682Z", "completed_at": "2025-03-04T12:53:22.643690Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.645877Z", "completed_at": "2025-03-04T12:53:22.645885Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0184323787689209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_cumulative_pnl.3aeb9de820", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_pnl\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere cumulative_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.639332Z", "completed_at": "2025-03-04T12:53:22.646769Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.649238Z", "completed_at": "2025-03-04T12:53:22.649248Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018851041793823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_cumulative_rewards.24a594a996", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cumulative_rewards\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere cumulative_rewards is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.650725Z", "completed_at": "2025-03-04T12:53:22.662023Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.668403Z", "completed_at": "2025-03-04T12:53:22.668414Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02344346046447754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_debt.3dc045078a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect debt\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere debt is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.656831Z", "completed_at": "2025-03-04T12:53:22.667694Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.670062Z", "completed_at": "2025-03-04T12:53:22.670070Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.022826433181762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_hourly_issuance.80329841e3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_issuance\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere hourly_issuance is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.663390Z", "completed_at": "2025-03-04T12:53:22.671634Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.680326Z", "completed_at": "2025-03-04T12:53:22.680335Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025127410888671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_hourly_pnl.cca97779a8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere hourly_pnl is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.672283Z", "completed_at": "2025-03-04T12:53:22.682031Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.684457Z", "completed_at": "2025-03-04T12:53:22.684482Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021956920623779297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_hourly_pnl_pct.fb9fdebdde", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_pnl_pct\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere hourly_pnl_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.685381Z", "completed_at": "2025-03-04T12:53:22.696449Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.702863Z", "completed_at": "2025-03-04T12:53:22.702873Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02335834503173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_hourly_rewards_pct.c370595c99", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hourly_rewards_pct\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere hourly_rewards_pct is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.690651Z", "completed_at": "2025-03-04T12:53:22.697844Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.704585Z", "completed_at": "2025-03-04T12:53:22.704594Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.023321866989135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_pool_id.6f62001f11", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect pool_id\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere pool_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.698413Z", "completed_at": "2025-03-04T12:53:22.711477Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.712092Z", "completed_at": "2025-03-04T12:53:22.712099Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.022243261337280273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_rewards_usd.382bc038bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rewards_usd\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere rewards_usd is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-04T12:53:22.705827Z", "completed_at": "2025-03-04T12:53:22.713017Z"}, {"name": "execute", "started_at": "2025-03-04T12:53:22.713740Z", "completed_at": "2025-03-04T12:53:22.713747Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016668319702148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.synthetix.not_null_fct_core_apr_arbitrum_mainnet_ts.97e8b55304", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ts\nfrom \"analytics\".\"prod_arbitrum_mainnet\".\"fct_core_apr_arbitrum_mainnet\"\nwhere ts is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 47.21331262588501, "args": {"compile": true, "quiet": false, "invocation_command": "dbt docs generate --profiles-dir profiles --profile synthetix-host", "partial_parse": true, "require_batched_execution_for_custom_microbatch_strategy": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_path": "/home/runner/work/data/data/transformers/synthetix/logs", "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "cache_selected_only": false, "skip_nodes_if_on_run_start_fails": false, "strict_mode": false, "write_json": true, "log_format": "default", "macro_debugging": false, "use_colors": true, "version_check": true, "require_yaml_configuration_for_mf_time_spines": false, "use_colors_file": true, "populate_cache": true, "introspect": true, "project_dir": "/home/runner/work/data/data/transformers/synthetix", "show_resource_report": false, "require_resource_names_without_spaces": false, "profile": "synthetix-host", "state_modified_compare_vars": false, "print": true, "warn_error_options": {"include": [], "exclude": []}, "require_nested_cumulative_type_params": false, "defer": false, "favor_state": false, "exclude": [], "select": [], "printer_width": 80, "indirect_selection": "eager", "profiles_dir": "profiles", "source_freshness_run_project_hooks": false, "empty_catalog": false, "state_modified_compare_more_unrendered_values": false, "static_parser": true, "which": "generate", "vars": {}, "log_level_file": "debug", "send_anonymous_usage_stats": true, "static": false, "log_level": "info", "log_format_file": "debug"}}